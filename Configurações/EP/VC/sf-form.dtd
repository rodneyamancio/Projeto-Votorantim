<!--

$Id$

$HeadURL$

SuccessFactors confidential and proprietary.

Copyright 2005 SuccessFactors, Inc. 999 Baker Way Suite 500
San Mateo, CA 94404, U.S.A.  All rights reserved.

This product or document is protected by copyright and distributed
under licenses restricting its use, copying, distribution, and
decompilation.  No part of this product or documentation may be
reproduced in any form by any means without prior written
authorization of SuccessFactors and its licensors, if any.

DOCUMENTATION IS PROVIDED "AS IS" AND ALL EXPRESS OR IMPLIED
CONDITIONS, REPRESENTATIONS AND WARRANTIES, INCLUDING ANY
IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
PURPOSE OR NON-INFRINGEMENT, ARE DISCLAIMED, EXCEPT
TO THE EXTENT THAT SUCH DISCLAIMERS ARE HELD TO BE LEGALLY
INVALID.

-->
<!--
This DTD defines different types of SFV4 forms.
-->
<!ELEMENT sf-form (fm-meta?, (sf-compensation | sf-succession | sf-360 | sf-note | sf-pminfo | sf-pmreview | sf-survey | sf-jobreq | job-req | performance-profile | sf-process | sf-offerDetail | offer-detail))>
<!ATTLIST sf-form
	locale CDATA "en_US"
	version-number CDATA #IMPLIED
>
<!--
This element contains any configurable options for any form sections.
-->
<!--
Added tag normalize-section-rating as child for fm-sect-config for PMT-3374 
-->

<!ELEMENT fm-sect-config (section-color?, rating-label?, rating-label-others?, default-rating?, unrated-rating?, weight-total?, hidden-strength-threshold?, blind-spot-threshold?, rating-bar-color?, item-weights?, hide-weight-percent-sign?, weight-label?, show-points?, section-comments-label?, section-comments-blank-indicator?, section-manager-comments-label?, section-subject-comments-label?, comments-blank-indicator?, manager-comments-label?, subject-comments-label?, calculated-rating-label?, rating-display-format?, section-permission*, section-owner*, required-fields*, calibration-mode?, show-job-roles?, default-section-comments-label?, default-item-comments-label?, weight-total-option?, num-decimal-places?, publish-button-label?, publish-button-warning?, field-publishing*, section-rating-calc?, section-item-rating-calc?, ez-rater?, normalize-section-rating?)>
<!--
This element defines a section owner that controls the section in the given
route-step.

For example, if you want only EM to see and publish a section in a
collaborative routing step, then do this:

  <section-owner>
    <role-name>EM</role-name>
    <route-step stepid="CollaborativeStep" />
  </section-owner>

Once the manager hit the "publish" button, the content will be available to all other users in that particular routing step.

IMPORTANT: 1. section-owner should be used only in the objective and competency sections. 
           2. You can attach only ONE route-step to a <section-owner> element.
              If you want to enforce section ownership for the same user in
              more than one routing step, define it separately.
              It's because we use section-owner's "published" attribute to
              track if a section has been published in a particular routing
              step.
-->
<!ELEMENT section-owner (role-name*, route-step)>
<!--
This attribute is only used for flagging if a section owner has published the
section or not.  Any "published" section-owner will be ignored by the
system when constructing the active section owners.
"published" will be set to "true" when the owner publishes the section.
-->
<!ATTLIST section-owner
	published (true | false) "false"
>
<!--
Label for the "Publish Section Content" button.  Default is "Publish Content".
-->
<!ELEMENT publish-button-label (#PCDATA)>
<!ATTLIST publish-button-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Warning message when hitting the publish button if any.
-->
<!ELEMENT publish-button-warning (#PCDATA)>
<!ATTLIST publish-button-warning
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
If calibration-mode is defined, together with enabling Calibration Mode on
a form template level, a user can review and provide feedback on the section
items for multiple subjects (from multiple documents of the same type) on
a single screen at the same time.
-->
<!ELEMENT calibration-mode EMPTY>
<!--
Based on Thelen feature enhancement requirements, all job roles associated with
the user's jobcode need to be displayed below the competency's description.
This optional element, if present, will result in displaying the job role(s).
-->
<!ELEMENT show-job-roles EMPTY>
<!ELEMENT item-weights (item-weight-floor?, item-weight-ceiling?)>
<!-- The min value for an item weight -->
<!ELEMENT item-weight-floor (#PCDATA)>
<!-- The max value for an item weight -->
<!ELEMENT item-weight-ceiling (#PCDATA)>
<!-- The color of the section -->
<!ELEMENT section-color (#PCDATA)>
<!-- The rating label -->
<!ELEMENT rating-label (#PCDATA)>
<!ATTLIST rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- The weight label -->
<!ELEMENT weight-label (#PCDATA)>
<!ATTLIST weight-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Hides the % sign next to the weight for items in this section.
Not supported in V1 form renderer.
Can be applied to:
- a competency section,
- an objective section,
- a summary section,
- an objective/competency summary section (XML: objcomp-summary-sect)

For example, a competency section with this in it will hide
percent signs in the following places:
- the competency section summary at the top of the section
- each competency detail in the competency section
- each competency item summary in the Summary section
- each competency item summary in the objective/competency summary section

To hide the % signs next to the *section* weights in the summary section,
put this tag in the summary section's fm-sect-config.
-->
<!ELEMENT hide-weight-percent-sign EMPTY>
<!--
For Generali.  Works only for V2 objective sections.

Shows "item points" to the left of each item rating
in the objective section summary and in the summary section.

item points = item rating * item weight / expected section weight<br>
Expected section weight is controlled by "weight-total" XML in "fm-sect-config"
Defaults to 0 if any of the terms is undefined.<br>
Rounds to the standard 2 decimals.
-->
<!ELEMENT show-points EMPTY>
<!-- The section comments label -->
<!ELEMENT section-comments-label (#PCDATA)>
<!ATTLIST section-comments-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- The default item comments label -->
<!ELEMENT default-item-comments-label (#PCDATA)>
<!ATTLIST default-item-comments-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- The default section comments label -->
<!ELEMENT default-section-comments-label (#PCDATA)>
<!ATTLIST default-section-comments-label 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- The text to indicate that comments is blank -->
<!ELEMENT section-comments-blank-indicator (#PCDATA)>
<!-- The section manager comments label -->
<!ELEMENT section-manager-comments-label (#PCDATA)>
<!ATTLIST section-manager-comments-label 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- The section subject comments label -->
<!ELEMENT section-subject-comments-label (#PCDATA)>
<!ATTLIST section-subject-comments-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Custom calculated rating label text.
Used by behavior-based competency calculation.
-->
<!ELEMENT calculated-rating-label (#PCDATA)>
<!ATTLIST calculated-rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Designates the display format for ratings throughout the section.
ratingWithMax : (DEFAULT) a numeric rating in the format of xx.y / aa.b where xx.y
                is the rating and aa.b is the max rating.
ratingOnly    : Numeric format without the possible maximum rating: xx.y
-->
<!ELEMENT rating-display-format (#PCDATA)>
<!-- The text to indicate that comments is blank -->
<!ELEMENT comments-blank-indicator (#PCDATA)>
<!-- The manager comments label -->
<!ELEMENT manager-comments-label (#PCDATA)>
<!ATTLIST manager-comments-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- The subject comments label -->
<!ELEMENT subject-comments-label (#PCDATA)>
<!ATTLIST subject-comments-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- The rating label for ratings not included for calculation, provided together with the reviewer's comments -->
<!ELEMENT rating-label-others (#PCDATA)>
<!ATTLIST rating-label-others
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- The default rating label for any unrated items (non-localized) -->
<!ELEMENT default-rating (#PCDATA)>
<!-- The default rating label for any unrated items (localized) -->
<!ATTLIST default-rating
	lang CDATA #IMPLIED
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED	
>

<!--
The optional unrated rating label added to the rating scale.  This optional
rating is treated as unrated like the <default-rating> in terms of rating value.

Example:

<default-rating>Choose One</default-rating>
<unrated-rating>Not Observed</unrated-rating>

Given a scale like this:

1.0 Does Not Meet
2.0 Meets
3.0 Exceeds

You will see the following rating scale display on form:

Choose One
Not Observed
1.0 Does Not Meet
2.0 Meets
3.0 Exceeds

Or the following if show-value is set to false in the section scale:

Choose One
Not Observed
Does Not Meet
Meets
Exceeds

Then the user can either leave it unchanged or select a rating.  If left
unchanged, it will show "Choose One" and the actual rating will be
null (unrated).  If "Not Observed" (the <unrated-rating>) is selected, it
will show "Not Observed" and the actual rating will be treated as null and
unrated as well.

In Document Export, <default-rating> is still being exported as a blank value
in the rating column.  If <unrated-rating> is explicitly selected, then its
string value is being exported as the rating in the rating column.

-->
<!ELEMENT unrated-rating (#PCDATA)>
<!ATTLIST unrated-rating
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
The weight total for the section: negative number or null means ignored the
validation of total weights.
-->
<!ELEMENT weight-total (#PCDATA)>
<!-- Blind Spot Rating Threhold -->
<!ELEMENT blind-spot-threshold (#PCDATA)>
<!-- Hidden Strength Rating Threhold -->
<!ELEMENT hidden-strength-threshold (#PCDATA)>
<!-- Rating Bar Display Coler -->
<!ELEMENT rating-bar-color (#PCDATA)>
<!--
    Requested by Wachovia.
    This option is only relevant if weight-total is also specified. This is an enforcement option for item weight totals.
    Valid values are "enforce" or "warn"; default is "warn". This determines whether an error (user can not proceed and must
    fix the weights) or warning (user is warned but can proceed if s/he wishes) occurs appears when the actual weight total
    does not match the specified weight-total value in the template.
 -->
<!ELEMENT weight-total-option (#PCDATA)>
<!--
    This specifies how many decimal places should be used for goal and competency ratings.
 -->
<!ELEMENT num-decimal-places (#PCDATA)>
<!-- The section   rating calculator-->
<!ELEMENT section-rating-calc (#PCDATA)>
<!-- The section item  rating calculator-->
<!ELEMENT section-item-rating-calc (#PCDATA)>
<!-- The ez-rate settings. Used to disable the ez-rater from showing the gap analysis-->
<!ELEMENT ez-rater EMPTY>
<!ATTLIST ez-rater
	show-gap (true | false) "true"
>
<!-- PMT-3374 START -->
<!--
The normalize-section-rating element can be used to specify if rating should be normalized 
or left non-normalized for section level score calculation.
The values allowed are "true", "false". Default "true". 
-->

<!ELEMENT normalize-section-rating (#PCDATA)>
<!-- PMT-3374 END -->

<!--*****************************-->
<!-- SFForm: succession planning -->
<!--*****************************-->
<!ELEMENT sf-succession (reviewinfo-sect?, introduction-sect?, successor-sect?, custom-sect?, job-desc-sect?, signature-sect?)>
<!--
spellchk - OBSOLETE: replaced by form_template_status set through Form Template Management UI; true if allow spellcheck; default is false
-->
<!ATTLIST sf-succession
	spellchk (true | false) "false"
>
<!-- Successor Section. -->
<!ELEMENT successor-sect (succ-sect-name, succ-sect-intro?, fm-sect-config?, action-permission*, fm-sect-scale?, succ-jobrole?, sect-fm-elements?, fm-successor*, fm-comment*, incumbent*)>
<!-- Attributes for Succession Planning Section. -->
<!-- 
index - Section's display order within the form;
mgt-only - true if only manager/hr can see this section;
no-rate - false if show rating scale for items within the section;
summ-opt - maximum number of section items for section summary to be displayed; to turn on section summary at all times, then make it 0; to turn off the section summary at all times, then make it a big number, say 99999;
rating-opt - 0: default, no ratings next to each user's comment;
             1: display rating next to subject's comment;
             2: display rating next to all evaluators' comments;
cmt-opt - 0: Show both item and section comments;
          1: Show only section comments, no item comments;
          2: Show only item comments, no section comments;
          3: Show no item and section comments;
display-mode - classic: v10 version of adding successors (default)
             - drag_n_drop: v11 version of choosing successors
-->
<!ATTLIST successor-sect
	index CDATA #REQUIRED
	mgt-only (true | false) "false"
	no-rate (true | false) "false"
	summ-opt CDATA "0"
	rating-opt CDATA "0"
	display-mode (classic | drag_n_drop) "classic"
	cmt-opt (0 | 1 | 2 | 3) "0"
>
<!-- Succession Planning Section Name if any. -->
<!ELEMENT succ-sect-name (#PCDATA)>
<!ATTLIST succ-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- Succession Planning Section Introduction if any. -->
<!ELEMENT succ-sect-intro (#PCDATA)>
<!ATTLIST succ-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- Succession Planning Section Job Role. -->
<!ELEMENT succ-jobrole (role-id, role-name?, role-desc?, job-code?, role-comp*, job-code-role-map*)>
<!-- Job Role Id -->
<!ELEMENT role-id (#PCDATA)>
<!-- Job Role Name.  Also field-permission and action-permission role name -->
<!ELEMENT role-name (#PCDATA)>
<!-- Job Role Description -->
<!ELEMENT role-desc (#PCDATA)>
<!-- Job Code for the Job Role -->
<!ELEMENT job-code (#PCDATA)>
<!-- Job Code Role mappings -->
<!ELEMENT job-code-role-map (map-job-code, map-module)>
<!-- job code of Role mapping -->
<!ELEMENT map-job-code (#PCDATA)>
<!-- Module of job code Role map -->
<!ELEMENT map-module (#PCDATA)>
<!-- Competency for the Job Role -->
<!ELEMENT role-comp (role-comp-id, role-comp-name?, role-comp-desc?)>
<!-- competency Id -->
<!ELEMENT role-comp-id (#PCDATA)>
<!-- competency name -->
<!ELEMENT role-comp-name (#PCDATA)>
<!-- competency description -->
<!ELEMENT role-comp-desc (#PCDATA)>
<!-- Individual user selected for the Succession Planning document. -->
<!ELEMENT fm-successor (succ-userid, succ-lname?, succ-fname?, succ-mi?, succ-dept?, succ-div?, succ-loc?, succ-hiredate?, succ-rating?, fm-comment*, fm-element*)>
<!--mask-->
<!--succ-userid:user_sysinfo:users_sys_id-->
<!--succ-lname:users_sysinfo:users_sys_lastname-->
<!--succ-fname:users_sysinfo:users_sys_firstname-->
<!--succ-mi:users_sysinfo:users_sys_mi-->
<!--succ-dept:users_sysinfo:users_sys_department-->
<!--succ-div:users_sysinfo:users_sys_division-->
<!--succ-loc:users_sysinfo:users_sys_location-->
<!--succ-hiredate:users_sysinfo:users_sys_hiredate-->
<!--succ-rating-->
<!-- Successor attributes. -->
<!ATTLIST fm-successor
	index CDATA #REQUIRED
>
<!-- Proposed successor's user Id -->
<!ELEMENT succ-userid (#PCDATA)>
<!-- Proposed successor's last name -->
<!ELEMENT succ-lname (#PCDATA)>
<!-- Proposed successor's first name -->
<!ELEMENT succ-fname (#PCDATA)>
<!-- Proposed successor's middle name -->
<!ELEMENT succ-mi (#PCDATA)>
<!-- Proposed successor's department -->
<!ELEMENT succ-dept (#PCDATA)>
<!-- Proposed successor's division -->
<!ELEMENT succ-div (#PCDATA)>
<!-- Proposed successor's location -->
<!ELEMENT succ-loc (#PCDATA)>
<!-- Proposed successor's hire date -->
<!ELEMENT succ-hiredate (#PCDATA)>
<!-- Proposed successor's rating -->
<!ELEMENT succ-rating (#PCDATA)>
<!-- Incumbent information -->
<!ELEMENT incumbent (user-id, user-info-lastname?, user-info-firstname?, user-info-mi?, user-info-jobcode?)>
<!--*************-->
<!-- SFForm: Survey -->
<!--*************-->
<!ELEMENT sf-survey (rater-sect?, reviewinfo-sect?, introduction-sect?, competency-sect*)>
<!--
This attribute determines if any rating calculation is needed in this
form.
no-calc - true if not to display calculated overall form rating
anonym - true if not to display username in comment fields.
spellchk - OBSOLETE: replaced by form_template_status set through Form Template Management UI; true if allow spellcheck; default is false
overall-rating - true if it doesn't allow document completion or routing to
                 signature stage if overall rating is not valida.
weight-lockdown - true if not allowing users to modify section weights if applicable
show-weight - true if display section weights if applicable
unmet-threshold-action - whether not meeting the threshold results in a drop or rollup of the category/categories
-->
<!ATTLIST sf-survey
	no-calc (true | false) "false"
	anonym (true | false) "true"
	spellchk (true | false) "false"
	overall-rating (true | false) "true"
	weight-lockdown (true | false) "false"
	show-weight (true | false) "true"
	unmet-threshold-action (drop | rollup) "drop"
>
<!--*************-->
<!-- SFForm: 360 -->
<!--*************-->
<!ELEMENT sf-360 (instruction-sect?, rater-sect?, userinfo-sect?, reviewinfo-sect?, reviewer-sect?, introduction-sect?, objective-sect*, competency-sect*, custom-sect?, summary-sect?, signature-sect?, job-desc-sect?, objcomp-summary-sect?)>
<!--
This attribute determines if any rating calculation is needed in this
form.
no-calc - true if not to display calculated overall form rating
anonym - true if not to display username in comment fields.
spellchk - OBSOLETE: replaced by form_template_status set through Form Template Management UI; true if allow spellcheck; default is false
overall-rating - true if it doesn't allow document completion or routing to
                 signature stage if overall rating is not valida.
recall-enabled - true if participants are allowed to recall the completed individual forms
weight-lockdown - true if not allowing users to modify section weights if applicable
show-weight - true if display section weights if applicable
unmet-threshold-action - whether not meeting the threshold results in a drop or rollup of the category/categories
rating-rollup-type - if the unmet-threshold-action is rollup, user can specify either a circular or u-turn rollup
-->
<!ATTLIST sf-360
	no-calc (true | false) "false"
	anonym (true | false) "true"
	spellchk (true | false) "false"
	overall-rating (true | false) "true"
	recall-enabled (true | false) "false"
	weight-lockdown (true | false) "false"
	show-weight (true | false) "true"
	unmet-threshold-action (drop | rollup) "drop"
	rating-rollup-type (circular | uturn) "circular"
	embed-cdp-goals (true | false) "false"
	embed-learning (true | false) "false"
>
<!--
360 Summary Report Instruction section (only appears on the Summary Report - NOT THE FORM).
-->
<!ELEMENT instruction-sect (#PCDATA)>
<!ATTLIST instruction-sect
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Participant List Section
-->
<!ELEMENT rater-sect (rater-sect-name, rater-sect-intro?, rater-sect-type?, project-template-id?, fm-sect-config?, rater-config?, rater*)>
<!--
Attributes for rater-sect
-->
<!ATTLIST rater-sect
	index CDATA #REQUIRED
	mgt-only (true | false) "false"
>
<!--
Participant list section name
-->
<!ELEMENT rater-sect-name (#PCDATA)>
<!ATTLIST rater-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Participant list section introduction if any
-->
<!ELEMENT rater-sect-intro (#PCDATA)>
<!ATTLIST rater-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Participant list section type if any: USERS (default), PROJECTS (for Project Teams).
-->
<!ELEMENT rater-sect-type (#PCDATA)>
<!--
Project Template Id for PROJECTS section type.  Each Participant List Section
can only be mapped to one PTM template.
-->
<!ELEMENT project-template-id (#PCDATA)>
<!--
Configurations on 360 raters such as min/max raters allowed, error/warning
messages, default raters, etc.
-->
<!ELEMENT rater-config (date-column-format?, rater-column*, min-rater-count?, (min-error-msg | min-warning-msg)?, max-rater-count?, (max-error-msg | max-warning-msg)?, min-rater-complete-count?, (min-rater-complete-error-msg | min-rater-complete-warning-msg)?, (rater-cat-min-err-msg | rater-cat-min-warn-msg)?, (rater-cat-max-err-msg | rater-cat-max-warn-msg)?, rater-filter-key?, rater-filter-value*, default-rater*)>
<!--
Date format to be used for formatting date fields.
-->
<!ELEMENT date-column-format (#PCDATA)>
<!--
Supported keys are all of the user data fields defined in UserInfoBean.java.
In addition, it also supports any fields defined in a Project Teams template
if rater-sect-type is PROJECTS.
The key "CATEGORY" is reserved for Category column.  It will be displayed
only if there is category defined.
-->
<!ELEMENT rater-column (#PCDATA)>
<!ATTLIST rater-column
	key CDATA #REQUIRED
>
<!--
Minimum number of participants if specified.
-->
<!ELEMENT min-rater-count (#PCDATA)>
<!--
Error message for not meeting min-rater-count.
e.g., "The number of participants - [[ACTUAL_COUNT]] - does not meet the minimum of [[EXPECTED_COUNT]] people.  Please correct it before moving the document forward."
If min-error-msg is defined, the 360 will *not* be allowed to move to 360 Evaluation Stage.
-->
<!ELEMENT min-error-msg (#PCDATA)>
<!ATTLIST min-error-msg 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Warning message for not meeting min-rater-count.
e.g., "The number of participants - [[ACTUAL_COUNT]] - does not meet the minimum of [[EXPECTED_COUNT]] people."
If min-warning-msg is defined, the 360 *will* be allowed to move to 360 Evaluation Stage.
-->
<!ELEMENT min-warning-msg (#PCDATA)>
<!ATTLIST min-warning-msg 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Maximum number of participants if specified.
-->
<!ELEMENT max-rater-count (#PCDATA)>
<!--
Error message for exceeding max-rater-count.
e.g., "The number of participants - [[ACTUAL_COUNT]] - has exceeded the maximum of [[EXPECTED_COUNT]] people.  Please correct it before moving the document forward."
If max-error-msg is defined, the 360 will *not* be allowed to move to 360 Evaluation Stage.
-->
<!ELEMENT max-error-msg (#PCDATA)>
<!ATTLIST max-error-msg 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Warning message for exceeding max-rater-count.
e.g., "The number of participants - [[ACTUAL_COUNT]] - has exceeded the maximum of [[EXPECTED_COUNT]] people."
If max-warning-msg is defined, the 360 *will* be allowed to move to 360 Evaluation Stage.
-->
<!ELEMENT max-warning-msg (#PCDATA)>
<!ATTLIST max-warning-msg 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Minimum number of participants needed to proceed to completion stage if specified.
-->
<!ELEMENT min-rater-complete-count (#PCDATA)>
<!--
Error message for not meeting min-rater-complete-count during signature stage.
e.g., "The number of participants - [[ACTUAL_COUNT]] - has less than the minimum of [[EXPECTED_COUNT]] people. Please correct it before moving the document forward."
If max-error-msg is defined, the 360 will *not* be allowed to move to 360 Evaluation Stage.
-->
<!ELEMENT min-rater-complete-error-msg (#PCDATA)>
<!ATTLIST min-rater-complete-error-msg 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Warning message for not meeting min-rater-complete-count during signature stage.
e.g., "The number of participants - [[ACTUAL_COUNT]] - has less than the minimum of [[EXPECTED_COUNT]] people."
If min-rater-complete-warning-msg is defined, the 360 *will* be allowed to move to Completion Stage.
-->
<!ELEMENT min-rater-complete-warning-msg (#PCDATA)>
<!ATTLIST min-rater-complete-warning-msg 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT rater-cat-min-err-msg (#PCDATA)>
<!ATTLIST rater-cat-min-err-msg
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT rater-cat-max-err-msg (#PCDATA)>
<!ATTLIST rater-cat-max-err-msg 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT rater-cat-min-warn-msg (#PCDATA)>
<!ATTLIST rater-cat-min-warn-msg 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT rater-cat-max-warn-msg (#PCDATA)>
<!ATTLIST rater-cat-max-warn-msg 
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT rater-filter-key (#PCDATA)>
<!ELEMENT rater-filter-value (#PCDATA)>
<!--
default-rater defines the user roles that will be auto-populated in the
participant list upon document creation.  Supported roles are very similar to
the ones defined in RouteStepBean, with the exceptions of "D" (for Direct
Reports).  Here are some examples of how to define default participants:

Example 1: To include employee, his manager, and 2nd-level manager in the participant list.

    <default-rater>E</default-rater>
    <default-rater>EM</default-rater>
    <default-rater>EMM</default-rater>

Example 2: To include employee's HR in the participant list.

    <default-rater>EH</default-rater>

Example 3: To include employee's peers (coworkers), including the employee himself.

    <default-rater>EMD</default-rater>

Example 4: To include employee's direct reports.

    <default-rater>ED</default-rater>

Example 5: To include employee's dotted-line (matrix) manager.

    <default-rater>EX</default-rater>

Example 6: To include document's originator.

    <default-rater>O</default-rater>
-->
<!ELEMENT default-rater (#PCDATA)>
<!ATTLIST default-rater
	removable (true | false) "true"
	category CDATA #IMPLIED
>
<!--
Participants. Note: username, lastname, firstname, and mi are for
display purpose only.
-->
<!ELEMENT rater (rater-userid, rater-username?, rater-lname?, rater-fname?, rater-mi?, rater-email?, rater-div?, rater-dept?, rater-loc?, rater-managerid?, rater-managerusername?, rater-managerfname?, rater-managerlname?, rater-managermi?, rater-cat?, rater-property*, rater-project*)>
<!--mask-->
<!--rater-userid:user_sysinfo:users_sys_id-->
<!--rater-username:users_sysinfo:users_sys_username-->
<!--rater-lname:users_sysinfo:users_sys_lastname-->
<!--rater-fname:users_sysinfo:users_sys_firstname-->
<!--rater-mi:users_sysinfo:users_sys_mi-->
<!--rater-email:users_sysinfo:users_sys_email-->
<!--rater-div:users_sysinfo:users_sys_division-->
<!--rater-dept:users_sysinfo:users_sys_department-->
<!--rater-loc:users_sysinfo:users_sys_location-->
<!--rater-managerid:users_sysinfo:users_sys_manageruid-->
<!--rater-managerusername:users_sysinfo:users_sys_username-->
<!--rater-managerfname:users_sysinfo:users_sys_firstname-->
<!--rater-managerlname:users_sysinfo:users_sys_lastname-->
<!--rater-managermi:users_sysinfo:users_sys_mi-->
<!--
This "removable" attribute will inherit from the "removable" attribute
from <default-rater> element if the <rater> element is instantiated from
<default-rater>.  Otherwise, as of now, it defaults to true to mean
removable for backward compatibility.
-->
<!ATTLIST rater
	removable (true | false) "true"
	fixed-category (true | false) "false"
>
<!-- rater-userid: Participant's user Id -->
<!ELEMENT rater-userid (#PCDATA)>
<!-- rater-username: Participant's username -->
<!ELEMENT rater-username (#PCDATA)>
<!-- rater-lname: Participant's last name -->
<!ELEMENT rater-lname (#PCDATA)>
<!-- rater-fname: Participant's first name -->
<!ELEMENT rater-fname (#PCDATA)>
<!-- rater-mi: Participant's middle name -->
<!ELEMENT rater-mi (#PCDATA)>
<!-- rater-email: Participant's email -->
<!ELEMENT rater-email (#PCDATA)>
<!-- rater-div: Participant's division -->
<!ELEMENT rater-div (#PCDATA)>
<!-- rater-dept: Participant's department -->
<!ELEMENT rater-dept (#PCDATA)>
<!-- rater-loc: Participant's location -->
<!ELEMENT rater-loc (#PCDATA)>
<!-- rater-managerid: Participant's manager user Id -->
<!ELEMENT rater-managerid (#PCDATA)>
<!-- rater-managerusername: Participant's manager username -->
<!ELEMENT rater-managerusername (#PCDATA)>
<!-- rater-managerfname: Participant's manager first name -->
<!ELEMENT rater-managerfname (#PCDATA)>
<!-- rater-managerlname: Participant's manager last name -->
<!ELEMENT rater-managerlname (#PCDATA)>
<!-- rater-managermi: Participant's manager middle name -->
<!ELEMENT rater-managermi (#PCDATA)>
<!-- rater-cat: Participant's category if any -->
<!ELEMENT rater-cat (#PCDATA)>
<!-- rater-property: Participant's other custom fields if any -->
<!ELEMENT rater-property (#PCDATA)>
<!-- key for the rater-property element. -->
<!ATTLIST rater-property
	key CDATA #REQUIRED
>
<!-- rater-project: Participant's project related data if any -->
<!ELEMENT rater-project (rater-project-data*)>
<!-- rater-project-data: represent a project data row -->
<!ELEMENT rater-project-data (#PCDATA)>
<!-- key for the rater-project-data element. -->
<!ATTLIST rater-project-data
	key CDATA #REQUIRED
>
<!-- review section is the evaluator's info -->
<!ELEMENT reviewer-sect (fm-sect)>
<!--**************-->
<!-- SFForm: Note -->
<!--**************-->
<!ELEMENT sf-note (userinfo-sect?, introduction-sect?, job-desc-sect?, fm-sect+)>
<!-- This defines the type of a Note.  -->
<!--
spellchk - OBSOLETE: replaced by form_template_status set through Form Template Management UI; true if allow spellcheck; default is false
-->
<!ATTLIST sf-note
	note-type CDATA #REQUIRED
	spellchk (true | false) "false"
>
<!--******************************************-->
<!-- SFForm: PMInfo - Performance Review Info -->
<!--******************************************-->
<!ELEMENT sf-pminfo (fm-sect*)>
<!--***************************************-->
<!-- SFForm: PMReview - Performance Review -->
<!--***************************************-->
<!ELEMENT sf-pmreview (userinfo-sect?, liveprofile-sect?, reviewinfo-sect?, introduction-sect?, objective-sect*, competency-sect*, custom-sect?, planned-learning-sect?, learning-results-sect?, summary-sect?, signature-sect?, job-desc-sect?, objcomp-summary-sect?, compensation-sect?, perfpot-summary-sect?)>
<!--
This attribute determines if any rating calculation is needed in this
form.
no-calc - true if not to display calculated overall form rating
split-rating - obsolete; replaced by section's split-cmt attribute;
spellchk - OBSOLETE: replaced by form_template_status set through Form Template Management UI; true if allow spellcheck; default is false
overall-rating - true if it doesn't allow document completion or routing to
                 signature stage if overall rating is not valida.
rate-by-adding-values - true means weights are ignored,
                        section totals are the sum of the elements,
                        and overall total is the sum of the sections.
weight-lockdown - true if not allowing users to modify section weights if applicable
show-weight - true if display section weights if applicable
-->
<!ATTLIST sf-pmreview
	no-calc (true | false) "false"
	split-rating (true | false) "false"
	spellchk (true | false) "false"
	overall-rating (true | false) "true"
	rate-by-adding-values (true | false) "false"
	weight-lockdown (true | false) "false"
	show-weight (true | false) "true"
>
<!--
When rendering a PMReview form, all userinfo key-value pairs should
be grouped in the Employee Info section in the form.
Note: The display controls are defined in fm-sect.
-->
<!ELEMENT userinfo-sect (fm-sect)>

<!--***************************************-->
<!-- SFForm: SFProcess - Process Form -->
<!--***************************************-->
<!--
Process forms are new form types in the application that supports the business needs.  
The new product will be based on a generic form and route map framework which can 
support the many different business processes that a company has.
A few examples of the types of business processes that need to be supported are:
1.	Performance Improvement Plans (PIP)
2.	Personnel Action Notice (PAN)
3.	Security/Compliance/Policy Distribution/Sign-off/Acknowledgement
4.	Progressive Disciplinary or Corrective Action forms
5.	Tuition Assistance Request/Reimbursement
6.	Vacation Requests
7.	One-on-one meeting tracking
8.	Job Description Evaluation/Classification 
9.	New Hire Checklist
10.	On-boarding Program
The new form types currently supports ony 5 sections listed below.
-->
<!ELEMENT sf-process (userinfo-sect?, reviewinfo-sect?, introduction-sect?, custom-sect*, signature-sect?)>
<!--
For now, the live profile section will just point to the current
relational live profile data for the subject of the form.
Nothing will be stored in the blob.
TODO: expand the liveprofile section to store a snapshot of the
live profile data in the blob.
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
-->
<!ELEMENT liveprofile-sect (liveprofile-sect-name, liveprofile-sect-intro?, fm-sect-config?, view-template-id?, succession-data-model?, succession-profile?)>
<!ATTLIST liveprofile-sect
	index CDATA #REQUIRED
	no-section-wrap (true | false) "true"
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
>
<!--
Live Profile section name.
-->
<!ELEMENT liveprofile-sect-name (#PCDATA)>
<!ATTLIST liveprofile-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Live Profile section introduction if any.
-->
<!ELEMENT liveprofile-sect-intro (#PCDATA)>
<!ATTLIST liveprofile-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Live Profile section custom view template id, if any
-->
<!ELEMENT view-template-id (#PCDATA)>
<!ELEMENT succession-data-model (description?, workflow*, number-format*, field-display-format*, standard-element*, userinfo-element*, background-element*, tab-element*, hris-element*, hris-action*, custom-filters?, element-permission*, dg-filters?, view-template*, hris-sync-mappings?)>
<!ELEMENT description (#PCDATA)>
<!ATTLIST description
	xml:lang NMTOKEN #IMPLIED
	mime-type (text-plain | text-html) #IMPLIED
>
<!ELEMENT label (#PCDATA)>
<!ATTLIST label
	xml:lang NMTOKEN #IMPLIED
	mime-type (text-plain | text-html) #IMPLIED
>
<!ELEMENT workflow (step*)>
<!ATTLIST workflow 
       id ID #REQUIRED
>
<!ELEMENT step EMPTY>
<!ATTLIST step
       role CDATA #REQUIRED
>

<!--
Id: This is used to uniquely identify a number-format.  Should be unique within  
   <succession-data-model>.  A <data-field> in <background-element> uses this id 
    to associated with a number-format rule. 
Mode:  truncate or round. Defines how a number should be treated to conform to the pattern.
        currently only support round
useFor: characterize the data-field to be formatted.
applies-to-string: applied-to-string=true this indicates the number-format is applied to a 
      string value.  This requires the program to parse the string first then applies the format rule.  This is useful because there are limited numeric fields in the SM_BACKGROUND table.

example:
  <number-format id="moneyFormat"
                     useFor="money"
                        mode="round" >
      <format>
           <pattern>##,##0</pattern>
      </format>
  </number-format>
-->
<!ELEMENT number-format (format)>
<!ATTLIST number-format
	id ID #REQUIRED
	mode (truncate | round) #IMPLIED
	useFor (money | percent | amount | rating | other) "other"
	applies-to-string (true | false) #IMPLIED
>
<!ELEMENT format (pattern)>
<!ELEMENT pattern (#PCDATA)>

<!ELEMENT field-display-format (display-pattern+)>
<!ATTLIST field-display-format
	id ID #REQUIRED
>
<!ELEMENT display-pattern (#PCDATA)>
<!ATTLIST display-pattern
	locale CDATA #IMPLIED
>
<!--
The standard-element field is entirely optional.  Whether or not it is
specified here, it will be available for use in succession management,
provided appropriate permissions are granted.

Specifying a standard-element allows the user to modify the behavior
of the standard element, such as making it a picklist.

Note: as with all data elements, switching from having a picklist to
not and vice-versa requires an as-yet unimplemented data-migration
step.

STRING LISTS:
picklists can only be applied to live profile fields (standard, 
user-info, background or rating) and not to the legacy user 
directory fields (title, jobCode, customxy, etc...).  'strings-list-id'
is introduced to allow legacy fields to have a picklist. At
this time, only jobCode (of all the legacy fields) can have 
a picklist.  If other legacy fields need a picklist, create an
enhancement ticket, fill out the necessary fields and set the priority.
Here is an example of how to use picklists with the jobcode field:

<standard-element id="jobCode" strings-list-id="sysJobCodes">
</standard-element>

'sysJobCodes' is a system generated and automatically updated picklist
corresponding to the employees' jobcodes. THIS PICKLIST IS ONLY UPDATED 
DURING EMPLOYEE USER DIRECTORY IMPORT. IF YOU CHANGE AN EMPLOYEE'S JOBCODE
AND GIVE HER A JOBCODE THAT HAS NEVER BEEN USED, THEN THIS JOBCODE WILL NOT
SHOW UP ON THIS LIST. Even though this picklist is automatically updated
by the system, the admin can still export it (via picklist export) and 
update/modify it by renaming the items or adding new items (i.e., jobcodes).
Also, you are not obliged to use 'sysJobCodes' for this fields, you can
use any picklist id that the admin created. However, if you do that, than
YOU need to make sure this picklist is synchronized and kept up to date
with the jobcodes pertaining to all the employees.

'status' element is used by data mapping tool. Don't use/expose it to data model template.
required:      true\false can be set on any field, it will force the user to input information for that field
               before saving edits to it, field must be visible in edit-template
matrix-filter: true\false designates a field to be used in the matrix grid.  Only certain fields will 
               accept this designation.  They include:
               department
               division
               location
               title
               city
               state
               custom01 - custom15
-->
<!ELEMENT standard-element (label*, picklist?)>
<!ATTLIST standard-element
	id (userId | username | email | gender | lastName | firstName | mi | nickname | suffix | salutation | department | division | location | jobCode | hireDate | timeZone | managerId | hrId | ssn | dateOfBirth | citizenship | nationality | ethnicity | married | minority | businessSegment | serviceDate | level | photo | function | performance | potential | objective | competency |veteranDisabled | veteranSeparated | veteranProtected | veteranMedal | talentPool | empId | title | businessPhone | homePhone | cellPhone | fax | addressLine1 | addressLine2 | addressLine3 | city | state | zipCode | country | reviewFreq | lastReviewDate | custom01 | custom02 | custom03 | custom04 | custom05 | custom06 | custom07 | custom08 | custom09 | custom10 | custom11 | custom12 | custom13 | custom14 | custom15 | riskOfLoss | impactOfLoss | benchStrength | reasonForLeaving | newToPosition | dateOfPosition | keyPosition | futureLeader | matrixManaged | salary | salaryLocal | localCurrencyCode | jobTitle | jobLevel | jobFamily | jobRole | finalJobFamily | finalJobRole | finalJobCode | payGrade | finPayGrade | dateOfCurrentPosition | bonusTarget | salaryProrating | raiseProrating | promotionAmount | lumpsumTarget | lumpsum2Target | compensationReadOnly | meritTarget | meritEffectiveDate | compensationEligible | compensationSalaryEligible | compensationBonusEligible | compensationStockEligible | compensationSalaryRateType | compensationSalaryRateUnits | salaryBudgetTotalRaisePercentage | salaryBudgetMeritPercentage | salaryBudgetPromotionPercentage | salaryBudgetExtraPercentage | salaryBudgetExtra2Percentage | salaryBudgetLumpsumPercentage | salaryBudgetFinalSalaryPercentage | salaryBudgetTotalCompPercentage | stockBudgetStockAmount | stockBudgetUnitAmount | stockBudgetOptionAmount | stockBudgetOther1Amount | stockBudgetOther2Amount | stockBudgetOther3Amount | bonusBudgetAmount | personalCompensationStatement | matrixManager | proxy | customManager | secondManager | defaultLocale | status | vpIndividualView | userTags | time | retirementDate | seatingChart | personalVarPayStatement | personalCombinedStatement | facebook | linkedin | on-leave-status | empWorkflowRequests | matrix1Label | matrix2Label | companyExitDate | sysLearningHistory | sysCurricula | totalTeamSize | teamMembersSize | timeInCurrentPosition | timeAtCompany | previousPosition | previousEmployer | loginMethod) #REQUIRED
	max-length NMTOKEN #IMPLIED
	display-size NMTOKEN #IMPLIED
	rows NMTOKEN #IMPLIED
	columns NMTOKEN #IMPLIED
	strings-list-id NMTOKEN #IMPLIED
	required (true | false) "false"
	matrix-filter (true | false) "false"
	pii (true | false) "false"
    pre-populate (true | false) "false"
>
<!-- handler specifies special draw instructions for a particular userinfo-element
     handlers currently available will include:
     IM
     SKYPE
     TIME
-->
<!ELEMENT handler (#PCDATA)>
<!ELEMENT userinfo-element (label+, picklist?, handler?)>
<!ATTLIST userinfo-element
	type (varchar | float | integer | boolean | date | blob) #REQUIRED
	id ID #REQUIRED
	max-length NMTOKEN #IMPLIED
	display-size NMTOKEN #IMPLIED
	rows NMTOKEN #IMPLIED
	columns NMTOKEN #IMPLIED
	required (true | false) "false"
	pii (true | false) "false"
	reportable (true | false) "false"
>
<!-- see new configuration for custom filters and example for latest configuration 
custom-filters stores the list of fields to be used as custom filters. There is at most 3 - deprecated
The only valid custom filters are custom fields.
custom01 - custom15
WARNING do not use module specific configuration until further notice.
for questions, please contact Paul Littlefield in Product Management.
custom-filters stores the list of fields to be used as custom filters. There is at most 6 - deprecated
module:   section to define module specific filterset. 
module-id:  module name (it has only been enable for default, compensation, and calibration) - deprecated
filter:   filterset for each module - deprecated
filter-id:  filter id defined within customer-filters elements - deprecated
-->
<!ELEMENT custom-filters (filter-module+ | (standard-element-ref, standard-element-ref?, standard-element-ref?, standard-element-ref?, standard-element-ref?, standard-element-ref?, module*))>
<!-- this is deprecated by the new custom filter section:filter-module below, please do not use this configuration again -->
<!ELEMENT module (filter?, filter?, filter?, filter?, filter?, filter?)>
<!ATTLIST module
	id (default | compensation | calibration) #REQUIRED
>
<!ELEMENT filter (#PCDATA)>
<!ATTLIST filter
	id (custom01 | custom02 | custom03 | custom04 | custom05 | custom06 | custom07 | custom08 | custom09 | custom10 | custom11 | custom12 | custom13 | custom14 | custom15) #REQUIRED
>
<!-- new configuration for custom filters
1.standard-element of custom fields from custom01 - custom15 are available for filtering
2.currently there is no limit control on how many fields can be used. 
3.the filterset within module id=default are the filters used in common places 
or in the module that has not configured its own filterset (this feature is not available until further notice)
configuration exampl 1
custom02 and custom15 will be displayed in all the existing filter view
<custom-filters>
  <filter-module id=default>
    <standard-element-ref refid="custom02"/>
    <standard-element-ref refid="custom15"/>
  </filter-module>
</custom-filters>
-->
<!ELEMENT filter-module (standard-element-ref*)>
<!ATTLIST filter-module
    id (default | compensation | calibration) #REQUIRED
>


<!--
The background element is now overloaded; it either
behaves as a collection of data fields or a collection
of rating fields.  If it is a collection of rating fields,
then you need to provide both the scale-id
and the feedback type.

type-id: INTEGER. No default Value and Required. Must be
         unique within the data model. For the moment,
         it has no purpose other than being the unique
         id for the section.
id: The global name or id for this section. Must be
         unique. It has no default value. You will
         see this id being used in the export and
         import Live profile background and rating
         files. ANY ID THAT BEGINS WITH SYS MEANS
         THIS SECTION IS A SPECIAL SYSTEM SECTION
         AND IT HAS CERTAIN RESTRICTION WHEN MODIFYING
         IT. You can not remove or comment out data-fields
         or rating-fields from a 'sys' section. If you
         want to 'remove' a field, then set the hidden
         to true for data-fields and visibility to none
         for rating-fields.
max-entries: The maximum number of entries allowed
         via live profile self service. This limit
         does NOT apply when importing data items.
scale-id: ONLY APPLICABLE FOR RATING SECTIONS.
         MUST BE ONE OF (Performance | Potential
         | Objective | Competency).
feedback-type: ONLY APPLICABLE FOR RATING SECTIONS.
         The supported types are:
            5: OverallCompetency  Rating
            6: OverallObjective   Rating
            7: OverallPotential   Rating
            8: OverallPerformance Rating
         You might notice that these rating types can
         be calculated/generated by a PM form except
         for Potential.  Type 8 corresponds to the form's
         overall score.  Type 5 corresponds to the form's
         aggregate overall Competency score. Type 6
         corresponds to the form's aggregate overall
         Objective.
-->
<!ELEMENT background-element (label+, description?, (data-field* | rating-field*))>
<!ATTLIST background-element
	type-id NMTOKEN #REQUIRED
	id ID #REQUIRED
	max-entries NMTOKEN #IMPLIED
	scale-id NMTOKEN #IMPLIED
	feedback-type NMTOKEN #IMPLIED
>
<!--
Defines a data field mapping in the SM_BACKGROUND table.  The id
attribute is the internally used "programatic" name of the field.
This is the name used in the templates.  The field-name is the
database field name to use.  There are 13 VARCHAR (text) field (vfld1
- vfld13), 5 DATE fields (dfld1 - dfld5), 4 INTEGER fields (ifld1 -
ifld4), 4 FLOAT (real number) fields (ffld1 - ffld4).

If another these are not enough fields to meet a particular
configuration, engineering will have to add more fields that will be
available at the next build.  Please contact engineering ASAP with the
requirements.

When specifying the picklist, use the picklist id as used in the
admin export picklist file.
-->
<!ELEMENT data-field (label+, picklist?, number-format-ref?, field-display-format-ref?)>
<!ATTLIST data-field
	id NMTOKEN #REQUIRED
	field-name (name | desc | vfld1 | vfld2 | vfld3 | vfld4 | vfld5 | vfld6 | vfld7 | vfld8 | vfld9 | vfld10 | vfld11 | vfld12 | vfld13 | vfld14 | vfld15 | startDate | endDate | dfld1 | dfld2 | dfld3 | ifld1 | ifld2 | ifld3 | ifld4 | ifld5 | ffld1 | ffld2 | ffld3 | ffld4 | lastModified | attachment1) #REQUIRED
	required (true | false) "false"
	hidden (true | false) "false"
	url-link (true | false) "false"
	max-length NMTOKEN #IMPLIED
	display-size NMTOKEN #IMPLIED
	pii (true | false) "false"
	document-type-id CDATA #IMPLIED
	max-file-size-KB CDATA #IMPLIED
	file-formats CDATA #IMPLIED
	hris-field-mapping CDATA #IMPLIED
	readonly (true | false) "false"
    text-area-enabled (true | false) "false"
>
<!--
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$  IMPORTANT IMPORTANT $$$$$$$$$$$$$$$$$$$$$$
$$$   DO NOT REMOVE OR COMMENT OUT ANY RATING FIELD   $$$
$$$   IF YOU WANT TO 'REMOVE' IT, USE THE 'visibility'$$$
$$$   ATTRIBUTE AND SET IT TO 'none'.                 $$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Rating Element:
  rating-name: the type of rating field. Types are
        predefined. Here are some points about the
        specific types:
          start-date, end-date: For v10, at least one of them
                 must be required (and of course visible).
                 If either one has visiblity = none or view,
                 then it will take on the value of the other.
                 For v11, both of them are required; and the 
                 visibility must be either "edit" or "both".
                 Otherwise, it is an invalid configuration to 
                 add an new entry.
          name: the name of the rating. not meaningful for
                 performance or potential.  Used to store
                 the name of the competency (for competency
                 rating) and name of the objective (for
                 objective rating). If you wish to view
                 all overall competency scores from all forms
                 for a user in Live Profile, then you can
                 set this element to view and the entire section
                 to read only.
          desccription: similar to name. Useful for Competency and
                 Objective.
          rating: REQUIRED REQUIRED REQUIRED REQUIRED REQUIRED
                 REQUIRED REQUIRED REQUIRED REQUIRED REQUIRED.
                 Set required to true.
                 A rating item MUST have a rating; otherwise
                 what's the use of entering it!!!!! MAKE SURE
                 YOU SET THE ATTRIBUTE 'insert-rating' to true
                 for this field.
                 For v10, if you do not wish to see the numeric 
                 rating in the view page, then set 'visibility' to
                 'edit'.
                 For v11, if you do not wish to see the numeric 
                 rating in the rating column, then set the 'visibility'
                 to 'none'.  You will need either rating or label to be 
                 modifiable (visibility 'edit' or 'none'), otherwise,
                 it is an invalid configuration to add a new entry.
                 In v11, the rating and label are concatenated and 
                 displayed in one column. 
          label: For v10, NEVER SET THIS ITEM's 'visibility' TO 'edit'
                 unless you are absolutely sure you know what
                 you're doing.  I have not seen any need to do
                 that in the field. This item is mainly provided
                 for rating import when the rating label is NOT
                 the same as our system's label (because it came
                 from another system and they want to maintain
                 the exact label).
                 For v11, if you don't want to see the label shown
                 in the rating column, then set the 'visibility' to 
                 'none'.  You will need either rating or label to be 
                 modifiable (visibility 'edit' or 'none'), otherwise,
                 it is an invalid configuration to add a new entry.
                 In v11, the rating and label are concatenated and 
                 displayed in one column.
          min:   similar in usage to 'label'. It is provided to
                 allow importing of ratings into our system. We
                 need the min value to know the range of the rating
                 value itself.
          max:   similar to min.
          source and module: ALWAYS SET 'system-generated' TO 'true'
                 FOR THOSE ITEMS.  These fields can be useful to tell
                 the user where the rating came from.  And if it is
                 from a form, there is a hyperlink directly to the
                 form (NOT YET IMPLEMENTED!!).
        NOTE TO DEVELOPERS:
        corresponds to one of the fields found in
        the feedback table. If you add a field to the
        feedback table and it is pertinent to a rating,
        then please add it here.

  insert-rating: The system will insert the scale drop
        down list in any field that has the insert-rating
        set to true. ONLY USE IT FOR THE 'rating' FIELD.
  system-generated: This field can not be edited/entered
        by the user (neither through selfservice nor
        through import).  Based on the entered values,
        the system will generate an appropriate one.
        For example, if end-date is set to system generated,
        then the system will insert the start date into
        the end date.
  visibility: Four possible values - 
              For v10,
                  VIEW: only show this field in the view template (i.e., read only view).
                  EDIT: only show this field when creating a new entry (i.e, edit mode)
                  BOTH: show this field in both read only and edit modes.
                  NONE: don't show this field at all.
              For v11, 
                  VIEW: show this field if the user has 'read' permission to this field.
                  EDIT: show this field if the user has 'write' permission to this field.
                  BOTH: show this field if the user has either 'read' or 'write' permission
                        to this field.
                  NONE: don't show this field at all.
                  Note, if the source of the entry come from form, then the entry is not
                  editable disregard the visibility setting.
                  QuickSummary about how the permission and visibility intercept.
                  In v11, the In-Place-Edit replaces the 2 page template page flow.  The 
                  rules of what can be see or change are:
                  If user has "write" permission to the field, then user can:
                   see the field:
                      if visibility = "view", "edit' and "both". 
                   modify the field:
                      if visibility = "edit" or "both"
                      (except if source from Form.)
                  If user has only "read" permission to the field, then user can:
                    see the field:
                       if visibility = "view" or "both.
  required: like it means.
  display-size: the size of the html input field in characters.
  max-length: the maximum # of characters that can be entered in the html form.

  One last thing, do not delete or comment out any rating-field (did
  I already mention that ;) ).
-->
<!ELEMENT rating-field (label+, picklist?)>
<!ATTLIST rating-field
	rating-name (start-date | end-date | name | description | rating | label | min | max | source | module | attachment1) #REQUIRED
	insert-rating (true | false) "false"
	system-generated (true | false) "false"
	visibility (edit | view | none | both) "both"
	required (true | false) "false"
	max-length NMTOKEN #IMPLIED
	display-size NMTOKEN #IMPLIED
	document-type-id CDATA #IMPLIED
	max-file-size-KB CDATA #IMPLIED
	file-formats CDATA #IMPLIED
>
<!ELEMENT picklist EMPTY>
<!ATTLIST picklist
	id NMTOKEN #REQUIRED
	parent-field-id CDATA #IMPLIED
>

<!ELEMENT tab-element (label*, description*)>
<!ATTLIST tab-element
	id (varpaystatement | pendingapprovals | varpayindview | compstatement | personalInfoTab | employmentInfoTab | combinedstatement | timeOffTab | timeOffAdminTab |payrollIntegration | payrollPayslip | ectbenefitsfocus ) #REQUIRED     
>

<!--
  HRIS Elements are composed of fields limited to the HRIS module.
  
      id: The only supported values are:
          leaveOfAbsence : Employee Leave of Absence
          personalTimeoff  : Personal Timeoff
          healthcareCoverage : Healthcare coverage
          
-->
<!ELEMENT hris-element (label*, description?, trigger-rule*, hris-field*, hris-section*)>
<!ATTLIST hris-element
	id ID #REQUIRED
>

<!ELEMENT hris-section (label*, description*, hris-field*)>
<!ATTLIST hris-section
  id (positionInfoList | orgFieldsList | jobFieldsList |  timeOffRelatedFields | eeoFieldsList) #REQUIRED
>

<!ELEMENT hris-field (label+, trigger-rule*, picklist?)>
<!ATTLIST hris-field
	id NMTOKEN #REQUIRED
	max-length NMTOKEN #IMPLIED
	visibility (edit | view | none | both) "both"
	required (true | false) "false"
	pii (true | false) "false"
	allow-import (true | false) "false"
	type NMTOKEN #IMPLIED
	maximumFractionDigits NMTOKEN #IMPLIED
	showTrailingZeros (true | false) "false"
>

<!ELEMENT trigger-rule EMPTY >
<!ATTLIST trigger-rule
	event NMTOKEN #REQUIRED
	rule NMTOKEN #REQUIRED
>

<!ELEMENT hris-sync-mappings (hris-element-ref+)>

<!ELEMENT hris-mapping (hris-field-ref,standard-element-ref)>
<!ATTLIST hris-mapping
	entity-name CDATA #IMPLIED
	entity-type CDATA #IMPLIED
>


<!ELEMENT hris-action (label*, description?, workflow-ref*)>
<!ATTLIST hris-action 
	id ID #REQUIRED
>
<!ELEMENT workflow-ref EMPTY>
<!ATTLIST workflow-ref
	refid IDREF #REQUIRED
	role  CDATA #REQUIRED
>

<!ELEMENT element-permission (description?, role-name*, standard-element-ref*, userinfo-element-ref*, background-element-ref*, tab-element-ref*, hris-element-ref*, hris-action-ref*)>
<!ATTLIST element-permission
	type (none | read | write) #REQUIRED
>

<!ELEMENT dg-filters (my-filter*, permission-group-filter?)>
<!ELEMENT my-filter (standard-element-ref*, hris-element-ref*)>
<!ATTLIST my-filter
	id ID #IMPLIED
>
<!ELEMENT permission-group-filter (standard-element-ref*, hris-element-ref*)>
<!--
example:
<dg-filters>
  <my-filter>
    <standard-element-ref refid="department"/>
    <standard-element-ref refid="division"/>
    <standard-element-ref refid="location"/>
  </my-filter>
  <permission-group-filter>
    <standard-element-ref refid="city"/>
    <standard-element-ref refid="state"/>
  </permission-group-filter>
</dg-filters>
-->

<!ELEMENT standard-element-ref EMPTY>
<!-- standard database fields.  3 sections correspond, in order, to -->
<!-- the UserBean fields, SuccessionProfileBean, and UserInfoRecord -->
<!-- properties.                                                    -->
<!ATTLIST standard-element-ref
	refid (userId | username | email | gender | lastName | firstName | mi | nickname | suffix | salutation | department | division | location | jobCode | hireDate | timeZone | managerId | hrId | ssn | dateOfBirth | citizenship | nationality | ethnicity | married | minority | businessSegment | serviceDate | level | photo | function | performance | potential | objective | competency | veteranDisabled | veteranSeparated | veteranProtected | veteranMedal | talentPool | empId | title | businessPhone | homePhone | cellPhone | fax | addressLine1 | addressLine2 | addressLine3 | city | state | zipCode | country | reviewFreq | lastReviewDate | custom01 | custom02 | custom03 | custom04 | custom05 | custom06 | custom07 | custom08 | custom09 | custom10 | custom11 | custom12 | custom13 | custom14 | custom15 | matrixManager | customManager | secondManager | proxy | defaultLocale | analytics | riskOfLoss | impactOfLoss | benchStrength | reasonForLeaving | newToPosition | dateOfPosition | keyPosition | futureLeader | matrixManaged | salary | salaryLocal | localCurrencyCode | jobTitle | jobLevel | jobFamily | jobRole | finalJobFamily | finalJobRole | finalJobCode | payGrade | finPayGrade | salaryProratingStartDate | salaryProratingEndDate | raiseProratingStartDate | raiseProratingEndDate | dateOfCurrentPosition | bonusTarget | salaryProrating | raiseProrating | promotionAmount | lumpsumTarget | lumpsum2Target | compensationReadOnly | meritTarget | meritEffectiveDate | compensationEligible | compensationSalaryEligible | compensationBonusEligible | compensationStockEligible | compensationSalaryRateType | compensationSalaryRateUnits | salaryBudgetTotalRaisePercentage | salaryBudgetMeritPercentage | salaryBudgetPromotionPercentage | salaryBudgetExtraPercentage | salaryBudgetExtra2Percentage | salaryBudgetLumpsumPercentage | salaryBudgetFinalSalaryPercentage | salaryBudgetTotalCompPercentage | stockBudgetStockAmount | stockBudgetUnitAmount | stockBudgetOptionAmount | stockBudgetOther1Amount | stockBudgetOther2Amount | stockBudgetOther3Amount | bonusBudgetAmount | personalCompensationStatement | status | vpIndividualView | userTags | time | retirementDate | seatingChart | personalVarPayStatement | personalCombinedStatement | facebook | linkedin | on-leave-status | empWorkflowRequests | matrix1Label | matrix2Label | companyExitDate | sysLearningHistory | sysCurricula | totalTeamSize | teamMembersSize | timeInCurrentPosition | timeAtCompany | previousPosition | previousEmployer | loginMethod) #REQUIRED
>
<!ELEMENT userinfo-element-ref EMPTY>
<!ATTLIST userinfo-element-ref
	refid IDREF #REQUIRED
>
<!ELEMENT background-element-ref EMPTY>
<!ATTLIST background-element-ref
	refid IDREF #REQUIRED
>

<!ELEMENT tab-element-ref EMPTY>
<!ATTLIST tab-element-ref
	refid (varpaystatement | pendingapprovals | varpayindview | compstatement | personalInfoTab | employmentInfoTab | combinedstatement) #REQUIRED
>
<!ELEMENT hris-element-ref (hris-field-ref* | hris-mapping+)>
<!ATTLIST hris-element-ref
	refid IDREF #REQUIRED
>
<!ELEMENT hris-field-ref EMPTY>
<!ATTLIST hris-field-ref
	refid NMTOKEN #REQUIRED
	ref-field  CDATA #IMPLIED
>
<!ELEMENT hris-action-ref EMPTY>
<!ATTLIST hris-action-ref
	refid IDREF #REQUIRED
>
<!ELEMENT number-format-ref EMPTY>
<!ATTLIST number-format-ref
	refid IDREF #REQUIRED
>

<!ELEMENT field-display-format-ref EMPTY>
<!ATTLIST field-display-format-ref
	refid IDREF #REQUIRED
>

<!ELEMENT view-template (label+, description+, (edit-template | background-element-ref | hris-element-ref)*)>
<!ATTLIST view-template
	id NMTOKEN #REQUIRED
	pdf-printing-enabled (true | false) "false"
	jsp-file CDATA #IMPLIED
	visibility (none | liveprofile | form | all) "all"
>
<!ELEMENT edit-template (label+, description+, (standard-element-ref | userinfo-element-ref | background-element-ref | hris-element-ref | hris-action-ref)+)>
<!ATTLIST edit-template
	id NMTOKEN #REQUIRED
	jsp-file CDATA #IMPLIED
>
<!ELEMENT succession-profile (id?, user-id?, ssn?, talentpool?, potential?, performance?, objective?, competency?, veteranDisabled?, veteranSeparated?, veteranProtected?, veteranMedal?, date-of-birth?, citizenship?, nationality?, ethnicity?, married?, riskOfLoss?, impactOfLoss?, benchStrength?, reasonForLeaving?, newToPosition?, dateOfPosition?, keyPosition?, futureLeader?, matrixManaged?, user-info?, extra-info*, picklist-cache*)>
<!--mask-->
<!--user-id:user_sysinfo:users_sys_id-->
<!--ssn-->
<!--date-of-birth-->
<!--citizenship-->
<!--nationality-->
<!--ethnicity-->
<!--maried-->

<!--
Show department fields: true or false.
-->
<!ELEMENT id (#PCDATA)>
<!--
Show division fields: true or false.
-->
<!ELEMENT user-id (#PCDATA)>
<!--
Show location fields: true or false.
-->
<!ELEMENT ssn (#PCDATA)>
<!--
Scale Id if applicable.
-->
<!ELEMENT talentpool (#PCDATA)>
<!--
Rounding Rule if applicable.
-->
<!ELEMENT performance (#PCDATA)>
<!ELEMENT potential (#PCDATA)>
<!ELEMENT objective (#PCDATA)>
<!ELEMENT competency (#PCDATA)>
<!ELEMENT veteranDisabled (#PCDATA)>
<!ELEMENT veteranSeparated (#PCDATA)>
<!ELEMENT veteranProtected (#PCDATA)>
<!ELEMENT veteranMedal (#PCDATA)>
<!--
Document status if applicable.  If defining multiple values, use "^" as field separator.
 -->
<!ELEMENT date-of-birth (#PCDATA)>
<!--
What date to use for the date range: "start", "end", or "due" dates.
-->
<!ELEMENT citizenship (#PCDATA)>
<!--
Document review date starting range for this year.
-->
<!ELEMENT nationality (#PCDATA)>
<!--
Document review date ending range for this year.
-->
<!ELEMENT ethnicity (#PCDATA)>
<!--
Document review date range for last year: YTD or FULL_YEAR.
-->
<!ELEMENT married (#PCDATA)>
<!ELEMENT riskOfLoss (#PCDATA)>
<!ELEMENT impactOfLoss (#PCDATA)>
<!ELEMENT benchStrength (#PCDATA)>
<!ELEMENT reasonForLeaving (#PCDATA)>
<!ELEMENT newToPosition (#PCDATA)>
<!ELEMENT dateOfPosition (#PCDATA)>
<!ELEMENT keyPosition (#PCDATA)>
<!ELEMENT futureLeader (#PCDATA)>
<!ELEMENT matrixManaged (#PCDATA)>
<!ELEMENT user-info (user-info-id, user-info-username, user-info-password?, user-info-password-expiration, user-info-email?, user-info-gender?, user-info-lastname?, user-info-firstname?, user-info-mi?, user-info-nickname?, user-info-suffix?, user-info-salutation?, user-info-isvalid?, user-info-department?, user-info-division?, user-info-location?, user-info-jobcode?, user-info-direct-reports, user-info-manager-id?, user-info-hr-id?, user-info-notify, user-info-update-flag, user-info-time-zone?, user-info-hire-date?, user-info-record*)>
<!--mask-->
<!--user-info-id:user_sysinfo:users_sys_id-->
<!--user-info-username:users_sysinfo:users_sys_username-->
<!--user-info-password:users_sysinfo:users_sys_password-->
<!--user-info-password-expiration:users_sysinfo:users_sys_expiration-->
<!--user-info-email:users_sysinfo:users_sys_email-->
<!--user-info-gender:users_sysinfo:users_sys_gender-->
<!--user-info-lastname:users_sysinfo:users_sys_lastname-->
<!--user-info-firstname:users_sysinfo:users_sys_firstname-->
<!--user-info-mi:users_sysinfo:users_sys_mi-->
<!--user-info-nickname:users_sysinfo:users_sys_nickname-->
<!--user-info-suffix:users_sysinfo:users_sys_suffix-->
<!--user-info-salutation:users_sysinfo:users_sys_salutation-->
<!--user-info-department:users_sysinfo:users_sys_department-->
<!--user-info-division:users_sysinfo:users_sys_division-->
<!--user-info-location:users_sysinfo:users_sys_location-->
<!--user-info-jobcode:users_sysinfo:users_sys_jobcode-->
<!--user-info-direct-reports:users_sysinfo:users_sys_directreports-->
<!--user-info-manager-id:users_sysinfo:users_sys_manageruid-->
<!--user-info-hr-id:users_sysinfo:users_sys_hruid-->
<!--user-info-hire-date:users_sysinfo:users_sys_hiredate-->

<!ELEMENT user-info-id (#PCDATA)>
<!ELEMENT user-info-username (#PCDATA)>
<!ELEMENT user-info-password (#PCDATA)>
<!ELEMENT user-info-password-expiration (#PCDATA)>
<!ELEMENT user-info-email (#PCDATA)>
<!ELEMENT user-info-gender (#PCDATA)>
<!ELEMENT user-info-lastname (#PCDATA)>
<!ELEMENT user-info-firstname (#PCDATA)>
<!ELEMENT user-info-mi (#PCDATA)>
<!ELEMENT user-info-nickname (#PCDATA)>
<!ELEMENT user-info-suffix (#PCDATA)>
<!ELEMENT user-info-salutation (#PCDATA)>
<!ELEMENT user-info-isvalid (#PCDATA)>
<!ELEMENT user-info-department (#PCDATA)>
<!ELEMENT user-info-division (#PCDATA)>
<!ELEMENT user-info-location (#PCDATA)>
<!ELEMENT user-info-jobcode (#PCDATA)>
<!ELEMENT user-info-direct-reports (#PCDATA)>
<!ELEMENT user-info-manager-id (#PCDATA)>
<!ELEMENT user-info-hr-id (#PCDATA)>
<!ELEMENT user-info-notify (#PCDATA)>
<!ELEMENT user-info-update-flag (#PCDATA)>
<!ELEMENT user-info-time-zone (#PCDATA)>
<!ELEMENT user-info-hire-date (#PCDATA)>
<!ELEMENT user-info-record (user-info-record-key, user-info-record-value)>
<!--mask-->
<!--user-info-record-value-->
<!ELEMENT user-info-record-key (#PCDATA)>
<!ELEMENT user-info-record-value (#PCDATA)>
<!ELEMENT extra-info (extra-info-key, (extra-info-value | background-info-list))>
<!--mask-->
<!--extra-info-value-->
<!ELEMENT extra-info-key (#PCDATA)>
<!ELEMENT extra-info-value (#PCDATA)>
<!ELEMENT background-info-list (background-info*)>
<!ELEMENT background-info (background-info-id, background-info-user-id, background-info-type, background-info-field*)>
<!--mask-->
<!--background-info-user-id:users_sysinfo:user_sys_id-->
<!ELEMENT background-info-id (#PCDATA)>
<!ELEMENT background-info-user-id (#PCDATA)>
<!ELEMENT background-info-type (#PCDATA)>
<!ELEMENT background-info-field (background-info-field-key, background-info-field-value)>
<!--mask-->
<!--background-info-field-value-->
<!ELEMENT background-info-field-key (#PCDATA)>
<!ELEMENT background-info-field-value (#PCDATA)>
<!ELEMENT picklist-cache (picklist-cache-key, picklist-cache-option*)>
<!ELEMENT picklist-cache-key (#PCDATA)>
<!ELEMENT picklist-cache-option (picklist-cache-option-key, picklist-cache-option-value)>
<!ELEMENT picklist-cache-option-key (#PCDATA)>
<!ELEMENT picklist-cache-option-value (#PCDATA)>
<!--
This PM review info section layout is *fixed*.
-->
<!ELEMENT reviewinfo-sect (reviewinfo-sect-name, reviewinfo-sect-intro?, fm-sect-config?, field-permission*)>
<!--
These attributes control the display order of the section.
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
-->
<!ATTLIST reviewinfo-sect
	index CDATA #REQUIRED
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
>
<!--
Review Info section name.
-->
<!ELEMENT reviewinfo-sect-name (#PCDATA)>
<!ATTLIST reviewinfo-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Review Info section introduction if any.
-->
<!ELEMENT reviewinfo-sect-intro (#PCDATA)>
<!ATTLIST reviewinfo-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
This Job Description section layout is *fixed*.
-->
<!ELEMENT job-desc-sect (job-desc-sect-name?, job-desc-sect-intro?, fm-sect-config?, job-role*)>
<!--
These attributes control the display order of the section.
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
-->
<!ATTLIST job-desc-sect
	index CDATA #REQUIRED
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
>
<!--
Job Description section name.
-->
<!ELEMENT job-desc-sect-name (#PCDATA)>
<!ATTLIST job-desc-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Job Description section introduction, if any.
-->
<!ELEMENT job-desc-sect-intro (#PCDATA)>
<!ATTLIST job-desc-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
A Role has an id, name and description.
-->
<!ELEMENT job-role (job-role-id, job-role-name?, job-role-desc?)>
<!ELEMENT job-role-id (#PCDATA)>
<!ELEMENT job-role-name (#PCDATA)>
<!ELEMENT job-role-desc (#PCDATA)>
<!--
PM introduction section.
Note: The display controls are defined in fm-sect.
-->
<!ELEMENT introduction-sect (fm-sect)>

<!--
Planned learning section.
Note: The display controls are defined in fm-sect.
-->
<!ELEMENT planned-learning-sect (fm-sect)>

<!--
Learning results section.
Note: The display controls are defined in fm-sect.
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
-->
<!ELEMENT learning-results-sect (fm-sect, sect-weight?, fm-sect-scale?, learning-result-item*)>
<!ATTLIST learning-results-sect
	index CDATA #IMPLIED
	split-cmt (true | false) "false"
	cmt-opt (0 | 1 | 2 | 3) "0"
	if-no-ratings-then-ignore-section (true | false) "true"
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
>
<!ELEMENT learning-result-item (fm-learning-result-id, fm-learning-result-rating?, fm-learning-result-weight?, fm-comment*)>
<!ELEMENT fm-learning-result-id (#PCDATA)>
<!ELEMENT fm-learning-result-rating (#PCDATA)>
<!ELEMENT fm-learning-result-weight (#PCDATA)>

<!-- localize section name -->
<!ELEMENT section-name (#PCDATA)>
<!ATTLIST section-name
	lang CDATA #IMPLIED
>

<!--
Job Requsition Section
this form section is nothing more than a wraper for a job-req-template.
DO NOT ADD FIELDS OR OTHER ELEMENTS IN THIS SECTION!!
Add them to the job-req-template.dtd

job-req-template-id - the id of the job req template that shold be pulled into this section
-->
<!ELEMENT job-req-sect (job-req-id?, section-name*)>
<!ATTLIST job-req-sect
	index CDATA #IMPLIED
	job-req-template-id CDATA #REQUIRED
	section-name CDATA #IMPLIED
>
<!ELEMENT job-req-id (#PCDATA)>
<!ELEMENT job-req (job-req-competency-sect?, job-req-question-sect?, job-listing-layout?, custom-fields?)>
<!ELEMENT job-req-competency-sect (fm-competency*)>
<!ELEMENT job-req-question-sect (fm-question*)>
<!ELEMENT job-listing-layout (#PCDATA)>
<!ELEMENT custom-fields (job-req-field*)>
<!ELEMENT job-req-field (job-req-field-value*)>
<!ATTLIST job-req-field
	id CDATA #REQUIRED
>
<!ELEMENT job-req-field-value (#PCDATA)>
<!ATTLIST job-req-field-value
	locale CDATA #IMPLIED
>
<!--
Offer Detail Section
this form section is nothing more than a wraper for a offer-detail-template.
DO NOT ADD FIELDS OR OTHER ELEMENTS IN THIS SECTION!!
Add them to the offer-detail-template.dtd

offer-detail-template-id - the id of the offer detail template that shold be pulled into this section
-->

<!ELEMENT offer-detail-sect (offer-detail-id?)>
<!ATTLIST offer-detail-sect
	index CDATA #IMPLIED
	offer-detail-template-id CDATA #REQUIRED
	section-name CDATA #IMPLIED
>
<!ELEMENT offer-detail-id (#PCDATA)>
<!ELEMENT offer-detail (offer-detail-fields?)>
<!ELEMENT offer-detail-fields (offer-detail-field*)>
<!ELEMENT offer-detail-field (offer-detail-field-value?)>
<!ATTLIST offer-detail-field
	id CDATA #REQUIRED
>
<!ELEMENT offer-detail-field-value (#PCDATA)>
<!--
PM objective section.
TODO: Figure out how to represent the Add Objective button.
Element meta-grp is added just to replicate meta-grp in fm-meta so that
they can be used in XSL transformation.  They will not be saved in the XML
document itself.
-->
<!ELEMENT objective-sect (obj-sect-name, obj-sect-intro?, fm-sect-config?, action-permission*, field-permission*, sect-weight?, sect-weight-4-objcomp-summary?, fm-sect-scale?, obj-sect-type?, obj-sect-plan-id?, obj-sect-filter?, obj-sect-filter-val?, obj-category*, obj-type*, sect-fm-elements?, sect-level-elements?, fm-objective*, fm-comment*, meta-grp-label?, meta-grp*, obj-plan-state-change*)>
<!--
These attributes control the display order of the section.  It also
controls whether or not users are allowed to add/remove objectives in
the section.
index - Section's display order within the form;
configurable - true if users are allowed to add/remove items within the section;
mgt-only - true if only manager/hr can see this section;
sum-comment-only - obsolete; replaced by cmt-opt
ask-4-comment - obsolete; make it always "false";
use-jobcode - true if the section is using subject's jobcode to auto-populate the section with related competencies;
no-rate - false if show rating scale for items within the section;
no-weight - false if show item weights within the section, and the section's average rating will be used in the form's calculated overall rating;
no-group - false if show item groupings (if any) within the section and include it in the overall grouping count;
summ-opt - maximum number of section items for section summary to be displayed; to turn on section summary at all times, then make it 0; to turn off the section summary at all times, then make it a big number, say 99999;
split-cmt - true if displaying subject and manager's comments side by side;
rating-opt - 0: default, no ratings next to each user's comment;
             1: display rating next to subject's comment;
             2: display rating next to all evaluators' comments;
             3: side-by-side manager and subject ratings (not supported in V1 renderer)
                Manager rating is on the left,
                and subject rating is on the right.
                The manager rating is the rating of record.
                Only the manager can edit the manager rating,
                and only the subject can edit the subject rating.
                Permissions:
                - "item-rating" permissions affect the manager rating.
                - "subject-item-rating" permissions affect the subject rating.
cmt-opt - 0: Show both item and section comments;
          1: Show only section comments, no item comments;
          2: Show only item comments, no section comments;
          3: Show no item and section comments;
suppress-item-comments - This flag is not supported by 360
                         0: DEFAULT. do NOT suppress item comments (in other words, show item comments)
                         3: suppress item comments.
      NOTE: Either one of behavior-cmt-opt and cmt-opt  must be turned even if comments are not wanted if ratings are to show up. In other words, if only ratings are needed, then turn on comments but suppress them using this attribute.
suppress-item-comments-label - This flag is not supported by 360
                               false: DEFAULT. do NOT suppress item comments label.
                               true: suppress item comments label.
line-break-in-section-comments - This flag is not supported by 360
                                 false: DEFAULT. do NOT add a line break in section comments.
in-summ-display - true if the section is to be displayed in the Summary Sect; default is true; the "bk" value is for backward compatibility.
in-overall-rating - true if the section is to be included in the document overall rating calculation if applicable; default is true; the "bk" value is for backward compatibility.
use-milestone - turning on or off Objective Milestone/Task display; default is "false"
in-objcomp-summ-display - true if the section is to be displayed in the How vs. What section; default is false.
in-objcomp-summ-overall-rating - true if the section is to be included in the overall ratings in the How vs. What section; default is false.
auto-pop-weights - true if you want to auto populate the goal weights with their weights in the goal plan
show-obj-expected-rating - true if showing competency's expected rating for the job role; default is false
min-goals-required - this represents the minimum number of goals that must be in this section to allow the form to
be routed.
max-goals-allowed - this represents the maximum number of goals that are allowed to be in this section, else the form can
not be routed.
sect-mode - normal or EZ-Rater.  EZ-Rater mode shows EZ-Rater rater ui, section summary and other item fields are ignored. Make sure to set the scale-type to HORIZONTAL_RADIO if you want the nice look and feel and must have TGM on.
ez-rater-expand-all - true or false, if the section is in EZ-Rater mode, and this is true, then expand all objective details
obj-edit - allow user to edit objective on from or via a popup
show-calculated-section-rating - true or false. True if showing the section calculated rating. Default is true for backward compatability.
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;

avoid-obj-plan-state-change-by-multiple-forms - When this feature is enabled then the goal plan state can only be changed again via the same form.
-->
<!ATTLIST objective-sect
	index CDATA #REQUIRED
	configurable (true | false) "false"
	mgt-only (true | false) "false"
	sum-comment-only (true | false) "false"
	ask-4-comment (true | false) "false"
	use-jobcode (true | false) "false"
	no-rate (true | false) "false"
	no-weight (true | false) "false"
	summ-opt CDATA "0"
	split-cmt (true | false) "false"
	rating-opt CDATA "0"
	cmt-opt (0 | 1 | 2 | 3) "0"
	suppress-item-comments (0 | 3) "0"
	suppress-item-comments-label (true | false) "false"
	line-break-in-section-comments (true | false) "false"
	in-summ-display (true | false | bk) "bk"
	in-overall-rating (true | false | bk) "bk"
	no-group (true | false) "false"
	use-milestone (true | false) "false"
	if-no-ratings-then-ignore-section (true | false) "true"
	lock-item-weights (true | false) "false"
	in-objcomp-summ-display (true | false) "false"
	in-objcomp-summ-overall-rating (true | false) "false"
	auto-pop-weights (true | false) "false"
	develop-goal (true | false) "false"
	show-learning-activity-competency (true | false) "false"
	learning-activity-section-title CDATA #IMPLIED
	show-obj-expected-rating (true | false) "false"
	min-goals-required CDATA #IMPLIED
	max-goals-allowed CDATA #IMPLIED
	allow-draft-tgm-goals (true | false) "false"
	hide-addexistinggoals-btn (true | false) "false"
	sect-mode (normal | EZ-Rater) "normal"
	ez-rater-expand-all (true | false) "false"
	obj-edit (form | popup) "form"
	show-calculated-section-rating (true | false) "true"
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
	avoid-obj-plan-state-change-by-multiple-forms (true | false) "false"
>
<!--
Name of the section.
-->
<!ELEMENT obj-sect-name (#PCDATA)>
<!ATTLIST obj-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Introduction of the section if any.
-->
<!ELEMENT obj-sect-intro (#PCDATA)>
<!ATTLIST obj-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Section weight.
-->
<!ELEMENT sect-weight (#PCDATA)>
<!--
Section weight for Obj/Comp Summary Section.
-->
<!ELEMENT sect-weight-4-objcomp-summary (#PCDATA)>
<!--
-->
<!--
NOTE: The fm-sect-scale  in the fm-meta element is NOT used by the compensation form.
-->
<!ELEMENT fm-sect-scale (scale-source?, scale-id, scale-type?, scale-value*, scale-adjusted-calculation?, calc-score-max?, calc-score-min?)>
<!--
show-value - true if show both the rating numeric score and name of a scale; false if just showing the rating name/description.
-->
<!ATTLIST fm-sect-scale
	show-value (true | false) "true"
	reverse-scale (true | false) #IMPLIED
>
<!ELEMENT fm-subitem-scale (scale-source?, scale-id, scale-type?, scale-value*, scale-adjusted-calculation?)>
<!--
Note: Only used in competency section if the user wants to define different scales or adjusted scales for competency behavior. 
If fm-subitem-scale is defined, all behavior in that section will use the subitem scale instead of the section scale.
show-value - true if show both the rating numeric score and name of a scale; false if just showing the rating name/description.

NOTE: reverse-scale=true is not supported by EZ-rater
-->
<!ATTLIST fm-subitem-scale
	show-value (true | false) "true"
	reverse-scale (true | false) #IMPLIED
>
<!-- scale-source specifies the source of the scale; defined in ScaleBean.java. -->
<!ELEMENT scale-source (#PCDATA)>
<!-- scale-id is the unique ID for a particular scale. -->
<!ELEMENT scale-id (#PCDATA)>
<!-- scale-type is the type of the scale, such as DROPDOWN, BAR, RADIO, FREETEXT. -->
<!ELEMENT scale-type (#PCDATA)>
<!--
scale-value is a pair of numeric value and description of a score.
-->
<!ELEMENT scale-value (scale-score, scale-desc*)>
<!-- scale-score is the numeric value in a scale. -->
<!ELEMENT scale-score (#PCDATA)>
<!-- scale-desc is the description of the scale score. -->
<!ELEMENT scale-desc (#PCDATA)>
<!ATTLIST scale-desc 
  lang CDATA #IMPLIED
>
<!--
      This optional element is used to map the calculated rating to a range
      for better display.  For example, you can map a numeric rating into a percentage.
      Note, the mapped entity has a value and a label fields. The value is displayed
      depending on the attribute show-value associated with fm-sect-scale element.
      Another example is mapping a range of numeric ratings into a single
      rating label.

      If you include this in the scale that is declared in the fm-meta section, then
      the mapping will apply to the summary section.

      Here is an example of the latter.

          <scale-adjusted-calculation enable="true" >
            <scale-map-value>
              <score-min>0.0</score-min>
              <score-max>1.0</score-max>
              <mapto-score>1.0</mapto-score>
              <mapto-desc><![CDATA[C]]></mapto-desc>
            </scale-map-value>
            <scale-map-value>
              <score-min>1.01</score-min>
              <score-max>2.0</score-max>
              <mapto-score>2.0</mapto-score>
              <mapto-desc><![CDATA[B]]></mapto-desc>
            </scale-map-value>
            <scale-map-value>
              <score-min>2.01</score-min>
              <score-max>3.0</score-max>
              <mapto-score>3.0</mapto-score>
              <mapto-desc><![CDATA[A]]></mapto-desc>
            </scale-map-value>
          </scale-adjusted-calculation>
-->
<!ELEMENT scale-adjusted-calculation (rating-label?, default-rating*, scale-map-value*)>
<!ATTLIST scale-adjusted-calculation
	enable (true | false) "true"
	display-calculated-rating (true | false) "false"
>
<!--
scale-map-value defines a range of value for mapping.
-->
<!ELEMENT scale-map-value (score-min, score-max, mapto-score, mapto-desc+)>
<!-- score-min is the lower value of the range base of fm-sect-scale or fm-subitem-scale. -->
<!ELEMENT score-min (#PCDATA)>
<!-- score-max is the upper value of the range base of fm-sect-scale or fm-subitem-scale. -->
<!ELEMENT score-max (#PCDATA)>
<!-- mapto-score is the numeric value the range is map to.-->
<!ELEMENT mapto-score (#PCDATA)>
<!-- mapto-desc is the description of the range. (non-localized) -->
<!ELEMENT mapto-desc (#PCDATA)>
<!-- mapto-desc is the description of the range. (localized) -->
<!ATTLIST mapto-desc
  lang CDATA #IMPLIED
>

<!--  This optional element is used to map the x-y rating to a single rating.
-->
<!ELEMENT scale-adjusted-matrix (rating-label?, default-rating*, matrix-map-value*)>
<!ATTLIST scale-adjusted-matrix
	enable (true | false) "true"
	show-value (true | false) "true"
>
<!--
scale-map-value defines a range of value for mapping.
-->
<!-- calc-score-max defines max score for calculated rating whne sum calculator is used-->
<!ELEMENT calc-score-max (#PCDATA)>
<!-- calc-score-min defines minimum score for calculated rating whne sum calculator is used-->
<!ELEMENT calc-score-min (#PCDATA)>
<!ELEMENT matrix-map-value (obj-score-min, obj-score-max, comp-score-min, comp-score-max, mapto-score, mapto-desc+)>
<!-- obj-score-min is the  Minimum score for obj-scale -->
<!ELEMENT obj-score-min (#PCDATA)>
<!-- obj-score-max is the  Maximum score for obj-scale-->
<!ELEMENT obj-score-max (#PCDATA)>
<!-- comp-score-min is the  Minimum score for comp-scale-->
<!ELEMENT comp-score-min (#PCDATA)>
<!-- comp-score-max is the  Maximum score for comp-scale-->
<!ELEMENT comp-score-max (#PCDATA)>
<!--
This optional element is used to automatically populate the whole section
with the appropriate type of objectives.  It is used only when the form
instance is created.
The obj-sect-type indicates how to populate the objective section:
"corporate": Populate the entire section with valid corporate objectives,
             filtered by any optional dept/div/loc/custom labels
"user": Populate the entire section with valid personal objectives, filtered
        by any optional dept/div/loc/custom labels
"plan": This is available only for TGM.  Together with obj-sect-plan-id and obj-sect-filter and obj-sect-category filters, appropriate objectives can be auto-populated in the section during document creation.

-->
<!ELEMENT obj-sect-type (#PCDATA)>
<!--
    The "autosync" attribute, when set to true, will synchronize goals from a goal plan and a review form.
    This attribute only works with <obj-sect-type><![CDATA[plan]]></obj-sect-type>
    Goals added to the goal plan after the form is created will also get added to the form.
    Goals deleted from the goal plan after the form is created are deleted from the form.
    Goals deleted from the form are deleted from the goal plan.
    Changes to the form happen the next time the form is opened for editing.
    Forms are only synchronized when they are in a modify route map step.
    It is not recommended to use autosync on forms that are auto-populating a TGM plan into multiple objective 
    sections on the form (based on category).  This is because changing the category of an objective in the TGM plan 
    will move the objective to a different section in the form.  While the objective will move to the new section 
    correctly, any ratings and comments associated to that objective will not be moved and will be lost. 
    
    Sample Code:
    <obj-sect-type autosync="true"><![CDATA[plan]]></obj-sect-type>
    <obj-sect-plan-id>3</obj-sect-plan-id> 
-->
<!ATTLIST obj-sect-type
	autosync (true | false) "false"
>
<!--
TGM Plan Id: used for auto-populating appropriate objectives within the section.
It is only used in composeForm() and when obj-sect-type is "plan".
-->
<!ELEMENT obj-sect-plan-id (#PCDATA)>
<!--
This optional element is used to specify what kind of additional filter (if any)
to be used to filter Corporate/User objectives.  Valid values are (defined
in ObjBean.java):
"department": Department filter
"division": Division filter
"location": Location filter
"custom": Custom filter
-->
<!ELEMENT obj-sect-filter (#PCDATA)>
<!--
This optional element is used to specify exactly the value of the filter to
be used to filter Corporate/User objectives.  It must be used together with
obj-sect-filter.  This is ignored if obj-sect-filter is not specified.
-->
<!ELEMENT obj-sect-filter-val (#PCDATA)>
<!--
This is another filter, in addition to obj-sect-type and obj-sect-filter, for
filtering objectives on their categories.
You can specify zero or more such category filters.
-->
<!ELEMENT obj-category (#PCDATA)>
<!--
Objective filter base on type such as user, group.
You can specify zero or more such objective type filters.
-->
<!ELEMENT obj-type (#PCDATA)>
<!--
This element contains a list of fm-element's to be attached to any competencies
or objectives within their sections.
-->
<!ELEMENT sect-fm-elements (fm-sortable*, fm-element*)>
<!--
This element contains a list of fm-element's to be attached to any competency
section, not on an item level.
-->
<!ELEMENT sect-level-elements (fm-element*)>
<!--
The title attribute will draw a box around all the elements with a title on the box (looks like a section)
-->
<!ATTLIST sect-level-elements
	title CDATA #IMPLIED
>
<!--
This element contains the unique index of the fm-element that can be used
in reports/statistics in sect-fm-elements.
-->
<!ELEMENT fm-sortable (#PCDATA)>
<!-- BEGIN fm-objective
Generic definition for SFV4 objective objects.
IMPORTANT: <fm-milestone> element defined in <fm-objective> is replaced
by <fm-milestones>.  It is still declared here for backward compatability
purpose.

For Group Goal enhancement (TGM-2244) new attribute "fm-obj-master-id" is added to this element.
This attribute will hold the master objective id for the Objective which are created by 
Group Goal Owners.
-->
<!ELEMENT fm-objective (fm-obj-id, fm-obj-pid?, fm-obj-type?, fm-obj-name?, fm-obj-desc?, fm-obj-owner?, fm-obj-start?, fm-obj-end?, fm-obj-due?, fm-obj-status?, fm-obj-flag?, fm-obj-category?, fm-obj-percent?, fm-obj-order?, fm-obj-indent?, fm-obj-number?, fm-obj-metric-min?, fm-obj-metric-max?, fm-obj-metric?, (fm-obj-prop-key, fm-obj-prop-value?)*, fm-obj-filter?, fm-obj-filter-val?, fm-obj-rating?, fm-obj-weight?, fm-usrlst?, fm-comment*, fm-obj-grp?, fm-element*, fm-learning*, fm-targets?, fm-tasks?, fm-milestones?, fm-milestone*, fm-obj-comments?, fm-group-goal-rating?, fm-learning-activities?, fm-competencies?, fm-metric-lookup-table?, fm-obj-achievement?, fm-obj-text-achievement?, fm-obj-master-id?, fm-obj-bizx-actual?, fm-obj-bizx-pos?,fm-obj-bizx-strategic?, fm-obj-bizx-target?)>
<!--mask-->
<!--fm-obj-desc-->
<!--fm-obj-owner-->
<!--
These attributes control the display order of the section.
removable - true if the competency is removable (Remove Button available)
-->
<!ATTLIST fm-objective
	index CDATA #REQUIRED
	removable (true | false) "true"
>
<!-- IDP Learning activity for form-->
<!ELEMENT idp-learning-activity (learning-id, learning-assignee?, learning-name?, learning-desc?, learning-status?, learning-score?, (learning-property-key, learning-property-value)*)>
<!--mask-->
<!--learning-desc-->
<!ATTLIST idp-learning-activity
  transcript (true | false) "false"
>
<!ELEMENT learning-id (#PCDATA)>
<!ELEMENT learning-assignee (#PCDATA)>
<!ELEMENT learning-name (#PCDATA)>
<!ELEMENT learning-desc (#PCDATA)>
<!ELEMENT learning-status (#PCDATA)>
<!ELEMENT learning-score (#PCDATA)>
<!ELEMENT learning-property-key (#PCDATA)>
<!ELEMENT learning-property-value (#PCDATA)>
<!ATTLIST learning-property-value
	type (date | text) "text"
>
<!ELEMENT fm-learning-activities (idp-learning-activity*)>
<!-- Learning activity inside objective section -->
<!ELEMENT fm-learning (fm-element*)>
<!ELEMENT fm-competencies (#PCDATA)>
<!--
These attributes control the display order of the section.
removable - true if the learning activity is removable (Remove Button available)
-->
<!ATTLIST fm-learning
	index CDATA #REQUIRED
	removable (true | false) "true"
>
<!-- Objective Type. -->
<!ELEMENT fm-obj-type (#PCDATA)>
<!-- Objective Id -->
<!ELEMENT fm-obj-id (#PCDATA)>
<!-- Objective Parent Id -->
<!ELEMENT fm-obj-pid (#PCDATA)>
<!-- Objective name -->
<!ELEMENT fm-obj-name (#PCDATA)>
<!-- Objective description -->
<!ELEMENT fm-obj-desc (#PCDATA)>
<!-- Objective owner -->
<!ELEMENT fm-obj-owner (#PCDATA)>
<!-- Objective start date -->
<!ELEMENT fm-obj-start (#PCDATA)>
<!-- Objective end date -->
<!ELEMENT fm-obj-end (#PCDATA)>
<!-- Objective due date -->
<!ELEMENT fm-obj-due (#PCDATA)>
<!-- Objective status -->
<!ELEMENT fm-obj-status (#PCDATA)>
<!-- Objective flag -->
<!ELEMENT fm-obj-flag (#PCDATA)>
<!-- Objective category -->
<!ELEMENT fm-obj-category (#PCDATA)>
<!-- Objective percent done -->
<!ELEMENT fm-obj-percent (#PCDATA)>
<!-- Objective order within a goal plan -->
<!ELEMENT fm-obj-order (#PCDATA)>
<!-- Objective indentation -->
<!ELEMENT fm-obj-indent (#PCDATA)>
<!-- Objective display number within a goal plan -->
<!ELEMENT fm-obj-number (#PCDATA)>
<!-- Objective metric min value -->
<!ELEMENT fm-obj-metric-min (#PCDATA)>
<!-- Objective metric max value-->
<!ELEMENT fm-obj-metric-max (#PCDATA)>
<!-- Objective metric -->
<!ELEMENT fm-obj-metric (#PCDATA)>
<!-- Objective property key -->
<!ELEMENT fm-obj-prop-key (#PCDATA)>
<!-- Objective property value -->
<!ELEMENT fm-obj-prop-value (#PCDATA)>
<!-- Objective filter -->
<!ELEMENT fm-obj-filter (#PCDATA)>
<!-- Objective filter value -->
<!ELEMENT fm-obj-filter-val (#PCDATA)>
<!-- Objective rating if any -->
<!ELEMENT fm-obj-rating (#PCDATA)>
<!-- Objective weighting if any -->
<!ELEMENT fm-obj-weight (#PCDATA)>
<!-- Objective grouping Id if any -->
<!ELEMENT fm-obj-grp (#PCDATA)>
<!-- Objective Targets if any -->
<!ELEMENT fm-targets (fm-target*)>
<!ELEMENT fm-target (fm-target-id?, fm-target-desc?,fm-target-start?, fm-target-date?, fm-target-expectation?, fm-target-actual?, fm-target-custom-num1?, fm-target-custom-num2?, fm-target-rating?, fm-target-weight?, fm-target-score?, fm-target-custom-num3?, fm-target-actual-number?, fm-target-done?)>
<!--target id -->
<!ELEMENT fm-target-start (#PCDATA)>
<!ELEMENT fm-target-id (#PCDATA)>
<!ELEMENT fm-target-desc (#PCDATA)>
<!ELEMENT fm-target-date (#PCDATA)>
<!ELEMENT fm-target-expectation (#PCDATA)>
<!ELEMENT fm-target-actual (#PCDATA)>
<!-- min value for target.-->
<!ELEMENT fm-target-custom-num1 (#PCDATA)>
<!-- Max value for target.-->
<!ELEMENT fm-target-custom-num2 (#PCDATA)>
<!-- rating for target.-->
<!ELEMENT fm-target-rating (#PCDATA)>
<!-- weight for target.-->
<!ELEMENT fm-target-weight (#PCDATA)>
<!--score for target.-->
<!ELEMENT fm-target-score (#PCDATA)>
<!-- target for target.-->
<!ELEMENT fm-target-custom-num3 (#PCDATA)>
<!-- actual for target.-->
<!ELEMENT fm-target-actual-number (#PCDATA)>
<!-- achievement percentage for target.-->
<!ELEMENT fm-target-done (#PCDATA)>

<!-- Objective Task if any; this is the same as fm-milestone; -->
<!ELEMENT fm-tasks (fm-task*)>
<!ELEMENT fm-task (fm-milestone-id, fm-milestone-flag, fm-milestone-desc?, fm-milestone-start?, fm-milestone-due?, fm-milestone-percent?, fm-milestone-lastmodified?, fm-milestone-lastmodifier?, fm-milestone-modifierfullname?, fm-milestone-modifierfirstname?, fm-milestone-modifiermi?, fm-milestone-modifierlastname?, fm-milestone-modifierusername?, fm-milestone-target?, fm-milestone-actual?, fm-milestone-code?, fm-milestone-master-id?, fm-milestone-custom-num1?, fm-milestone-custom-num2?, fm-milestone-rating?, fm-milestone-weight?, fm-milestone-score?, fm-milestone-custom-num3?, fm-milestone-actual-number?)>
<!ELEMENT fm-obj-comments (fm-obj-comment*)>
<!ELEMENT fm-obj-comment (fm-obj-commentator-id, (fm-obj-commentator-fullname | (fm-obj-commentator-firstname?, fm-obj-commentator-mi?, fm-obj-commentator-lastname?, fm-obj-commentator-username?)), fm-obj-comment-date, fm-obj-comment-content)>
<!--mask-->
<!--fm-obj-commentator-id:user_sysinfo:users_sys_id-->
<!--fm-obj-commentator-fullname-->
<!--fm-obj-commentator-firstname:users_sysinfo:users_sys_firstname-->
<!--fm-obj-commentator-mi:users_sysinfo:users_sys_mi-->
<!--fm-obj-commentator-lastname:users_sysinfo:users_sys_lastname-->
<!--fm-obj-commentator-username:users_sysinfo:users_sys_username-->
<!--fm-obj-comment-content-->
<!ELEMENT fm-group-goal-rating (#PCDATA)>
<!ELEMENT fm-obj-commentator-id (#PCDATA)>
<!ELEMENT fm-obj-commentator-fullname (#PCDATA)>
<!ELEMENT fm-obj-commentator-firstname (#PCDATA)>
<!ELEMENT fm-obj-commentator-mi (#PCDATA)>
<!ELEMENT fm-obj-commentator-lastname (#PCDATA)>
<!ELEMENT fm-obj-commentator-username (#PCDATA)>
<!ELEMENT fm-obj-comment-date (#PCDATA)>
<!ELEMENT fm-obj-comment-content (#PCDATA)>
<!-- Begin: Objective Metric Lookup table -->
<!ELEMENT fm-metric-lookup-table (fm-metric-lookup-entry*)>
<!-- For Group Goal enhancement (TGM-2244) new attribute "fm-metric-lookup-entry-master-id" is added to this element.
This attribute will hold the master Metric Lookup Table id for the MLT which are created by 
Group Goal Owners.
-->
<!ELEMENT fm-metric-lookup-entry (fm-metric-lookup-entry-achievement, fm-metric-lookup-entry-text-achievement?, fm-metric-lookup-entry-rating, fm-metric-lookup-entry-description?, fm-metric-lookup-entry-master-id?)>
<!ATTLIST fm-metric-lookup-entry
	index CDATA #REQUIRED
>
<!-- Objective Lookup Entry Achievement -->
<!ELEMENT fm-metric-lookup-entry-achievement (#PCDATA)>
<!-- Objective Lookup Entry Achievement -->
<!ELEMENT fm-metric-lookup-entry-text-achievement (#PCDATA)>
<!-- Objective Rating for the corresponding achievement -->
<!ELEMENT fm-metric-lookup-entry-rating (#PCDATA)>
<!-- Description for the corresponding achievement -->
<!ELEMENT fm-metric-lookup-entry-description (#PCDATA)>
<!-- Master Id for Metric Lookup Table. -->
<!ELEMENT fm-metric-lookup-entry-master-id (#PCDATA)>
<!-- End: Objective Metric Lookup table -->
<!-- Objective Achievement -->
<!ELEMENT fm-obj-achievement (#PCDATA)>
<!-- Objective Achievement -->
<!ELEMENT fm-obj-text-achievement (#PCDATA)>
<!-- Objective master Id.-->
<!ELEMENT fm-obj-master-id (#PCDATA)>
<!-- BizX Actual.-->
<!ELEMENT fm-obj-bizx-actual (#PCDATA)>
<!-- BizX POS.-->
<!ELEMENT fm-obj-bizx-pos (#PCDATA)>
<!-- BizX Strategic.-->
<!ELEMENT fm-obj-bizx-strategic (#PCDATA)>
<!-- BizX Target.-->
<!ELEMENT fm-obj-bizx-target (#PCDATA)>
<!-- Objective Milestone if any; this is the same as fm-task; -->
<!ELEMENT fm-milestones (fm-milestone*)>
<!-- For Group Goal enhancement (TGM-2244) new attribute "fm-milestone-master-id" is added to this element.
This attribute will hold the master Milestone/Task/Target id for the Milestone/Task/Target which are created by 
Group Goal Owners.
-->
<!ELEMENT fm-milestone (fm-milestone-id, fm-milestone-flag, fm-milestone-desc?, fm-milestone-start?, fm-milestone-due?, fm-milestone-percent?, fm-milestone-lastmodified?, fm-milestone-lastmodifier?, fm-milestone-modifierfullname?, fm-milestone-modifierfirstname?, fm-milestone-modifiermi?, fm-milestone-modifierlastname?, fm-milestone-modifierusername?, fm-milestone-target?, fm-milestone-actual?, fm-milestone-code?, fm-milestone-master-id?, fm-milestone-custom-num1?, fm-milestone-custom-num2?, fm-milestone-rating?, fm-milestone-weight?, fm-milestone-score?, fm-milestone-custom-num3?, fm-milestone-actual-number?)>
<!--mask-->
<!--fm-milestone-modifierfullname-->
<!--fm-milestone-modifierfirstname:users_sysinfo:users_sys_firstname-->
<!--fm-milestone-modifiermi:users_sysinfo:users_sys_mi-->
<!--fm-milestone-modifierlastname:users_sysinfo:users_sys_lastname-->
<!--fm-milestone-modifierusername:users_sysinfo:users_sys_username-->
<!-- Milestone/Task Id -->
<!ELEMENT fm-milestone-id (#PCDATA)>
<!-- Milestone/Task Flag: Defined in MilestoneBean.java to distinguish TASK and MILESTONE -->
<!ELEMENT fm-milestone-flag (#PCDATA)>
<!-- Milestone/Task Description if any -->
<!ELEMENT fm-milestone-desc (#PCDATA)>
<!-- Milestone/Task Start Date if any -->
<!ELEMENT fm-milestone-start (#PCDATA)>
<!-- Milestone/Task Due Date if any -->
<!ELEMENT fm-milestone-due (#PCDATA)>
<!-- Milestone/Task Percentage Completed if any -->
<!ELEMENT fm-milestone-percent (#PCDATA)>
<!-- Milestone/Task Last Modified Date if any -->
<!ELEMENT fm-milestone-lastmodified (#PCDATA)>
<!-- Milestone/Task Last Modifier User Id if any -->
<!ELEMENT fm-milestone-lastmodifier (#PCDATA)>
<!-- Milestone/Task Last Modifier Full Name if any -->
<!ELEMENT fm-milestone-modifierfullname (#PCDATA)>
<!ELEMENT fm-milestone-modifierfirstname (#PCDATA)>
<!ELEMENT fm-milestone-modifiermi (#PCDATA)>
<!ELEMENT fm-milestone-modifierlastname (#PCDATA)>
<!ELEMENT fm-milestone-modifierusername (#PCDATA)>
<!-- Milestone/Task Target results/achievement/etc., if any -->
<!ELEMENT fm-milestone-target (#PCDATA)>
<!-- Milestone/Task Actual resultsi/acchivement/etc., if any -->
<!ELEMENT fm-milestone-actual (#PCDATA)>
<!-- Milestone/Task code, if any -->
<!ELEMENT fm-milestone-code (#PCDATA)>
<!-- Master Id for Milestone.-->
<!ELEMENT fm-milestone-master-id (#PCDATA)>
<!-- min value for Milestone.-->
<!ELEMENT fm-milestone-custom-num1 (#PCDATA)>
<!-- Max value for Milestone.-->
<!ELEMENT fm-milestone-custom-num2 (#PCDATA)>
<!-- rating for Milestone.-->
<!ELEMENT fm-milestone-rating (#PCDATA)>
<!-- weight for Milestone.-->
<!ELEMENT fm-milestone-weight (#PCDATA)>
<!--score for Milestone.-->
<!ELEMENT fm-milestone-score (#PCDATA)>
<!-- target for Milestone.-->
<!ELEMENT fm-milestone-custom-num3 (#PCDATA)>
<!-- actual for Milestone.-->
<!ELEMENT fm-milestone-actual-number (#PCDATA)>
<!-- END fm-objective
Generic definition for SFV4 objective objects.
-->
<!-- BEGIN fm-comment
Generic definition for comments in any SFV4 form.
-->
<!ELEMENT fm-comment (fm-comment-userid, fm-comment-fullname?, fm-comment-firstname?, fm-comment-mi?, fm-comment-lastname?, fm-comment-username?, fm-comment-content, fm-comment-rating?)>
<!--mask-->
<!--fm-comment-userid:user_sysinfo:users_sys_id-->
<!--fm-comment-fullname-->
<!--fm-comment-firstname:users_sysinfo:users_sys_firstname-->
<!--fm-comment-mi:users_sysinfo:users_sys_mi-->
<!--fm-comment-lastname:users_sysinfo:users_sys_lastname-->
<!--fm-comment-username:users_sysinfo:users_sys_username-->
<!--fm-comment-content-->
<!--fm-comment-rating-->
<!--
These attributes control the display order of the comment.
This may be obsolete.
-->
<!ATTLIST fm-comment
	index CDATA #REQUIRED
	mime-type (plain-text | html) "plain-text"
>
<!-- Commentator's user Id -->
<!ELEMENT fm-comment-userid (#PCDATA)>
<!-- Commentator's full name -->
<!ELEMENT fm-comment-fullname (#PCDATA)>
<!ELEMENT fm-comment-firstname (#PCDATA)>
<!ELEMENT fm-comment-mi (#PCDATA)>
<!ELEMENT fm-comment-lastname (#PCDATA)>
<!ELEMENT fm-comment-username (#PCDATA)>
<!-- The actual comment -->
<!ELEMENT fm-comment-content (#PCDATA)>
<!-- The user's rating if any; this is not used for average/overall rating calculations. -->
<!ELEMENT fm-comment-rating (#PCDATA)>
<!-- END fm-comment
Generic definition for comments in any SFV4 form.
-->
<!--
PM competency section.
Element meta-grp is added just to replicate meta-grp in fm-meta so that
they can be used in XSL transformation.  They will not be saved in the XML
document itself.
-->
<!ELEMENT competency-sect (comp-sect-name, comp-sect-intro?, fm-sect-config?, allow-to-add-development-goal?, editable-in-signature-step?, action-permission*, field-permission*, behavior-rating-calc?, competency-rating-calc?, sect-weight?, sect-weight-4-objcomp-summary?, fm-sect-scale?, fm-subitem-scale?, comp-category*, sect-fm-elements?, sect-level-elements?, fm-competency*, fm-comment*, meta-grp-label?, meta-grp*, content-filters?, fm-rating-info-config?, fm-comp-filter-mapping?)>
<!--
These attributes control the display order of the section.  It also
controls whether or not a user can add/remove competencies in the
section.
index - Section's display order within the form;
configurable - true if users are allowed to add/remove items within the section;
mgt-only - true if only manager/hr can see this section;
sum-comment-only - obsolete; replaced by cmt-opt
ask-4-comment - obsolete; make it always "false";
use-core-comp - Set this to true to auto-populate the section with company specific core competencies; The core competencies are added after (if any) hard coded competencies are defined and before any job-code specific(if enabled and available) competencies
use-jobcode - true if the section is using subject's jobcode to auto-populate the section with related competencies;
no-rate - false if show rating scale for items within the section;
no-weight - false if show item weights within the section, and the section's average rating will be used in the form's calculated overall rating;
no-group - false if show item groupings (if any) within the section and include it in the overall grouping count;
summ-opt - maximum number of section items for section summary to be displayed; to turn on section summary at all times, then make it 0; to turn off the section summary at all times, then make it a big number, say 99999;
split-cmt - true if displaying subject and manager's comments side by side;
rating-opt - 0: default, no ratings next to each user's comment;
             1: display rating next to subject's comment;
             2: display rating next to all evaluators' comments;
             3: side-by-side manager and subject ratings (not supported in V1 renderer)
                Manager rating is on the left,
                and subject rating is on the right.
                The manager rating is the rating of record.
                Only the manager can edit the manager rating,
                and only the subject can edit the subject rating.
                Permissions:
                - "item-rating" permissions affect the manager rating.
                - "subject-item-rating" permissions affect the subject rating.
cmt-opt - 0: Show both item and section comments;
          1: Show only section comments, no item comments;
          2: Show only item comments, no section comments;
          3: Show no item and section comments;
suppress-item-comments - This flag is not supported by 360
                         0: DEFAULT. do NOT suppress item comments (in other words, show item comments)
                         1: suppress behavior comments but allow competency comments.
                         2: suppress competency comments but allow behavior comments.
                         3: suppress item comments. if this option is selected then behaviors and competencies will not get comments.
      NOTE: Either one of behavior-cmt-opt and cmt-opt  must be turned even if comments are not wanted if ratings are to show up. In other words, if only ratings are needed, then turn on comments but suppress them using this attribute.
suppress-item-comments-label - This flag is not supported by 360
                               false: DEFAULT. do NOT suppress item comments label.
                               true: suppress item comments label.
line-break-in-section-comments - This flag is not supported by 360
                                 false: DEFAULT. do NOT add a line break in section comments.
                                 true: add a line break in section comments.
behavior-cmt-opt - 0: Show behavior item comments (and if applicable, the evaluator* rating);
                   1: DEFAULT. Do not Show any behavior item comments or evaluator* ratings.
              * evaluator rating implies the suggested rating that does not figure
                into the rating calculation.
behavior-rating-opt - 0 : DEFAULT. No ratings next to the subject's comment;
                      1 : Display rating next to subject's comment only.
                          All others, just provide the comment field;
                      2 : Display rating next to all evaluators' comments;

behavior-mode-opt:
      NOTE: When this option is in use (i.e., not zero),
      then use-behavior must not be set to true. If use-behavior
      is set to true and behavior-mode-opt is non-zero, then
      our code may not be handle the competency section correctly.
      (Please note that because of EE-9744, we do need to provide
      some level of support for setting use-behavior to true and
      setting behavior-mode-opt to non-zero, but this configuration
      should not be introduced to any other customer. Another caveat
      is that in DDI's case, lock-behavior-content must not be set to
      true)
                  
      0 : DEFAULT. Do not display any behaviors above or
          below the competency description.
      1 : Displays the Behaviors items below the
          competency rating.  Only the behaviors
          mapped to the job code is(are) displayed.
          Therefore, this feature will only work
          when the subject has a valid jobcode. If
          the competency does not have any behaviors,
          then, of course, none are displayed
      2 : Displays the Behaviors items above the
          competency rating.  Only the behaviors
          mapped to the job code is(are) displayed.
          Therefore, this feature will only work
          when the subject has a valid jobcode. If
          the competency does not have any behaviors,
          then, of course, none are displayed
      3: BEHAVIOR_MODE_CALCULATED_COMPETENCY_RATING_MANUAL_OVERRIDE - this is not implemented according to Mo 
      4: use-jobcode is eclipsed to false if this is set. Competencies must be manually added to the form, and all behaviors for
         competencies added will be displayed on the form BELOW competency rating, regardless of the jobcode-behavior mappping.         
      5: use-jobcode is eclipsed to false if this is set. Competencies must be manually added to the form, and all behaviors for
         competencies added will be displayed on the form ABOVE competency rating, regardless of the jobcode-behavior mapping

in-summ-display - true if the section is to be displayed in the Summary Sect; default is true; the "bk" value is for backward compatibility.
in-overall-rating - true if the section is to be included in the document overall rating calculation if applicable; default is true; the "bk" value is for backward compatibility.
use-subtopic - render teasers under each competency and calculate competency rating based on the teasers; this should not be used any more; to be replaced by use-behavior
use-behavior
    - THIS ATTRIBUTE SHOULD BE MORE APPLICABLLY NAMED
      rate-by-behaviors since with the advent of
      behavior-mode-opt attribute, it is possible
      to use behaviors but not rate by behaviors.
    - NOTE: When behavior-mode-opt is non-zero,
      use-behavior should not be set to true. In
      other words, if behavior-mode-opt is non zero, then
      use-behavior MUST be false. If use-behavior is set to
      true, then the system may not be able to handle the
      competency section correctly.
    - When set to true, it renders behaviors under
      each competency and calculates competency
      rating based on the behavior(s).

in-objcomp-summ-display - true if the section is to be displayed in the How vs. What section; default is false.
in-objcomp-summ-overall-rating - true if the section is to be included in the overall ratings in the How vs. What section; default is false.
show-comp-expected-rating - true if showing competency's expected rating for the job role; default is false
comp-expected-rating-format - 0 if showing the expected rating in %; 1 if converting the % to a score normalized to the section scale; default is 0;
show-behavior-expected-rating - true if showing behavior's expected rating for the job role; default is false; this should be ignored if use-behavior is false
behavior-expected-rating-format - 0 if showing the expected rating in %; 1 if converting the % to a score normalized to the section scale; default is 0;
behavior-weighted - true if behavior is weighted; false if equally weighted and no weight fields will be displayed for Behaviors.
min-competencies-required - this represents the minimum number of competencies that must be in this section to allow the form to
be routed.
max-competencies-allowed - this represents the maximum number of competencies that are allowed to be in this section, else the form can
not be routed.
sect-mode - normal, question, or EZ-Rater.  question mode is used for survey and ignores attributes that do not apply to survey. EZ-Rater mode shows EZ-Rater rater ui, section summary and other item fields are ignored.
ez-rater-expand-all - true or false, if the section is in EZ-Rater mode, and this is true, then expand all competency details
show-calculated-section-rating - true or false. True if showing the section calculated rating. Default is true for backward compatability.
lock-behavior-content - true or false (default to false) If behavior-mode-opt is set to 0, this attribute is assumed false. 
                        If behavior-mode-opt is non-zero and this is set to false, behavior list is not hardcored to the form during form creation and form modification, and behavior list is linked to the corresponding competency.
                        In this case, when jobcode changes or behavior name/description is updated, the behavior for the existing form instances do reflect changes.
                        If behavior-mode-opt is non-zero and this is set to true, behavior list is hardcoded to the form during form creation and form modification, rather than being linked to the corresponding competency.
                        In this case, when jobcode changes or behavior name/description is updated, the behavior for the existing form instances do not reflect changes.
content-filters - a list of content-filter used for filtering out competency libraries
"hide-waca" - determines whether or not to hide the writing assistant.  This is only applicable when the company or form template have been configured to display the writing assistant.
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
freeze-behavior-on-completion - true if freeze behavior when form is completed; default is false.
-->
<!ATTLIST competency-sect
	index CDATA #REQUIRED
	configurable (true | false) "true"
	mgt-only (true | false) "false"
	sum-comment-only (true | false) "false"
	ask-4-comment (true | false) "false"
	use-jobcode (true | false) "false"
	use-core-comp (true | false) "false"
	category-filter-opt (no-filter | specified-category) "no-filter"
	no-rate (true | false) "false"
	no-weight (true | false) "false"
	summ-opt CDATA "0"
	split-cmt (true | false) "false"
	rating-opt CDATA "0"
	cmt-opt (0 | 1 | 2 | 3) "0"
	suppress-item-comments (0 | 1 | 2 | 3) "0"
	suppress-item-comments-label (true | false) "false"
	line-break-in-section-comments (true | false) "false"
	behavior-rating-opt (0 | 1 | 2) "0"
	behavior-cmt-opt (0 | 1) "1"
	behavior-mode-opt (0 | 1 | 2 | 3 | 4 | 5) "0"
	in-summ-display (true | false | bk) "bk"
	in-overall-rating (true | false | bk) "bk"
	no-group (true | false) "false"
	use-subtopic (true | false) "false"
	use-behavior (true | false) "false"
	if-no-ratings-then-ignore-section (true | false) "true"
	lock-item-weights (true | false) "false"
	in-objcomp-summ-display (true | false) "false"
	in-objcomp-summ-overall-rating (true | false) "false"
	show-comp-expected-rating (true | false) "false"
	show-comp-proficiency-level (true | false) "false"
	comp-expected-rating-format (0 | 1) "0"
	show-behavior-expected-rating (true | false) "false"
	behavior-expected-rating-format (0 | 1) "0"
	behavior-weighted (true | false) "false"
	min-competencies-required CDATA #IMPLIED
	max-competencies-allowed CDATA #IMPLIED
	sect-mode (normal | question | EZ-Rater) "normal"
	ez-rater-expand-all (true | false) "false"
	show-calculated-section-rating (true | false) "true"
	lock-behavior-content (true | false) "false"
	hide-waca (true | false) "false"
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
	freeze-behavior-on-completion (true | false) "false"
>
<!--
Name of the section.
-->
<!ELEMENT comp-sect-name (#PCDATA)>
<!ATTLIST comp-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Introduction of the section if any.
-->
<!ELEMENT comp-sect-intro (#PCDATA)>
<!ATTLIST comp-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Competency category filter; ignored if null.
-->
<!ELEMENT comp-category (#PCDATA)>
<!ELEMENT allow-to-add-development-goal EMPTY>
<!--
This element is valid ONLY for a 360 form and ONLY in a competency section.
Configuring a competency section with this element makes the section editable in the evaluation stage AND the signature stage.
If you want a section to be visible / editable ONLY in the signature stage, then you need to configure the section using the permissions
associated with a competency section.
When you use this flag, DO NOT use ratings, weight or split comments.
-->
<!ELEMENT editable-in-signature-step EMPTY>
<!-- BEGIN fm-competency
Generic competency object definition in any SFV4 form.
TODO: Need to figure out how to render the Select Competency button.
-->
<!ELEMENT fm-competency (fm-comp-id, fm-comp-name*, fm-comp-desc*, fm-comp-type?, fm-comp-cat?, fm-comp-lib?, fm-comp-expected-rating?, fm-comp-proficiency-level?, fm-comp-rating?, fm-rating-method?, fm-rating-date?, fm-rated-by?, fm-comp-unadjusted-rating?, fm-comp-weight?, fm-usrlst?, fm-comment*, fm-comp-grp?, fm-element*, fm-subtopic*, fm-behavior*)>
<!--
These attributes control the display order of the competency.
removable - true if the competency is removable (Remove Button available)
-->
<!ATTLIST fm-competency
	guid CDATA #IMPLIED
	index CDATA #REQUIRED
	removable (true | false) "true"
>
<!-- User List: A list of user Ids (separated by ",") that will see the
     item. -->
<!ELEMENT fm-usrlst (#PCDATA)>
<!-- Competency Id -->
<!ELEMENT fm-comp-id (#PCDATA)>
<!-- Competency Name -->
<!ELEMENT fm-comp-name (#PCDATA)>
<!ATTLIST fm-comp-name
	lang CDATA #IMPLIED
>
<!-- Competency Description -->
<!ELEMENT fm-comp-desc (#PCDATA)>
<!ATTLIST fm-comp-desc
	lang CDATA #IMPLIED
>
<!-- Competency Type -->
<!ELEMENT fm-comp-type (#PCDATA)>
<!-- Competency Category -->
<!ELEMENT fm-comp-cat (#PCDATA)>
<!-- Competency Library Name -->
<!ELEMENT fm-comp-lib (#PCDATA)>
<!-- Competency Expected Rating if any -->
<!ELEMENT fm-comp-expected-rating (#PCDATA)>
<!-- Competency Proficiency Level if any -->
<!ELEMENT fm-comp-proficiency-level (#PCDATA)>
<!-- Competency Rating if any -->
<!ELEMENT fm-comp-rating (#PCDATA)>
<!-- Rating method -->
<!ELEMENT fm-rating-method (#PCDATA)>
<!-- Rating date -->
<!ELEMENT fm-rating-date (#PCDATA)>
<!-- rated by -->
<!ELEMENT fm-rated-by (full-name?)>
<!-- element to hold user's full name inofmration -->
<!ELEMENT full-name (user-id, user-name?, first-name?, last-name?, initial?)>
<!--mask-->
<!--user-id:user_sysinfo:users_sys_id-->
<!--user-name:users_sysinfo:users_sys_username-->
<!--first-name:users_sysinfo:users_sys_firstname-->
<!--last-name:users_sysinfo:users_sys_lastname-->
<!--initial-->
<!-- Unadjusted Competency Rating(Populated only if the competency has behaviors and use adjusted scale calculation or if the section scale and subitem scale is different) if any -->
<!ELEMENT fm-comp-unadjusted-rating (#PCDATA)>
<!-- Competency Weight if any -->
<!ELEMENT fm-comp-weight (#PCDATA)>
<!-- Competency grouping Id if any -->
<!ELEMENT fm-comp-grp (#PCDATA)>
<!-- OBSOLETE!!!!  Replaced by fm-behavior-->
<!-- Subtopic -->
<!ELEMENT fm-subtopic (fm-topic-id, fm-topic-name*, fm-topic-rating?, fm-topic-weight?, fm-topic-coaching*)>
<!ATTLIST fm-subtopic
	index CDATA #REQUIRED
>
<!-- Subtopic Id -->
<!ELEMENT fm-topic-id (#PCDATA)>
<!-- Subtopic Name -->
<!ELEMENT fm-topic-name (#PCDATA)>
<!ATTLIST fm-topic-name
	lang CDATA #IMPLIED
>
<!-- Subtopic Rating -->
<!ELEMENT fm-topic-rating (#PCDATA)>
<!-- Subtopic Weight -->
<!ELEMENT fm-topic-weight (#PCDATA)>
<!-- Subtopic Coaching Advisor; used as Subtopic desc -->
<!ELEMENT fm-topic-coaching (#PCDATA)>
<!ATTLIST fm-topic-coaching
	lang CDATA #IMPLIED
>
<!-- OBSOLETE!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->
<!-- Attribute(s) for fm-topic-coaching -->
<!-- "0": DETAIL; "1": HEADER; "2": TITLE. -->
<!ATTLIST fm-topic-coaching
	type CDATA #IMPLIED
>
<!-- Behavior (New Version) -->
<!ELEMENT fm-behavior (fm-behavior-id?, fm-behavior-name*, fm-behavior-desc*, fm-behavior-expected-rating?, fm-behavior-rating?, fm-behavior-wgt?, fm-rating-method?, fm-rating-date?, fm-rated-by?, fm-comment*, fm-element*)>
<!ATTLIST fm-behavior
	index CDATA #REQUIRED
	removable (true | false) "true"
>
<!-- Behavior Id -->
<!ELEMENT fm-behavior-id (#PCDATA)>
<!-- Behavior Name -->
<!ELEMENT fm-behavior-name (#PCDATA)>
<!ATTLIST fm-behavior-name
	lang CDATA #IMPLIED
>
<!-- Behavior Description -->
<!ELEMENT fm-behavior-desc (#PCDATA)>
<!ATTLIST fm-behavior-desc
	lang CDATA #IMPLIED
>
<!-- Behavior Expected Rating -->
<!ELEMENT fm-behavior-expected-rating (#PCDATA)>
<!-- Behavior Rating -->
<!ELEMENT fm-behavior-rating (#PCDATA)>
<!-- Behavior Weight -->
<!ELEMENT fm-behavior-wgt (#PCDATA)>
<!-- expression for calculating individual behavior rating -->
<!ELEMENT behavior-rating-calc (expression)>
<!-- expression for calculating individual competency rating -->
<!ELEMENT competency-rating-calc (expression)>
<!-- END fm-competency
Generic competency object definition in any SFV4 form.
-->
<!--
PM Customized Section.
Note: The display order of the individual sections
are defined in fm-sect element.
-->
<!ELEMENT custom-sect (fm-sect+)>

<!--
Signature section if any.
Note: Even though signature section is a regular fm-sect, you can only
specify signature section name and introduction text.  The rest of the
elements within this section will be ignored.
-->
<!ELEMENT signature-sect (fm-sect+)>

<!--
Objective/Competency Overall Rating Summary Section; used in How vs. What.
overall-rating-display-order: control the display order of the overall ratings.
             "manual-calc" - DEFAULT: display in the order of manual rating/calculated rating.
             "calc-manual" - display in the order of calculated rating/manual rating.
section-display-order: control the display order of sections.
             "comp-obj" - DEFAULT: display in the order of Competency section/objective section.
             "obj-comp" - display in the order of objective section/Competency section.
             
ococ-rating-calc-mode: determines what kind of calculation method is used to calculate the OCOC score
						"matrix-lookup" - DEFAULT: uses the matrix-lookup table in <scale-matrix-lookup> to determine final score
						"avg" 					- averages and normalizes the OCOC score (e.g. sum(rating * weight) / sum(weight))
						"sum"						- sums the OCOC score (e.g. (sum(rating * weight) / 100) or (sum(rating) / 100) if weight is ignored)
						NOTE: "friendly" calculation is achieved by setting "rate-by-adding-values" attribute to "true" 
									in the sf-pmreview section AND ococ-rating-calc-mode to "sum", which will sum the values while  
									ignoring the weights	(e.g. sum(rating))
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
-->
<!ELEMENT objcomp-summary-sect (oc-sect-name, oc-sect-intro?, fm-sect-config?, field-permission*, matrix-grid-id?, matrix-grid-version?, comp-scale?, obj-scale?, scale-adjusted-matrix?, grid-bg-color?, x-axis-label?, y-axis-label?, x-axis?, y-axis?, comp-summary-rating?, comp-cal-summary-rating?, comp-cal-summary-weight?, comp-summary-rating-label?, comp-cal-summary-rating-label?, obj-summary-rating?, obj-cal-summary-rating?, obj-cal-summary-weight?, obj-summary-rating-label?, obj-cal-summary-rating-label?, fm-comment*)>
<!ATTLIST objcomp-summary-sect
	index CDATA #REQUIRED
	mgt-only (true | false) "false"
	comp-manual-rating (true | false) "true"
	obj-manual-rating (true | false) "true"
	comp-cal-rating (true | false) "true"
	obj-cal-rating (true | false) "true"
	split-cmt (true | false) "false"
	rating-opt CDATA "0"
	cmt-opt (0 | 1) "0"
	show-listing (true | false) "true"
	show-ococ-rating (true | false) "false"
	rating-mode CDATA "text"
	show-9box (true | false) "true"
	overall-rating-display-order (manual-calc | calc-manual) "manual-calc"
	section-display-order (comp-obj | obj-comp) "comp-obj"
	ococ-rating-calc-mode (matrix-lookup | avg | sum) "matrix-lookup"
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
>
<!ELEMENT oc-sect-name (#PCDATA)>
<!ATTLIST oc-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT oc-sect-intro (#PCDATA)>
<!ATTLIST oc-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- For now, the Id should be howvswhat_matrix_grid_report. -->
<!ELEMENT matrix-grid-id (#PCDATA)>
<!-- The version # for matrix grid setting-->
<!ELEMENT matrix-grid-version EMPTY>
<!ATTLIST matrix-grid-version
    versionNumber CDATA #REQUIRED
>
<!ELEMENT comp-scale (fm-sect-scale)>
<!-- This show-value will be used to set the show-value attribute in the fm-sect-scale. -->
<!ATTLIST comp-scale
	show-value (true | false) "true"
	show-overall-rating-link (true | false) "true"
>
<!ELEMENT obj-scale (fm-sect-scale)>
<!-- This show-value will be used to set the show-value attribute in the fm-sect-scale. -->
<!ATTLIST obj-scale
	show-value (true | false) "true"
	show-overall-rating-link (true | false) "true"
>
<!ELEMENT grid-bg-color (#PCDATA)>
<!ELEMENT x-axis-label (#PCDATA)>
<!ATTLIST x-axis-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT y-axis-label (#PCDATA)>
<!ATTLIST y-axis-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- x-axis must be either "competency" or "objective" -->
<!ELEMENT x-axis (#PCDATA)>
<!-- y-axis must be either "competency" or "objective" -->
<!ELEMENT y-axis (#PCDATA)>
<!ELEMENT comp-summary-rating (#PCDATA)>
<!ELEMENT comp-cal-summary-rating (#PCDATA)>
<!-- comp-cal-summary-weight is used in OCOC calculation when ococ-rating-calc-mode is "avg" or "sum" for competencies -->
<!ELEMENT comp-cal-summary-weight (#PCDATA)>
<!ELEMENT comp-summary-rating-label (#PCDATA)>
<!ATTLIST comp-summary-rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT comp-cal-summary-rating-label (#PCDATA)>
<!ATTLIST comp-cal-summary-rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT obj-summary-rating (#PCDATA)>
<!ELEMENT obj-cal-summary-rating (#PCDATA)>
<!-- obj-cal-summary-weight is used in OCOC calculation when ococ-rating-calc-mode is "avg" or "sum" for objectives -->
<!ELEMENT obj-cal-summary-weight (#PCDATA)>
<!ELEMENT obj-summary-rating-label (#PCDATA)>
<!ATTLIST obj-summary-rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT obj-cal-summary-rating-label (#PCDATA)>
<!ATTLIST obj-cal-summary-rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Performance/Potential Rating Summary Section.
section-display-order: control the display order of sections.
             "perf-pot" - DEFAULT: display in the order of Performance section/Potential section.
             "pot-perf" - display in the order of Potential section/Performance section.
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
-->
<!ELEMENT perfpot-summary-sect (pp-sect-name, pp-sect-intro?, fm-sect-config?, field-permission*, perf-scale?, pot-scale?, manual-performance-rating?, manual-performance-rating-label?, manual-potential-rating?, manual-potential-rating-label?, fm-comment*, sect-level-elements?, perfpot-matrix-grid-filter*, matrix-grid-version?)>
<!ATTLIST perfpot-summary-sect
	index CDATA #REQUIRED
	mgt-only (true | false) "false"
	perf-manual-rating (true | false) "true"
	pot-manual-rating (true | false) "true"
	cmt-opt (0 | 1) "0"
	show-9box (true | false) "true"
	section-display-order (perf-pot | pot-perf) "perf-pot"
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
>
<!ELEMENT pp-sect-name (#PCDATA)>
<!ATTLIST pp-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT pp-sect-intro (#PCDATA)>
<!ATTLIST pp-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT perf-scale (fm-sect-scale)>
<!-- This show-value will be used to set the show-value attribute in the fm-sect-scale. -->
<!ATTLIST perf-scale
	show-value (true | false) "true"
>
<!ELEMENT pot-scale (fm-sect-scale)>
<!-- This show-value will be used to set the show-value attribute in the fm-sect-scale. -->
<!ATTLIST pot-scale
	show-value (true | false) "true"
>
<!--performance/potential matrix grid-->
<!ELEMENT perfpot-matrix-grid-filter (role-name*, route-step*)>
<!ATTLIST perfpot-matrix-grid-filter
	filter-option (form-subject | sm-matrix-grid-permissions) "form-subject"
> 
<!ELEMENT manual-performance-rating (#PCDATA)>
<!ELEMENT manual-performance-rating-label (#PCDATA)>
<!ATTLIST manual-performance-rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT manual-potential-rating (#PCDATA)>
<!ELEMENT manual-potential-rating-label (#PCDATA)>
<!ATTLIST manual-potential-rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
PM compensation section.
-->
<!ELEMENT compensation-sect (compensation-sect-name, compensation-sect-intro?, fm-sect-config?, compensation-template-id, compensation-plan-id?, compensation-folder-map-id?, compensation-form-data-id?, compensation-field*)>
<!--
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
-->
<!ATTLIST compensation-sect
	index CDATA #REQUIRED
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
>

<!ELEMENT compensation-template-id (#PCDATA)>
<!ELEMENT compensation-plan-id (#PCDATA)>
<!ELEMENT compensation-folder-map-id (#PCDATA)>
<!ELEMENT compensation-form-data-id (#PCDATA)>
<!ELEMENT compensation-sect-name (#PCDATA)>
<!ATTLIST compensation-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT compensation-sect-intro (#PCDATA)>
<!ATTLIST compensation-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!ELEMENT compensation-field (comp-field-value?)>
<!ATTLIST compensation-field
	id CDATA #REQUIRED
	show-if-value-empty (true | false) "true"
>
<!ELEMENT comp-field-value (#PCDATA)>
<!--
PM Summary section if any.
NOTE: fm-sect-scale is obsolete.  It is replaced by fm-sect-scale in fm-meta
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
-->
<!ELEMENT summary-sect (summary-sect-name, summary-sect-intro?, fm-sect-config?, action-permission*, field-permission*, fm-sect-scale?, summary-rating?, cal-summary-rating?, unadjusted-overall-summary-rating?, overall-rating-label?, calc-rating-label?, unadjusted-calc-rating-label?, group-matrix-other-label?, show-gap-competencies-in-summary?, allow-close-individual-gap-in-summary?, show-gap-behaviors-in-summary?, show-behaviors-in-summary?, show-cdp-wizard-button?, fm-element*, fm-comment*)>
<!--
These attributes control the display order of the section.
index - display order of the section within the form;
mgt-only - true if only manager/hr can see this section;
ask-4-comment - obsolete;
manual-rating: true if allow user to put an overall rating that is different
from the calculated one (if any); if it is false, then summary-rating is
the same as the calculated rating and fm-sect-scale is ignored if any, and
users are not allowed to override it.
override-unrated: This is only applicable if manual-rating is true. If
manual rating is false, override-unrated is ignored.
If manual-rating is true then the overall rating is always the manual rating.
If manual-rating is true and override-unrated is true,
then if the manual rating is unrated when the form is routed, the manual rating
(and thus the overall rating) will be changed to the calculated rating.
split-cmt - true if displaying subject and manager's comments side by side;
rating-opt - 0: default, no ratings next to each user's comment;
             1: display rating next to subject's comment;
             2: display rating next to all evaluators' comments;
cmt-opt - 0: Show section comments; default
          1: No section comments;
show-listing: true if allow listing; false if not; default is true.
rating-mode: "text" - default; display ratings in text;
             "graph" - display ratings in graphical form;
             "mixed" - display ratings in both text and graphical forms.
use-adjusted-scale-for-section-header-rating: controls how the overall section rating is displayed
             in the summary section.
             0 - DEFAULT: display the manual/calculated rating. For calculated, there is
                       no rating label just rating value.
             1 - take the calucalated/manual section rating and use the adjusted scale (defined
                       in the meta section) to display the adjusted rating label and/or the
                       adjusted rating value.
             2 - a combination of 0 and 1. display the original rating but use the label from
                       the adjusted scale.
show-group-matrix: true if allow group matrix display in the section; default is true
overall-rating-display-order: control the display order of the overall ratings.
             "manual-calc" - DEFAULT: display in the order of manual rating/calculated rating.
             "calc-manual" - display in the order of calculated rating/manual rating.
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
-->
<!ATTLIST summary-sect
	index CDATA #REQUIRED
	mgt-only (true | false) "false"
	ask-4-comment (true | false) "false"
	manual-rating (true | false) "true"
	override-unrated (true | false) "false"
	split-cmt (true | false) "false"
	rating-opt CDATA "0"
	cmt-opt (0 | 1) "0"
	show-listing (true | false) "true"
	rating-mode CDATA "text"
	use-adjusted-scale-for-section-header-rating (0 | 1 | 2) "0"
	show-group-matrix (true | false) "true"
	overall-rating-display-order (manual-calc | calc-manual) "manual-calc"
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
>
<!-- Name of the section. -->
<!ELEMENT summary-sect-name (#PCDATA)>
<!ATTLIST summary-sect-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- Introduction of the section if any. -->
<!ELEMENT summary-sect-intro (#PCDATA)>
<!ATTLIST summary-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
Overall rating of the PM form if any.  This defaults to the calculated
average of all sections included in overall calculation.  But users
are allowed to override the calculated average rating.
-->
<!ELEMENT summary-rating (#PCDATA)>
<!--
Calculated Overall rating of the PM form if any.
-->
<!ELEMENT cal-summary-rating (#PCDATA)>
<!--
the actual calculated overall form rating (ie, before
any adjustments based on the adjusted-scale
-->
<!ELEMENT unadjusted-overall-summary-rating (#PCDATA)>
<!--
A non-zero-length string (including whitespace)
will over-ride the default "Overall Form Rating" label
-->
<!ELEMENT overall-rating-label (#PCDATA)>
<!ATTLIST overall-rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
A non-zero-length string (including whitespace)
will over-ride the default "Calculated Form Rating" label
-->
<!ELEMENT calc-rating-label (#PCDATA)>
<!ATTLIST calc-rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
A non-zero-lengh string (including whitespace)
-->
<!ELEMENT unadjusted-calc-rating-label (#PCDATA)>
<!ATTLIST unadjusted-calc-rating-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!--
A non-zero-length string (including whitespace)
will over-ride the default "Other" label
-->
<!ELEMENT group-matrix-other-label (#PCDATA)>
<!ELEMENT allow-close-individual-gap-in-summary EMPTY>
<!ELEMENT show-gap-competencies-in-summary EMPTY>
<!--
Should the behaviors for each competency, if rate by behavior, be shown in the
summary section along with the gap
-->
<!ELEMENT show-gap-behaviors-in-summary EMPTY>
<!--
Should the behaviors for each competency, if rate by behavior, be shown in the
summary section.
-->
<!ELEMENT show-behaviors-in-summary EMPTY>
<!--
Show CDP Wizard Button
-->
<!ELEMENT show-cdp-wizard-button EMPTY>
<!--
dev-template-id is required so we know which id is it refering to. 
Also, it will added to the goal automatically if template-id matches one of the
goal template id in the PM form.
default-select is use for which competency will be selected by default when users
click on the wizard.
If the value is not specified, the competencies with negative gap graph will be
checked.
-->
<!ATTLIST show-cdp-wizard-button
	dev-template-id CDATA #REQUIRED
	default-select (positive | negative | neutral) "negative"
>
<!-- BEGIN fm-meta
Generic meta data section for all forms.
-->
<!ELEMENT fm-meta (meta-form-id?, meta-form-type?, meta-originator?, meta-orig-usrnm?, meta-orig-lnm?, meta-orig-fnm?, meta-orig-mi?, meta-title?, meta-subject?, meta-subj-usrnm?, meta-subj-lnm?, meta-subj-fnm?, meta-subj-mi?, meta-hist-mgr?, meta-hist-mgr-nm?, meta-hist-mgr-fn?, meta-hist-mgr-mi?, meta-hist-mgr-ln?, meta-hist-mgr-un?, meta-mgr?, meta-mgr-nm?, meta-mgr-fn?, meta-mgr-mi?, meta-mgr-ln?, meta-mgr-un?, meta-hr?, meta-hr-nm?, meta-hr-fn?, meta-hr-mi?, meta-hr-ln?, meta-hr-un?, meta-participants*, meta-create-date?, meta-completion-date?, meta-lastmodified?, meta-due-date?, meta-start-date?, meta-end-date?, meta-rated?, meta-rating?, meta-scale?, meta-step-id?, meta-enforce-rte-limit?, meta-enforce-plain-text-length-limit?, meta-grp-label?, meta-grp*, meta-cat*, meta-cat-default-label?, meta-360-overall-form-threshold?, rater-id-permission*, meta-360-rollup-category-name*, fm-sect-scale?, meta-place-text-suffix?, meta-item-weight-floor-ceiling-option?, meta-job-code?, meta-job-roles*, meta-job-role-descriptions*, enable-previous-step-button?, enable-delete-button?, button-permission*,mass-route-permission*, meta-form-rating-calc?, my-team-rater?, meta-sign-rec?, meta-normalize-form-rating?)>

<!--mask-->
<!--meta-originator:user_sysinfo:users_sys_id-->
<!--meta-orig-usrnm:users_sysinfo:users_sys_username-->
<!--meta-orig-lnm:users_sysinfo:users_sys_lastname-->
<!--meta-orig-fnm:users_sysinfo:users_sys_firstname-->
<!--meta-orig-mi:users_sysinfo:users_sys_mi-->
<!--meta-title-->
<!--meta-subject:user_sysinfo:users_sys_id-->
<!--meta-subj-usrnm:users_sysinfo:users_sys_username-->
<!--meta-subj-lnm:users_sysinfo:users_sys_lastname-->
<!--meta-subj-fnm:users_sysinfo:users_sys_firstname-->
<!--meta-subj-mi:users_sysinfo:users_sys_mi-->
<!--meta-mgr:user_sysinfo:users_sys_id-->
<!--meta-mgr-nm-->
<!--meta-mgr-fn:users_sysinfo:users_sys_firstname-->
<!--meta-mgr-mi:users_sysinfo:users_sys_mi-->
<!--meta-mgr-ln:users_sysinfo:users_sys_lastname-->
<!--meta-mgr-un:users_sysinfo:users_sys_username-->
<!--meta-hr:user_sysinfo:users_sys_id-->
<!--meta-hr-nm-->
<!--meta-hr-fn:users_sysinfo:users_sys_firstname-->
<!--meta-hr-mi:users_sysinfo:users_sys_mi-->
<!--meta-hr-ln:users_sysinfo:users_sys_lastname-->
<!--meta-hr-un:users_sysinfo:users_sys_username-->
<!--meta-participants-->

<!--List of category names used for 360 reporting rollup logic -->
<!ELEMENT meta-360-rollup-category-name (#PCDATA)>
<!-- Enforcement Option for Item Weights Floor and Ceiling: "error" or "warning"; default is "warning". -->
<!ELEMENT meta-item-weight-floor-ceiling-option (#PCDATA)>
<!-- Form Id -->
<!ELEMENT meta-form-id (#PCDATA)>
<!-- Form Type -->
<!ELEMENT meta-form-type (#PCDATA)>
<!-- Form's creator user Id -->
<!ELEMENT meta-originator (#PCDATA)>
<!-- Form's creator username -->
<!ELEMENT meta-orig-usrnm (#PCDATA)>
<!-- Form's creator last name -->
<!ELEMENT meta-orig-lnm (#PCDATA)>
<!-- Form's creator first name -->
<!ELEMENT meta-orig-fnm (#PCDATA)>
<!-- Form's creator MI -->
<!ELEMENT meta-orig-mi (#PCDATA)>
<!-- Form's title -->
<!ELEMENT meta-title (#PCDATA)>
<!-- Form's ratee/reviewee user Id -->
<!ELEMENT meta-subject (#PCDATA)>
<!-- Form's ratee/reviewee username -->
<!ELEMENT meta-subj-usrnm (#PCDATA)>
<!-- Form's ratee/reviewee last name -->
<!ELEMENT meta-subj-lnm (#PCDATA)>
<!-- Form's ratee/reviewee first name -->
<!ELEMENT meta-subj-fnm (#PCDATA)>
<!-- Form's ratee/reviewee MI -->
<!ELEMENT meta-subj-mi (#PCDATA)>
<!-- subject's historic manager user Id -->
<!ELEMENT meta-hist-mgr (#PCDATA)>
<!-- subject's historic manager first name -->
<!ELEMENT meta-hist-mgr-fn (#PCDATA)>
<!-- subject's historic manager middle name -->
<!ELEMENT meta-hist-mgr-mi (#PCDATA)>
<!-- subject's historic manager last name -->
<!ELEMENT meta-hist-mgr-ln (#PCDATA)>
<!-- subject's historic manager username -->
<!ELEMENT meta-hist-mgr-un (#PCDATA)>
<!-- subject's manager user Id -->
<!ELEMENT meta-mgr (#PCDATA)>
<!-- subject's manager full name -->
<!ELEMENT meta-mgr-nm (#PCDATA)>
<!-- subject's manager first name -->
<!ELEMENT meta-mgr-fn (#PCDATA)>
<!-- subject's manager mi name -->
<!ELEMENT meta-mgr-mi (#PCDATA)>
<!-- subject's manager last name -->
<!ELEMENT meta-mgr-ln (#PCDATA)>
<!-- subject's manager username -->
<!ELEMENT meta-mgr-un (#PCDATA)>
<!-- subject's hr user Id -->
<!ELEMENT meta-hr (#PCDATA)>
<!-- subject's hr full name -->
<!ELEMENT meta-hr-nm (#PCDATA)>
<!-- subject's hr first name -->
<!ELEMENT meta-hr-fn (#PCDATA)>
<!-- subject's hr mi name -->
<!ELEMENT meta-hr-mi (#PCDATA)>
<!-- subject's hr last name -->
<!ELEMENT meta-hr-ln (#PCDATA)>
<!-- subject's hr username -->
<!ELEMENT meta-hr-un (#PCDATA)>
<!-- Review participants (Applicable only to 360 forms) -->
<!ELEMENT meta-participants (#PCDATA)>
<!-- Form's due date -->
<!ELEMENT meta-due-date (#PCDATA)>
<!-- Form's review start date -->
<!ELEMENT meta-start-date (#PCDATA)>
<!-- Form's review end date -->
<!ELEMENT meta-end-date (#PCDATA)>
<!-- Form's review creation date -->
<!ELEMENT meta-create-date (#PCDATA)>
<!-- Form's review completion date -->
<!ELEMENT meta-completion-date (#PCDATA)>
<!-- Form's last modified date/time -->
<!ELEMENT meta-lastmodified (#PCDATA)>
<!-- Form has been rated ("true") or unrated ("false") -->
<!ELEMENT meta-rated (#PCDATA)>
<!-- Form's review overall rating -->
<!ELEMENT meta-rating (#PCDATA)>
<!-- Form's review rating scale -->
<!ELEMENT meta-scale (#PCDATA)>
<!-- Form's review current step id -->
<!ELEMENT meta-step-id (#PCDATA)>
<!-- "true"=enable the char counter for comment, limit the maxLength to 4000 chars (refer to FormSectionValidator.COMMENTS_MAX_LENGTH) -->
<!ELEMENT meta-enforce-rte-limit (#PCDATA)>
<!-- "true"=enable the char limit for plain text comment, limit the maxLength to 4000 chars (refer to FormSectionValidator.COMMENTS_MAX_LENGTH) -->
<!ELEMENT meta-enforce-plain-text-length-limit (#PCDATA)>
<!-- Label for form's available rating distribution groups -->
<!ELEMENT meta-grp-label (#PCDATA)>
<!ATTLIST meta-grp-label
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>

<!-- This element is used to define the single goal plan state. 
Target state specifies the state to which the goal plan has to be switched.

to-complete-state: Using this attribute we can decide to change the obj plan state while routing the form to complete step.

on-form-delete: Using this attribute we can decide to change the obj plan state while deleting the form.

We cann't specify to-step attribute while configuring either to-complete-state or on-form-delete attribute.
Sample configuration:
	  <obj-plan-state-change to-complete-state="true">
        <target-state id="A"></target-state>
      </obj-plan-state-change>
      
      <obj-plan-state-change on-form-delete="true">
        <target-state id="B"></target-state>
      </obj-plan-state-change>
      
-->
<!ELEMENT obj-plan-state-change (target-state)>
<!ATTLIST obj-plan-state-change
          to-step CDATA #IMPLIED
          to-complete-state (true | false) "false"
          on-form-delete (true | false) "false" 
>
<!ELEMENT target-state EMPTY>
<!ATTLIST target-state
          id CDATA #REQUIRED
>
<!-- Form's available rating distribution groups -->
<!ELEMENT meta-grp (#PCDATA)>
<!-- Form's available participant categories; applicable only in PM 360 -->
<!ELEMENT meta-cat (#PCDATA)>
<!-- Form's default rater category label in the drop down; applicable only in PM 360 -->
<!ELEMENT meta-cat-default-label (#PCDATA)>
<!--
Attribute for participant category: used for determine if the statistics
for the category should be hidden in 360 detailed report; it contains the
threshold for the number of participants, over which the report will
show results for this catgegory.

If sf-360's unmet-threshold-action is "drop", the category will be hidden. If sf-360's unmet-threshold-action is "rollup",
it will be rolled up according to the list of meta-360-rollup-category-names.

min/max-count are added for CIB requirement, and used for limit the number of participant per category now

competency-filter pre-assigns each rater category with competencies, ',' is the delimiter
i.e. competency-filter = '1,5,8'
-->
<!ATTLIST meta-cat
        msgKey CDATA #IMPLIED
        ver CDATA #IMPLIED
	hidden-threshold CDATA "0"
	min-count CDATA "0"
	max-count CDATA #IMPLIED
	competency-filter CDATA #IMPLIED
	cat-weight CDATA #IMPLIED
>
<!--
This element is used to hide participants if the total number of participants in the form 
is less than the threshold defined by the hidden-threshold attribute

If exclude-rater-cat is specified, then the categories listed will still be shown (even if 
the total number of participants in the form is less than the threshold)

Example 1:
<meta-360-overall-form-threshold hidden-threshold="4" exclude-rater-cat="self" />
If there are fewer than 4 total respondents to the 360 (across ALL categories) 
then hide everything except the SELF assessment in the 360 detailed report.  
-->
<!ELEMENT meta-360-overall-form-threshold (#PCDATA)>
<!ATTLIST meta-360-overall-form-threshold
	hidden-threshold CDATA "0"
	exclude-rater-cat CDATA #IMPLIED
>
<!--
These elements are used to include one or more content-filters.
 
The type attribute of content-filter can contain values:
use-performance-profile - retrieve competencies and skill from performance profile
. competency-source - used to filter competencies by library; corresponds to COMPETENCY_SOURCE column in COMPETENCY table.
                      For this type value; the value of the content-element would be the competency library name ("SuccessFactors", etc)
  competency-type - type of compentency or skill: COMPETENCY, Skill Summary, Skill Responsibility,
                    Skill Education,  Skill Certification,  Skill Age Spec Care,  Skill Physical Req,
                    Skill Complexity, Skill Environment, Skill Protective Env.
-->
<!ELEMENT content-filters (use-performance-profile?, content-filter+)>
<!ELEMENT content-filter (#PCDATA)>
<!ATTLIST content-filter
	type (competency-source | competency-type) "competency-source"
	use-sub-content (true | false) "false"
>
<!--
  use-performance-profile - retrieve competencies and skill from performance profile
  form-data-id - [internal use] the forom-data-id of the performance profile used.
 -->
<!ELEMENT use-performance-profile (form-data-id?)>
<!ELEMENT form-data-id (#PCDATA)>
<!-- fm-rating-info-config is used to config element to collect additional rating information
      <fm-rating-info-config>
        <rating-method display="radio">
          <label>Rating Method</label>
          <option value="Observation">Observation</option>
          <option value="Demonstration">Demonstration</option>
          <option value="Cognitive">Cognitive</option>
          <option value="Aggregated">Aggregated Data</option>
          <option value="Testing">Testing</option>
          <option value="Doc Review">Documentation Review</option>
        </rating-method>
        <rating-date>
          <label>Rating Date</label>
        </rating-date>
        <rated-by>
          <label>Rated By</label>
        </rated-by>
      </fm-rating-info-config>
-->

<!-- 
The optional fm-comp-filter-mapping element allows competencies to be mapped beyond just the 
JOBCODE value. Any standard user information field could be used for mapping competencies.

The following are sample steps to use this feature: -  

1. Configure the list of data types that can be used for mapping competencies in SM Data Model. 
   The following example configures 'jobCode', 'department', 'division', 'custom03' and 'custom04'
   as valid mapping data types.
 
   <view-template id="sysMappingDataTypes" visibility="none" pdf-printing-enabled="true">
    <label>View Template for mapping data types</label>
    <description>This View Template is for Families and Roles mapping data types</description>
    <edit-template id="sysMappingDataTypesEditTemplate">
      <label>Edit Template for Job Roles Data Type</label>
      <description>Edit Template for Job Roles Data Type </description>
      <standard-element-ref refid="jobCode"/>
      <standard-element-ref refid="department"/>
      <standard-element-ref refid="division"/>
      <standard-element-ref refid="custom03"/>
      <standard-element-ref refid="custom04"/>
    </edit-template>
   </view-template>

2. Create a role, with a set of competencies, based on one of the configured mapping data types,
along with the value(s) for the given mapping data type.

3. Use fm-comp-filter-mapping element, in the competency section of an assessment form template, to 
specify the mapping data type to be used for pulling competencies. Only a single mapping data type 
can be specified for a given competency section. The form subject's value for the specified mapping 
data type will be used for fetching the applicable role(s) and thereby the corresponding associated 
competencies.  

The 'enable' attribute of fm-comp-filter-mapping needs to be set to 'true' to enable this 
functionality. The default value for 'enable' is 'false'.

Example 1: The following example shows how to map competencies based on 'department'.

	  <fm-comp-filter-mapping enable="true">
		<fm-comp-filter-element refid="department"/>
	  </fm-comp-filter-mapping>

Example 2: The following example shows how to map competencies based on 'division'. 	  

	  <fm-comp-filter-mapping enable="true">
		<fm-comp-filter-element refid="division"/>
	  </fm-comp-filter-mapping>

Example 3: The following example shows how to disable an existing fm-comp-filter-mapping by setting its 'enable' attribute to
'false'. 

	  <fm-comp-filter-mapping enable="false">
		<fm-comp-filter-element refid="custom03"/>
	  </fm-comp-filter-mapping>
-->

<!ELEMENT fm-comp-filter-mapping (fm-comp-filter-element)>
<!ATTLIST fm-comp-filter-mapping
	enable (true | false) "false"
>

<!ELEMENT fm-comp-filter-element EMPTY> 
<!ATTLIST fm-comp-filter-element
	refid (username | email | gender | lastName | firstName | mi | nickname | suffix | salutation | department | division | location | jobCode | managerId | hrId | timeZone | custom01 | custom02 | custom03 | custom04 | custom05 | custom06 | custom07 | custom08 | custom09 | custom10 | custom11 | custom12 | custom13 | custom14 | custom15) #REQUIRED
>

<!ELEMENT fm-rating-info-config (rating-method?, rating-date?, rated-by?)>
<!ELEMENT rating-method (label?, option+)>
<!-- Set display option for rating method - currently only support radio button -->
<!ATTLIST rating-method
	display (radio) "radio"
>
<!ELEMENT option (#PCDATA)>
<!ATTLIST option
	value CDATA #REQUIRED
>
<!ELEMENT rating-date (label?)>
<!ELEMENT rated-by (label?)>
<!--
This element defines who can see the rater identities in which routing step.
This only makes sense in an *Open* 360 in which a customer can choose to hide
rater identities in certain 360 routing steps, including 360 Evaluation Stage
and Completed Stage.

For 360 Evaluation Stage, use this special stepid: "360EvaluationStage"
For Completed Stage, use this special stepid: "CompletedStage"

Example 1: The following example hides all rater identities for all users in
all stages:

  <rater-id-permission type="none">
    <rater-category>*</rater-category>
    <role-name>*</role-name>
    <route-step stepid="*"/>
  </rater-id-permission>

OR

  <rater-id-permission type="none">
    <role-name>*</role-name>
    <route-step stepid="*"/>
  </rater-id-permission>

Example 2: If you want hide all rater identities for Employee in all stages,
then do this:

  <rater-id-permission type="none">
    <rater-category>*</rater-category>
    <role-name>E</role-name>
    <route-step stepid="*"/>
  </rater-id-permission>

OR

  <rater-id-permission type="none">
    <role-name>E</role-name>
    <route-step stepid="*"/>
  </rater-id-permission>

Example 3: The following example hides all rater identities for all users in
360 Evaluation Stage:

  <rater-id-permission type="none">
    <rater-category>*</rater-category>
    <role-name>*</role-name>
    <route-step stepid="360EvaluationStage"/>
  </rater-id-permission>

OR

  <rater-id-permission type="none">
    <role-name>*</role-name>
    <route-step stepid="360EvaluationStage"/>
  </rater-id-permission>

Example 4: The following example hides all rater identities for all users in
360 Evaluation Stage, except the Manager:

  <rater-id-permission type="none">
    <rater-category>*</rater-category>
    <role-name>*</role-name>
    <route-step stepid="360EvaluationStage"/>
  </rater-id-permission>
  <rater-id-permission type="enabled">
    <rater-category>*</rater-category>
    <role-name>EM</role-name>
    <route-step stepid="360EvaluationStage"/>
  </rater-id-permission>

-->
<!ELEMENT rater-id-permission (rater-category?, role-name*, route-step*)>
<!ATTLIST rater-id-permission
	type (none | enabled) #REQUIRED
>
<!ELEMENT rater-category (#PCDATA)>
<!--
The meta-place-text-suffix is the text that will get appended to any text
that is inserted from the Writing Assistant/Coaching Advisor.
It must be in javascript-string format.  The default is /n/n.
-->
<!ELEMENT meta-place-text-suffix (#PCDATA)>
<!-- user's job code -->
<!ELEMENT meta-job-code (#PCDATA)>
<!--
Job roles associated with the user's job code
(job code to job role(s) is one to many mapping)
 -->
<!ELEMENT meta-job-roles (#PCDATA)>
<!-- job role descriptions associated with the user's job roles -->
<!ELEMENT meta-job-role-descriptions (#PCDATA)>
<!--
The button-permission element defines the access permissions to
specific route map buttons of a form.  The type of access is one of:

  "none"  - the user can't see the button.

  "enabled"  - the user can see the button.

On forms, permission is "enabled" for all users and all buttons by default.
You can limit user's access rights from there.

NO role-name means all roles.
NO route-step or stepid = "*" means all steps.

So if you want to make it so the employee is the only person who *can't* see
the Get Feedback in all route steps, use this XML.
<button-permission type="none">
  <role-name>E</role-name>
  <button refid="get-comments" />
  <route-step stepid="*" />
</button-permission>
<button-permission type="none">
  <role-name>E</role-name>
  <button refid="get-edits" />
  <route-step stepid="*" />
</button-permission>

If you want to make it so the employees manager is the only person who *can* see
the Add Modifiers button in all route steps, use this XML.
<button-permission type="none">
  <role-name>*</role-name>
  <button refid="add-modifier" />
  <route-step stepid="*" />
</button-permission>
<button-permission type="enabled">
  <role-name>EM</role-name>
  <button refid="add-modifier" />
  <route-step stepid="*" />
</button-permission>

-->
<!ELEMENT button-permission (role-name*, button+, route-step*)>
<!ATTLIST button-permission
	type (none | enabled) #REQUIRED
>
<!--
Users with the admin permission to mass route will see checkboxes next to each form.  
The permission to control mass document routing is based on most permissive so if no permission is defined (and user has the admin permission) 
then they will be able to mass route the document.  
Form template has to specifically be configured to disable mass route.

mass route permission. 
"validation" is used to control whether need the form template validation for special steps
 
  for example,  
     1. Enable user can mass route documents but need form template validation for all.
        <mass-route-permission type="enabled" validation="true">
          <role-name>*</role-name>
          <route-step stepid="*"/>
        </mass-route-permission>
    
     2. Enable user can mass route documents but don't need form template validate in "CStep" step
        <mass-route-permission type="enabled" validation="true">
          <role-name>*</role-name>
          <route-step stepid="CStep"/>
        </mass-route-permission>
              
see PMT3792 for detail requirement
-->
<!ELEMENT mass-route-permission (role-name*, route-step*)>
<!ATTLIST mass-route-permission
  type (none | enabled) #REQUIRED
  validation (true | false) #REQUIRED
>
<!-- specify form level rating calculator -->
<!ELEMENT meta-form-rating-calc (#PCDATA)>
<!--
If my-team-rater is defined, a manager can review and rate competencies for multiple
direct reports on a single screen at the same time.
-->
<!ELEMENT my-team-rater EMPTY>
<!--
In button-permissions, the "refid" attribute specifies a button
that is supported in our code.  These include:

  get-comments:
    wether the get feedback button is available to get comments for the particular set of users

  get-edits:
    wether the get feedback button is available to get edits for the particular set of users

  reject:
    wether the reject button is available to the particular set of users

  add-signer:
    wether the add signer button is available to the particular set of users

  add-modifier:
    wether the add modifier button is available to the particular set of users

  send:
    wether the send button is available to the particular user

  sign:
    wether the sign button is available to the particular user

  detailed-360-report:
    whether the detailed-360-report link is available to the particular user
    
  overall-score-pod:
    The Overall Score pod in PM2.0.
    Only supported in PM2.0 forms.

  gap-analysis-pod:
    The Gap Analysis pod in PM2.0.
    Only supported in PM2.0 forms.

  incomplete-items-pod:
    The Incomplete Items pod in PM2.0.
    Only supported in PM2.0 forms.

  team-rank-pod:
    The Team Rank pod in PM2.0.
    Only supported in PM2.0 forms.

  supporting-information-pod:
    The Supporting Information pod in PM2.0.
    Only supported in PM2.0 forms.
  
  send-back:
    whether the previous step button is available to the particular user.
    
  delete:
    whether the delete button is available to the particular user.
    

Used in: button-permission
-->
<!ELEMENT button EMPTY>
<!ATTLIST button
	refid (get-comments | get-edits | reject | add-modifier | add-signer | send | sign | detailed-360-report | overall-score-pod | gap-analysis-pod | incomplete-items-pod | team-rank-pod | supporting-information-pod | send-back | delete ) #REQUIRED
>
<!-- END fm-meta
Generic meta data section for all SFV4 forms.
-->

<!ELEMENT meta-sign-rec (sign-step-rec*)>
 
<!--
This is to keep an audit trail of completed actions within an RouteStep.
In Workflow Routing, this is not used for any purposes other than for
displaying past completed actions within an RouteStep.
-->
<!ELEMENT sign-step-rec (
  step-rec-id?,
  step-rec-type?,
  step-rec-user,
  step-rec-baseuser?,
  step-rec-username?,
  step-rec-lname?,
  step-rec-fname?,
  step-rec-mi?,
  step-rec-date?,
  step-rec-action?,
  step-rec-act-user?,
  step-rec-act-username?,
  step-rec-act-lname?,
  step-rec-act-fname?,
  step-rec-act-mi?,
  step-rec-proxy-user?,
  step-rec-proxy-username?,
  step-rec-proxy-lname?,
  step-rec-proxy-fname?,
  step-rec-proxy-mi?
  )>
<!--mask-->
<!--step-rec-user:user_sysinfo:users_sys_id-->
<!--step-rec-base-user:users_sysinfo:users_sys_id-->
<!--step-rec-username:users_sysinfo:users_sys_username-->
<!--step-rec-lname:users_sysinfo:users_sys_lastname-->
<!--step-rec-fname:users_sysinfo:users_sys_firstname-->
<!--step-rec-mi:users_sysinfo:users_sys_mi-->  
  <!ATTLIST sign-step-rec
  status (new | done | skipped | current | obsolete) #REQUIRED
  >
<!--
step-rec-id is the type of the step.
-->
<!ELEMENT step-rec-id (#PCDATA)>
<!--
step-rec-type is the type of the step.
-->
<!ELEMENT step-rec-type (#PCDATA)>

<!--
step-rec-user is the actual user who completed the routing step.
-->
<!ELEMENT step-rec-user (#PCDATA)>

<!--
step-rec-baseuser is the base user for calculating actual user.
-->
<!ELEMENT step-rec-baseuser (#PCDATA)>

<!--
This is the username for the user in the routing step.
-->
<!ELEMENT step-rec-username (#PCDATA)>

<!--
This is the last name for the user in the routing step.
-->
<!ELEMENT step-rec-lname (#PCDATA)>

<!--
This is the first name for the user in the routing step.
-->
<!ELEMENT step-rec-fname (#PCDATA)>

<!--
This is the middle name for the user in the routing step.
-->
<!ELEMENT step-rec-mi (#PCDATA)>

<!--
This is the time of the action in the routing step.
-->
<!ELEMENT step-rec-date (#PCDATA)>

<!--
This is the action .
-->
<!ELEMENT step-rec-action (#PCDATA)>

<!--
This is the user who signed on behalf of step-rec-user. 
-->
<!ELEMENT step-rec-act-user (#PCDATA)>

<!--
This is the username for the step-rec-act-user
-->
<!ELEMENT step-rec-act-username (#PCDATA)>

<!--
This is the last name for the step-rec-act-user
-->
<!ELEMENT step-rec-act-lname (#PCDATA)>

<!--
This is the first name for the step-rec-act-user
-->
<!ELEMENT step-rec-act-fname (#PCDATA)>

<!--
This is the middle name for the step-rec-act-user.
-->
<!ELEMENT step-rec-act-mi (#PCDATA)>

<!--
This is the proxy user of the step-rec-act-user.
-->
<!ELEMENT step-rec-proxy-user (#PCDATA)>

<!--
This is the username of step-rec-proxy-user
-->
<!ELEMENT step-rec-proxy-username (#PCDATA)>

<!--
This is the last name of step-rec-proxy-user
-->
<!ELEMENT step-rec-proxy-lname (#PCDATA)>

<!--
This is the first name of step-rec-proxy-user
--> 
<!ELEMENT step-rec-proxy-fname (#PCDATA)>

<!--
This is the middle name of step-rec-proxy-user
-->
<!ELEMENT step-rec-proxy-mi (#PCDATA)>


<!-- PMT-3374 START -->
<!-- 
The meta-normalize-form-rating element can be used to specify if rating should be normalized 
or left non-normalized for form level score calculation.
The values allowed are "true", "false". Default "true". 
-->

<!ELEMENT meta-normalize-form-rating (#PCDATA)>

<!-- PMT-3374 START -->

<!--
The enable-previous-step-button element can be used to show the "Send to Previous Step" button 
and we can use it for backward compatability. The values allowed are "true", "false".

Currently this feature is applicable only for PM review / 360 forms.

If this element is set to "true", then only we will show the new button and 
after that we will apply to button permission for the new button.
 
For backward compatibility default value of the new element will be "false".

If we want to make it so that the employees manager is the only person who *can* see the "send-back" button in all route steps, we will use this XML configuration.
 
<enable-previous-step-button>true</enable-previous-step-button>
 
// disabling button for everyone
<button-permission type="none">
  <role-name>*</role-name>
  <button refid="send-back" />
  <route-step stepid="*" />
</button-permission>
 
// enabling only for manager.
<button-permission type="enabled">
  <role-name>EM</role-name>
  <button refid="send-back" />
  <route-step stepid="*" />
</button-permission>
-->
<!ELEMENT enable-previous-step-button (#PCDATA)>

<!--
The enable-delete-button element can be used to show the delete button for deleting a form.

Currently this feature is applicable only for PM review / 360 forms.

We will use it for backward compatability. The values allowed are "true", "false".

If this element is set to "true", then only we will show the delete button and 
after that we will apply to button permission for the delete button.
 
For backward compatibility default value of the new element will be "false".

If we want to make it so that the employees manager is the only person who *can* see the "delete" button in all route steps, 
we will use the below XML configuration.
 
<enable-delete-button>true</enable-delete-button>
 
// disabling button for everyone
<button-permission type="none">
  <role-name>*</role-name>
  <button refid="delete" />
  <route-step stepid="*" />
</button-permission>
 
// enabling only for manager.
<button-permission type="enabled">
  <role-name>EM</role-name>
  <button refid="delete" />
  <route-step stepid="*" />
</button-permission>
-->
<!ELEMENT enable-delete-button (#PCDATA)>

<!-- BEGIN fm-sect
Generic section for all SFV4 forms.
Add  field permission section for custom section.(note only for custom section)
-->
<!ELEMENT fm-sect (fm-sect-name+, fm-sect-intro?, fm-sect-config?, fm-element*, fm-comment*, fm-add-element?,field-permission*)>
<!-- This attribute controls the display order of the section.  -->
<!--
index - display order of the section within the form;
mgt-only - true if only manager/hr can see this section;
ask-4-comment - obsolete;
split-cmt - true if displaying subject and manager's comments side by side;
cmt-opt - 0: Show section comments; default
          1: No section comments;
pdf-page-break-opt - 0: Default behavior, page breaks will not be avoided;
                     1: page-breaks at section level will be avoided;
                     2: page-breaks at both section level as well as section item level will be avoided;
-->
<!ATTLIST fm-sect
	index CDATA #REQUIRED
	mgt-only (true | false) "false"
	ask-4-comment (true | false) "false"
	split-cmt (true | false) "false"
	cmt-opt (0 | 1) "0"
	edit-in-mass-create (true|false) "false"
	pdf-page-break-opt (0 | 1 | 2) #IMPLIED
>
<!-- The name of the section.  This is a generic term in all forms.  -->
<!ELEMENT fm-sect-name (#PCDATA)>
<!ATTLIST fm-sect-name
	lang CDATA #IMPLIED
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>

<!-- Introduction of the section if any.  This is a generic term in all forms.  -->
<!ELEMENT fm-sect-intro (#PCDATA)>
<!ATTLIST fm-sect-intro
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- And subsection allow user to add more of the defined fm-element to the form. -->
<!-- Only define one element in form template.
     Notes: only Text element has been implemented as 1/15/05
 -->
<!ELEMENT fm-add-element (fm-element*)>
<!--
index - doesn't do anything now
name - name of the subsection
new-screen - display the adding UI in a new screen (not implemented as 1/15/05)
max-elements - max number (>0) of element can be added to the subsection.
-->
<!ATTLIST fm-add-element
	index CDATA #REQUIRED
	name CDATA #REQUIRED
	new-screen (true | false) "true"
	max-elements CDATA #IMPLIED
>
<!-- Element in a section if any.  This is a generic term in all forms.  -->
<!--
text-size - display width of the text field in pixel
text-maxlength - max number of character allow for the text field.  If the field is textarea, a warning
                 will be displayed under the widget to warn input exceeding the limit, but we won't trancate
                 the input.
-->
<!ELEMENT fm-element (ekey, ename*, evalue?, elist?, text-size?, text-maxlength?)>
<!--mask-->
<!--evalue-->
<!--
Element type:
1 - SECTION      (DO NOT USE, not a valid fm-element type)
2 - LABEL
3 - TEXT         (min/max in required-fields constrain num characters)
4 - TEXTAREA     (min/max in required-fields constrain num characters)
5 - DATE         (required-fields requires value)
6 - LIST         (required-fields requires value)
7 - INTEGER      (min/max in required-fields constrain value range)
8 - DOUBLE       (min/max in required-fields constrain value range)
9 - CHECKBOX     (required-fields requires checked value)
10 - HIDDEN - hidden value, a static value to be included in export. Not the same as html hidden input.

"checked" - only applicable to CHECKBOX elements.
"sync-until-completion" is used to sync a User Info element with values in
the database in Employee section until document completion.

"min" - min value of this element. If this is applied to a Date Type Element,
the min value will be a min. days back to be validated.
It will also take value such as 0 for current day, -1 for yesterday etc. It does not
support positive values. Currently, this is only applicable to Date Type element.

"max" - max value of this element. If this is applied to a Date Type Element,
the max value will be the max. days ahead to be validated.
It will also take value such as 0 for current day, +1 for tomorrow. It does not support
negative values. Currently, this is only applicable to Date Type element.

"waca" - weather to show the writing assistant.  This is applied to TEXTAREA type element.

"edit-in-mass-create" - to indicdate whether the fm-element needs to be editable during mass create forms.
-->
<!ATTLIST fm-element
	index CDATA #REQUIRED
	type (1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10) #REQUIRED
	checked (true | false) "false"
	min CDATA #IMPLIED
	max CDATA #IMPLIED
	sync-until-completion (true | false) "true"
	waca (true | false) "false"
	mime-type (plain-text | html) "plain-text"
	edit-in-mass-create (true | false) "false"
>
<!-- Element key.  -->
<!ELEMENT ekey (#PCDATA)>
<!-- Element name.  -->
<!ELEMENT ename (#PCDATA)>

<!ATTLIST ename
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
        lang CDATA #IMPLIED
>
<!-- Element value if applicable.  This is enclosed in CDATA tags. -->
<!ELEMENT evalue (#PCDATA)>
<!-- LIST values if applicable.  This is for LIST type only.
     If picklist is defined, the element list is loaded from the picklist
 -->
<!ELEMENT elist (elist-element*, picklist?)>
<!-- Element text display size, this relevant to TEXT type.  -->
<!ELEMENT text-size (#PCDATA)>
<!-- Element text maximum size, this relevant  to TEXT and TEXTAREA type.  -->
<!ELEMENT text-maxlength (#PCDATA)>
<!-- Attribute for elist. -->
<!--
elist-value-type: the type for elist-value element.
  3: TEXT
  5: DATE
  7: INTEGER
  8: DOUBLE
  elist-selected-name obselete. Do NOT use it anymore. It won't output or save.
  elist-selected-value obselete. Do NOT use it anymore. It won't output or save.
-->
<!ATTLIST elist
	elist-value-type (3 | 5 | 7 | 8) "7"
	elist-default-name CDATA "N/A"
	elist-default-value CDATA ""
	elist-selected-name CDATA #IMPLIED
	elist-selected-value CDATA #IMPLIED
	elist-default-name-msgKey CDATA #IMPLIED
	elist-default-name-msgKey-ver CDATA #IMPLIED
>
<!-- List elements -->
<!ELEMENT elist-element (elist-name, elist-value)>
<!-- Attribute for elist-element. -->
<!ATTLIST elist-element
	elist-index CDATA #REQUIRED
	elist-selected (true | false) "false"
>
<!-- List name for display -->
<!ELEMENT elist-name (#PCDATA)>

<!ATTLIST elist-name
	msgKey CDATA #IMPLIED
	ver CDATA #IMPLIED
>
<!-- List value -->
<!ELEMENT elist-value (#PCDATA)>
<!-- END fm-sect
Generic section for all SFV4 forms.
-->
<!--
The role-name element in action-permission, field-permission and button-permission elements
specifies a role.  The following role-name values are allowed:

  *    all users
  E    employee/owner
  Exxx employee/owner relative role (see below)
  F    form reviewer (applicable on form views only)

Notes on "Employee/Owner Relative Roles":

  "E" may be followed by any combination of "M", "D", and "H" with
  optional modifiers "+", "*", "?" to specify complex employee
  relative roles.

    M   employee's manager
    D   employee's direct report
    H   employee's HR representative

    (In the notation below, "X" is one of "M", "D", or "H" as defined
    above)
    X?   X is optional (zero or one of X)
    X*   zero or more of X
    X+   one or more of X

  As an example, here are a few common roles:

    EM   employee's manager
    EX   employee's matrix manager
    EA   employee's 2nd manager
    ED   employee's direct report
    EB   employee 2nd manager's direct report
    EH   employee's HR rep
    EM+  employee's manager, manager's manager, etc...
    ED+  employee's direct and indirect reports
    EMM  employee's manager's manager (only)
    EMD  employee's manager's direct reports (coworkers) including the employee.

  Note: the time it takes to resolve a role is relative to it's
  length.  The modifiers can drastically increase the time to resolve
  an access right.  And although using more than one modifier in a
  role name is supported, it can seriously hinder performance (e.g. do
  NOT use something like "EM*D*").

  To sum up, use complex role names sparingly.  And as always, when in
  doubt ASK!


Used in: field-permission, action-permission, button-permission
-->
<!--
The action-permission element allows you to limit access to certain actions.
The type of access is one of:

  "none"  - the user can't see the action button.

  "enabled" - the user can see and click the action button.

On forms, permission is "enabled" for all users and all actions by default.
You can limit user's access rights from there.

NO role-name means all roles.
NO route-step or stepid = "*" means all steps.

So if you want to make it so the employee is the only person who *can't*
add or remove competencies in all route steps, use this XML.
<action-permission type="none">
  <role-name>E</role-name>
  <action refid="add-item" />
  <action refid="remove-item" />
  <route-step stepid="*"/>
</action-permission>

A more useful example is one where no one can add or remove items except
people above the subject in the management hierarchy, and the subject's HR rep.
So, first you restrict everyone to the "none" permission,
and then you explicitly give "enabled" permissions to the people you want:
<action-permission type="none">
  <role-name>*</role-name>
  <action refid="add-item" />
  <action refid="remove-item" />
</action-permission>
<action-permission type="enabled">
  <role-name>EM+</role-name>
  <role-name>EH</role-name>
  <action refid="add-item" />
  <action refid="remove-item" />
</action-permission>

For <action-permission> with Succession Management <action>'s use only originator "O" type roles.
-->
<!ELEMENT action-permission (role-name*, action+, route-step*)>
<!ATTLIST action-permission
	type (none | enabled) #REQUIRED
>
<!--
In action-permissions, the "refid" attribute specifies an action
that is supported in our code.  These include:

  add-item:
    All of the various "add", "link", "copy", and "new" buttons.
    Only supported in a competency or objective section.

  remove-item:
    The per-item "remove" buttons.
    Only supported in a competency or objective section.
    
  remove-group-goal:
    The per-item "remove" group goal V2 buttons.
    Only supported in a objective section.

  (The following SM related actions are relevant only for SM Forms in the Successor Section)
  sm-add-successors:
    The Add Successors button in the successor section of an SM Form.
  sm-add-successors-criteria-search:
    The Add Successors with search criteria button in the successor section of an SM Form.
  sm-compare-successors:
    The Compare Successors button in the successor section of an SM Form.
  sm-compare-perf-pot:
    The Compare Performance vs. Potential button in the successor section of an SM Form.
  sm-remove-successors:
    All of the Remove buttons for each successor in the successor section of an SM Form.
  cdp-allow-wizard-button:
    It will show the development wizard button and set permission for the usage in PM Form.  

  my-team-rater:
    The "Stack Ranker" button.
    Only supported in a competency section.

Used in: field-permission
-->
<!ELEMENT action EMPTY>
<!ATTLIST action
	refid (add-item | remove-item | remove-group-goal | sm-add-successors | sm-add-successors-criteria-search | sm-compare-successors | sm-compare-perf-pot | sm-remove-successors | cdp-allow-close-gap | cdp-allow-wizard-button | my-team-rater) #REQUIRED
>
<!--
The field-permission element defines the access permissions to
specific fields of a form.  The type of access is one of:

  "none"  - the user can't see the fields.

  "read"  - the user may read the fields.

  "write" - the user may both read and write the fields.

On forms, permission is "write" for all users and all fields by default.
You can limit user's access rights from there.

NO role-name means all roles.
NO route-step or stepid = "*" means all steps.

So if you want to make it so the employee is the only person who *can't* edit
item ratings in all route steps, use this XML.
<field-permission type="read">
  <role-name>E</role-name>
  <field refid="item-rating" />
  <route-step stepid="*" />
</field-permission>

A more useful example is one where no one can edit ratings and weights except
people above the subject in the management hierarchy, and the subject's HR rep.
So, first you restrict everyone to just having read permissions,
and then you explicitly give write permissions to the people you want:
<field-permission type="read">
  <role-name>*</role-name>
  <field refid="item-rating" />
  <field refid="item-weight" />
</field-permission>
<field-permission type="write">
  <role-name>EM+</role-name>
  <role-name>EH</role-name>
  <field refid="item-rating" />
  <field refid="item-weight" />
</field-permission>

-->
<!ELEMENT field-permission (role-name*, (field | ekey)+, route-step*)>
<!ATTLIST field-permission
	type (none | read | write) #REQUIRED
>
<!--
In field-permissions, the "refid" attribute specifies a field
that is supported in our code.  These include:

Note: Not all the following refid can be supported in every section.

  item-rating:
	    objective or competency ratings.
	    Only supported in a competency or objective section.
	    It also affects split rating's (rating-opt=3) manager's item rating.
	    Note that in rating-opt=3 only the manager can edit the manager rating, 
	    and only the subject can edit the subject rating. 
	    Permissions: 
	    - "item-rating" permissions affect the manager rating. 
	    - "subject-item-rating" permissions affect the subject rating.

  subject-item-rating:
    Affect subject's item rating in split rating.

  item-group:
    objective or competency groups.
    Only supported in a competency or objective section.

  item-weight:
    objective or competency weights.
    Only supported in a competency or objective section.

  manual-overall-rating:
    summary section's manual overall rating.
    Only supported in the Summary section.

  calculated-overall-rating:
    summary section's calculated overall rating.
    (may or may not be the "Overall Rating")
    Only supported in the Summary section.
    This field is never editable,
    so "write" is interpreted as "read" for this field.

  comp-manual-overall-rating:
  comp-calculated-overall-rating:
  obj-manual-overall-rating:
  obj-calculated-overall-rating:
    The above four field used by obj-comp-summary section.
    They are used to seperate control objective and/or competency rating.

  calc-comp-rating:
    Used to control the visibility of the calculated competency rating section
    in a competency section where rate by behaviors is turned on.  The only
    values that are valid are NONE and READ because it is calculated.

  review-period:
    Configure review info section's start, end, & due dates.  Note: All
    of them are controled with the same token. Supported in review info
    sections.  Here's an example of an entry to set the dates to be
    read-only ex.
       <field-permission type="read">
         <field refid="review-period"/>
       </field-permission>

  The min-value and max-value are only applicable in item-comments/section-comments/sect-weight but not other refids.
  item-comments:
    This includes comment per competency/objective + subject comment + manager comment +employee comment
    The min-value and max-value can be used to speciify mininum number of characters and maxinum number of characters in item comments.
    The min-value and max-value are both optional and default to -1 means no enforcement on number of characters in item comments.
    The min-value and max-value are only meaningful to item-comments, section-comments, and sect-weight.
    ex. <required-fields>
          <role-name>*</role-name>
          <field refid="item-comments" min-value="25"/>
          <route-step stepid="*"/>
          <send-action sendid="inner-step-send"/>
        </required-fields>

  section-comments:
    The comments is for the entire section.
    The min-value and max-value can be used to speciify mininum number of characters and maxinum number of characters in section comments.
    The min-value and max-value are both optional and default to -1 means no enforcement on number of characters in section comments.
    The min-value and max-value are only meaningful to item-comments, section-comments, and sect-weight.

  sect-weight:
    The sect-weight is specified in the individual objective/competency section and validated in the summary section.
    The min-value and max-value can be used to speciify mininum section weight and maxinum section weight
    The min-value and max-value are both optional and default to -1 means no enforcement on section weight.
    The min-value and max-value are only meaningful to item-comments, section-comments, and sect-weight.

  expected-item-rating/expected-behavior-rating
    Both field ids can only used in field-permission not required-fields.
    Both field ids permission types are :none and read(write is treated as read).
    Both field ids permission are used with show-comp-expected-rating and show-behavior-expected-rating.
      If show-comp-expected-rating is ture then default expected-item-rating is read, false then none.
      If show-behavior-expected-rating is ture then default expected-beheavior-rating is read, false then none.
    The expected-item-rating is used to show/hide competency's expected rating.
      It is used by both competency section and objective section.
    The expected-behavior-rating is used to show/hide behavior's expected rating.
      It is used only in competency section.

  total-weight:
    The section total weight.
  
  behavior-comments:
    The comment is for behavior.
  
  item-cmt-rating:
    The item rating with rating-opt = 1, 2
  
  rating-scale-label-link:
    The link of rating-label which links the detailed rating scale info.
  
  tgm-fields:
    The Total Goal Management fields.
    
  custom-element:
    The custom element.
    
  comp-proficiency-level:
    The competency's proficiency level.
    Only supported in a competency section.
  
  comp-rating-info:
    The rating information.
    Only supported in a competency section.
    
  manual-performance-rating:
  manual-potential-rating:
    The above two field used by perfpot-summary section.
    They are used to seperate control performance and/or potential rating.
   
  weighted-average:
    The "Weighted Average" column in PM2.0 Overall Score callout.
    Only supported in PM2.0 forms.
    Only supported in the Summary section.
    
  if <field-permission> is not present, then default value is determined by the current editability criteria.

  owner-role is used to permission out who can read whose comments and ratings. 
  NOTE: Currently, owner-role is NOT suppored by item-rating in PM1.0, but it is supported in PM2.0.
  DO NOT USER OWNER-ROLE WITH ITEM-RATING IN PM1.0.
    
  for example,
  the following configuration disables all permissions to item-comments:
  <field-permission type="none">
    <role-name>*</role-name>
    <field refid="item-comments"/>
    ***no owner-role specified, defaults to owner-role of "*" (all) ***
  </field-permission>

  The following configuration lets E read item comments by E and EM:
  <field-permission type="read">
    <role-name>E</role-name>
    <field refid="item-comments">
        <owner-role>E</owner-role>
        <owner-role>EM</owner-role>
    </field>
  </field-permission>

  The following configuration lets EM and EX read everybody's comments:
  <field-permission type="read">
    <role-name>EM</role-name>
    <role-name>EX</role-name>
    <field refid="item-comments"/>
  </field-permission>

  The following configuration lets EM read E's section comments, but E cannot read EM's comments:
  <field-permission type="none"> 
    <role-name>E</role-name> 
    <field refid="section-comments"> 
       <owner-role>EM</owner-role> 
    </field> 
    </field-permission> 

 hope the above owner-role examples help.

Used in: field-permission
-->
<!ELEMENT owner-role (#PCDATA)>
<!ELEMENT field (ekey?, owner-role*)>
<!ATTLIST field
	refid (item-rating | item-group | item-weight | total-weight | manual-overall-rating | calculated-overall-rating | comp-manual-overall-rating | comp-calculated-overall-rating | obj-manual-overall-rating | obj-calculated-overall-rating | review-period | calc-comp-rating | sect-weight | section-comments | item-comments | behavior-comments | item-cmt-rating | expected-item-rating | expected-behavior-rating | subject-item-rating | rating-scale-label-link | tgm-fields | comp-fields | custom-element | comp-proficiency-level | comp-rating-info | manual-performance-rating | manual-potential-rating | weighted-average) #REQUIRED
	min-value NMTOKEN #IMPLIED
	max-value NMTOKEN #IMPLIED
>
<!--
The section-permission element defines the access permissions to
specific section of a form.  The type of access is one of:

  "enabled"    - the user can see the section.
  "disabled"   - the user can see the section with read only on fields.
  "hidden"     - the user can't see the section.

On forms, permission is "enabled" for all users and all sections by default.
You can limit user's access rights from there.

NO role-name means all roles.
NO route-step or stepid = "*" means all steps.


stepid: Each stage(modification/signature/evaluation) in the route map has multiple steps.
        Each step needs to have a unique step id(string) associated with.
        The uniqueness of the step id is not enforced(validated) by product in the current release.
        
IMPORTANT: section-permission is overridden by the section-owner element in a particular routing step.

Example 1: Show the Signature Section only if form is in the signature stage.
           Put the following xml in the Signature Section thru provisioning
           First hide the signature section for all users thru role-name=* stepid=*.
           Then enable the sginagure section for all users when the form is in signature stage.
             stepid "sig" is specified in route maps thru Admin->Form Template Admin->Route Maps

   <section-permission type="hidden">
      <role-name>*</role-name>
      <route-step stepid="*"/>
    </section-permission>

    <section-permission type="enabled">
      <role-name>*</role-name>
      <route-step stepid="sig"/>
    </section-permission>

Example 2: Show Objective Section to employee, HR, and manager only but not peer in 360.
           Put the following xml in the Objective Section thru provisioning
           First hide the section for everyone, then enable the section only for manager and HR.

   <section-permission type="hidden">
      <role-name>*</role-name>
      <route-step stepid="*"/>
    </section-permission>

    <section-permission type="enabled">
      <role-name>EM</role-name>
      <role-name>EH</role-name>
      <route-step stepid="*"/>
    </section-permission>

Example 3: Show Summary Section to manager and all the above when the form is in final-review step.
           final-review is the stepid in one of your modification stage.
           First hide the section for everyone.
           Then enable the section for managers and all the above when the form is in the final-review stage.

   <section-permission type="hidden">
      <role-name>*</role-name>
      <route-step stepid="*"/>
    </section-permission>

    <section-permission type="enabled">
      <role-name>EM+</role-name>
      <route-step stepid="final-review"/>
    </section-permission>

-->
<!ELEMENT section-permission (role-name*, route-step*)>
<!ATTLIST section-permission
	type (enabled | disabled | hidden) #REQUIRED
>
<!ELEMENT route-step EMPTY>
<!ATTLIST route-step
	stepid CDATA #IMPLIED
>
<!--
In required-fields, the "refid" attribute specifies a field
that is supported in our code.  These include:

  item-rating:
  item-group:
  item-weight:
  manual-overall-rating:
  calculated-overall-rating:
  comp-manual-overall-rating - this means to validate comp-manual-overall-rating even though without Competency.
  comp-calculated-overall-rating:
  obj-manual-overall-rating - this means to validate obj-manual-overall-rating even though without Objective.
  obj-calculated-overall-rating:
  calc-comp-rating
  section-comments
  item-comments
  tgm-fields - this means to validate all tgm fields against the tgm template
  custom-element
  subject-item-rating
  total-weight
  manual-performance-rating
  manual-potential-rating
  review-period


route-step:
  NO route-step or stepid = "*" means all steps.
  Valid step id specified in route map.

send-action with the following supported sendid:
  the following three send actions are used in pm review form:
    inner_step_send: send within in iterate step
                     or send to someone within the current step
                     or someone's reply within the current step.
    next_step: move the form into next step.
    sign:sign action in the signature step.  (
         there are usually sign/reject in the signature step)
  the following send action is used in 360 form:
    complete_360: complete 360.
    save: save the form
    save_and_close: save and close the form



Example: The item-rating and item-weight are required fields that needed to be filled
  when in mid-year-review step and ready to move to next to next step.
    <required-fields>
      <role-name>*</role-name>
      <field refid="item-rating"/>
      <field refid="item-weight"/>
      <route-step stepid="mid-year-review"/>
      <send-action sendid="next_step"/>
    </required-fields>

The item-rating is required field that needed to be filled
  when in all steps and form is send either in iterate step or send to get someone or someone reply back.
    <required-fields>
      <role-name>*</role-name>
      <field refid="item-rating"/>
      <route-step stepid="*"/>
      <send-action sendid="inner-step-send"/>
    </required-fields>


The item-comments is required field that needed to be filled
      when in all steps and form is send either in iterate step or send to get someone or someone reply back.
        <required-fields>
          <role-name>*</role-name>
          <field refid="item-comments"/>
          <route-step stepid="*"/>
          <send-action sendid="inner-step-send"/>
        </required-fields>

The section-comments is required field that needed to be filled and the comments is at least 25 characters.
      when in all steps and form is send either in iterate step or send to get someone or someone reply back.
        <required-fields>
          <role-name>*</role-name>
          <field refid="section-comments" min-value="25"/>
          <route-step stepid="*"/>
          <send-action sendid="inner-step-send"/>
        </required-fields>

A custom element with ekey value "foo" needs to be filled.
    <required-fields>
      <role-name>*</role-name>
      <field refid="custom-element">
        <ekey>foo</foo>
      </field>
      <route-step stepid="*"/>
      <send-action sendid="next_step"/>
    </required-fields>
    
If the tag tgm-fields is present (on a PM Review form), the required field validation is performed with the
	specified send ids which can include sending to next step, save and save_and_close.
      <required-fields>
      <role-name>*</role-name>
	  <field refid="tgm-fields" min-value="-1.0" max-value="-1.0"/>
	  <route-step stepid="*"/>
      <send-action sendid="save"/>
    </required-fields>

Used in: required-fields
-->
<!ELEMENT required-fields (role-name*, field+, route-step*, send-action+)>
<!ELEMENT send-action EMPTY>
<!ATTLIST send-action
	sendid (inner_step_send | next_step | sign | complete_360 | save | save_and_close) #REQUIRED
>
<!--
This element defines a field publishing configuration that controls publishing
in a given route step.

When this is enabled, a user (specified by the user role) will have the
ability to restrict other users from seeing a field until he is willing to
share it.

The default behavior without enabling the publishing feature will be the same
as it is today.  If field publishing is enabled (via XML configuration) for a
particular role and route-step, users with that role in that route-step will
see a publish button for the specified field.

If the publishing feature is enabled and the field has not been published,
no one else can see that field.  After the publish button is clicked, the field
will be published.  The publishing feature takes precedence over
field permissions.  When determining whether a field should be displayed, the
system will check if publishing is enabled, and if not, the field permissions
will be adhered to.  If the field has not been published, it will be hidden
until the publish button is clicked.  After the field is published, it will
adhere to the field permissions.  If no field permissions are defined, the
system defaults will be used.

The following example allows only a manager to see and publish an item-comment
in a collaborative routing step:

<field-publishing published="false">
  <role-name>EM</role-name>
  <route-step stepid="CollaborativeStep" />
  <field refid="item-comments" />
</field-publishing>

Once the manager hits the "publish" button, the content will be available to
other users.  The field-permissions will then be used to determine who can see
it.  When the field is published, the "published" attribute will be set to
"true".

This features has been implemented for the following ref-ids:
section-comments, item-comments, behavior-comments, item-cmt-rating

IMPORTANT:  Only one route-step can be attached to a <field-publishing> element.  To allow
            field publishing for the same user in more than one routing step,
            additional field-publishing elements must be defined separately.
            Only one role-name can be attached to a <field-publishing> element.
            To allow more than one user role to publish fields, additional
            field-publishing elements must be defined separately.  This is
            because we use these fields to determine whether a field  has been
            published by its owner in a a particular routing step.
-->
<!ELEMENT field-publishing (role-name, route-step, field, publish-button-label?, publish-button-warning?)>
<!ATTLIST field-publishing
	published (true | false) "false"
>
<!--******************************************-->
<!-- SFForm: Compensation
The attribute formName is deprecated due to VRP-3027.  It is replaced by formTemplateId.
-->
<!--******************************************-->
<!ELEMENT sf-compensation (comp-plan-id?, comp-plan-name?, comp-plan-group-id?, comp-plan-planner*, comp-plan-budgets*, comp-plan-budget-grouping*, comp-plan-budget4Salary?, comp-plan-budget4Bonus?, comp-plan-budget4Stock?, comp-plan-budget4Option?, comp-plan-budget4StockUnits?, comp-plan-budget4StockOther1?, comp-plan-budget4StockOther2?, comp-plan-budget4StockOther3?, comp-plan-allocated4Salary?, comp-plan-allocated4Bonus?, comp-plan-allocated4StockUnits?, comp-plan-allocated4Stock?, comp-plan-allocated4Option?, comp-plan-allocated4StockOther1?, comp-plan-allocated4StockOther2?, comp-plan-allocated4StockOther3?, comp-plan-totalStockPartGuide?, comp-plan-totalStockPartAllocated?, comp-plan-entry*, comp-plan-notes?, comp-config)>
<!ATTLIST sf-compensation
  formName CDATA #IMPLIED
  formTemplateId CDATA #IMPLIED
>
<!--mask-->
<!--comp-plan-planner-->
<!--comp-plan-budgets-->
<!--comp-plan-budget4Salary-->
<!--comp-plan-budget4Bonus-->
<!--comp-plan-budget4Stock-->
<!--comp-plan-budget4Option-->
<!--comp-plan-budget4StockUnits-->
<!--comp-plan-budget4StockOther1-->
<!--comp-plan-budget4StockOther2-->
<!--comp-plan-budget4StockOther3-->
<!--comp-plan-allocated4Salary-->
<!--comp-plan-allocated4Bonus-->
<!--comp-plan-allocated4StockUnits-->
<!--comp-plan-allocated4Stock-->
<!--comp-plan-allocated4Option-->
<!--comp-plan-allocated4StockOther1-->
<!--comp-plan-allocated4StockOther2-->
<!--comp-plan-allocated4StockOther3-->
<!--comp-plan-totalStockPartGuide-->
<!--comp-plan-totalStockPartAllocated-->
<!--comp-plan-notes-->
<!ELEMENT comp-plan-id (#PCDATA)>
<!ELEMENT comp-plan-name (#PCDATA)>
<!ELEMENT comp-plan-group-id (#PCDATA)>
<!ELEMENT comp-plan-planner (#PCDATA)>
<!ELEMENT comp-plan-budgets (#PCDATA)>
<!ELEMENT comp-plan-budget4Salary (#PCDATA)>
<!ELEMENT comp-plan-budget4Bonus (#PCDATA)>
<!ELEMENT comp-plan-budget4Stock (#PCDATA)>
<!ELEMENT comp-plan-budget4Option (#PCDATA)>
<!ELEMENT comp-plan-budget4StockUnits (#PCDATA)>
<!ELEMENT comp-plan-budget4StockOther1 (#PCDATA)>
<!ELEMENT comp-plan-budget4StockOther2 (#PCDATA)>
<!ELEMENT comp-plan-budget4StockOther3 (#PCDATA)>
<!ELEMENT comp-plan-allocated4Salary (#PCDATA)>
<!ELEMENT comp-plan-allocated4Bonus (#PCDATA)>
<!ELEMENT comp-plan-allocated4StockUnits (#PCDATA)>
<!ELEMENT comp-plan-allocated4Stock (#PCDATA)>
<!ELEMENT comp-plan-allocated4Option (#PCDATA)>
<!ELEMENT comp-plan-allocated4StockOther1 (#PCDATA)>
<!ELEMENT comp-plan-allocated4StockOther2 (#PCDATA)>
<!ELEMENT comp-plan-allocated4StockOther3 (#PCDATA)>
<!ELEMENT comp-plan-totalStockPartGuide (#PCDATA)>
<!ELEMENT comp-plan-totalStockPartAllocated (#PCDATA)>
<!ELEMENT comp-plan-notes (#PCDATA)>
<!ELEMENT comp-plan-entry (comp-plan-entry-id, comp-plan-entry-form-template-id?, comp-plan-entry-form-data-id?, comp-plan-entry-userid?, comp-plan-entry-username?, comp-plan-entry-fullname?, comp-plan-entry-firstname?, comp-plan-entry-mi?, comp-plan-entry-lastname?, comp-plan-entry-userGroupName?, comp-salary?, comp-bonus?, comp-stock?, comp-plan-entry-totalComp?, comp-custom-data?, comp-salary-history?, comp-bonus-history?, comp-stock-history?, comp-rating-source-info*, comp-force-comment*)>
<!--mask-->
<!--comp-plan-entry-userid:users_sys_id-->
<!--comp-plan-entry-username:users_sysinfo:users_sys_username-->
<!--comp-plan-entry-fullname-->
<!--comp-plan-entry-firstname:users_sysinfo:users_sys_firstname-->
<!--comp-plan-entry-mi:users_sysinfo:users_sys_mi-->
<!--comp-plan-entry-lastname:users_sysinfo:users_sys_lastname-->
<!--comp-plan-entry-userGroupName-->
<!--comp-plan-entry-totalComp-->
<!ELEMENT comp-plan-entry-id (#PCDATA)>
<!ELEMENT comp-plan-entry-form-template-id (#PCDATA)>
<!ELEMENT comp-plan-entry-form-data-id (#PCDATA)>
<!ELEMENT comp-plan-entry-userid (#PCDATA)>
<!ELEMENT comp-plan-entry-username (#PCDATA)>
<!ELEMENT comp-plan-entry-fullname (#PCDATA)>
<!ELEMENT comp-plan-entry-firstname (#PCDATA)>
<!ELEMENT comp-plan-entry-mi (#PCDATA)>
<!ELEMENT comp-plan-entry-lastname (#PCDATA)>
<!ELEMENT comp-plan-entry-userGroupName (#PCDATA)>
<!ELEMENT comp-plan-entry-totalComp (#PCDATA)>
<!ELEMENT comp-salary (comp-salary-jobTitle?, comp-salary-jobLevel?, comp-salary-jobFamily?, comp-salary-jobRole?, comp-salary-jobCode?, comp-salary-payGrade?, comp-salary-startDate?, comp-salary-prorating?, comp-salary-formRating?, comp-salary-compRating?, comp-salary-localCurrencyCode?, comp-salary-curSalary, comp-salary-curSalaryLocal?, comp-salary-cur-compa-ratio?, comp-salary-cur-range-penetration?, comp-salary-promo?, comp-salary-meritTarget?, comp-salary-merit?, comp-salary-extra?, comp-salary-extra2?, comp-salary-raise-prorating?, comp-salary-finalSalary?, comp-salary-finalSalaryLocal?, comp-salary-compa-ratio?, comp-salary-range-penetration?, comp-salary-lumpSumTarget?, comp-salary-lumpSum?, comp-salary-lumpSum2Target?, comp-salary-lumpSum2?, comp-salary-totalComp?, comp-salary-totalCompLocal?, comp-salary-finalJobFamily?, comp-salary-finalJobRole?, comp-salary-finalJobCode?, comp-salary-finalPayGrade?, comp-salary-rate-type?, comp-salary-rate-units?, comp-salary-rate-local?, comp-salary-rate-plan?, comp-salary-prorating-startDate?, comp-salary-prorating-endDate?, comp-salary-raise-prorating-startDate?, comp-salary-raise-prorating-endDate?, comp-salary-notes?, comp-salary-ineligible?)>

<!--mask-->
<!--comp-salary-jobTitle-->
<!--comp-salary-jobLevel-->
<!--comp-salary-jobFamily-->
<!--comp-salary-jobRole-->
<!--comp-salary-jobCode-->
<!--comp-salary-payGrade-->
<!--comp-salary-prorating-->
<!--comp-salary-formRating-->
<!--comp-salary-compRating-->
<!--comp-salary-localCurrencyCode-->
<!--comp-salary-curSalary-->
<!--comp-salary-curSalaryLocal-->
<!--comp-salary-cur-compa-ratio-->
<!--comp-salary-cur-range-penetration-->
<!--comp-salary-promo-->
<!--comp-salary-meritTarget-->
<!--comp-salary-merit-->
<!--comp-salary-extra-->
<!--comp-salary-extra2-->
<!--comp-salary-raise-prorating-->
<!--comp-salary-finalSalary-->
<!--comp-salary-finalSalaryLocal-->
<!--comp-salary-compa-ratio-->
<!--comp-salary-range-penetration-->
<!--comp-salary-lumpSumTarget-->
<!--comp-salary-lumpSum-->
<!--comp-salary-lumpSum2Target-->
<!--comp-salary-lumpSum2-->
<!--comp-salary-totalComp-->
<!--comp-salary-totalCompLocal-->
<!--comp-salary-finalJobFamily -->
<!--comp-salary-finalJobRole-->
<!--comp-salary-finalJobCode-->
<!--comp-salary-finalPayGrade-->
<!--comp-salary-rate-type-->
<!--comp-salary-rate-units-->
<!--comp-salary-rate-local-->
<!--comp-salary-rate-plan-->
<!--comp-salary-ineligible-->
<!--comp-salary-ineligible-->
<!ELEMENT comp-salary-jobTitle (#PCDATA)>
<!ELEMENT comp-salary-jobLevel (#PCDATA)>
<!ELEMENT comp-salary-jobFamily (#PCDATA)>
<!ELEMENT comp-salary-jobRole (#PCDATA)>
<!ELEMENT comp-salary-jobCode (#PCDATA)>
<!ELEMENT comp-salary-payGrade (#PCDATA)>
<!ELEMENT comp-salary-startDate (#PCDATA)>
<!ELEMENT comp-salary-prorating (#PCDATA)>
<!ELEMENT comp-salary-formRating (#PCDATA)>
<!ELEMENT comp-salary-compRating (#PCDATA)>
<!ELEMENT comp-salary-localCurrencyCode (#PCDATA)>
<!ELEMENT comp-salary-curSalary (#PCDATA)>
<!ELEMENT comp-salary-curSalaryLocal (#PCDATA)>
<!ELEMENT comp-salary-cur-compa-ratio (#PCDATA)>
<!ELEMENT comp-salary-cur-range-penetration (#PCDATA)>
<!ELEMENT comp-salary-promo (#PCDATA)>
<!ELEMENT comp-salary-meritTarget (#PCDATA)>
<!ELEMENT comp-salary-merit (#PCDATA)>
<!ELEMENT comp-salary-extra (#PCDATA)>
<!ELEMENT comp-salary-extra2 (#PCDATA)>
<!ELEMENT comp-salary-raise-prorating (#PCDATA)>
<!ELEMENT comp-salary-finalSalary (#PCDATA)>
<!ELEMENT comp-salary-finalSalaryLocal (#PCDATA)>
<!ELEMENT comp-salary-compa-ratio (#PCDATA)>
<!ELEMENT comp-salary-range-penetration (#PCDATA)>
<!ELEMENT comp-salary-lumpSumTarget (#PCDATA)>
<!ELEMENT comp-salary-lumpSum (#PCDATA)>
<!ELEMENT comp-salary-lumpSum2Target (#PCDATA)>
<!ELEMENT comp-salary-lumpSum2 (#PCDATA)>
<!ELEMENT comp-salary-totalComp (#PCDATA)>
<!ELEMENT comp-salary-totalCompLocal (#PCDATA)>
<!ELEMENT comp-salary-finalJobFamily (#PCDATA)>
<!ELEMENT comp-salary-finalJobRole (#PCDATA)>
<!ELEMENT comp-salary-finalJobCode (#PCDATA)>
<!ELEMENT comp-salary-finalPayGrade (#PCDATA)>
<!ELEMENT comp-salary-rate-type (#PCDATA)>
<!ELEMENT comp-salary-rate-units (#PCDATA)>
<!ELEMENT comp-salary-rate-local (#PCDATA)>
<!ELEMENT comp-salary-rate-plan (#PCDATA)>
<!ELEMENT comp-salary-notes (#PCDATA)>
<!ELEMENT comp-salary-ineligible (#PCDATA)>
<!-- field level eligibility -->
<!ATTLIST comp-salary-ineligible
  promo-ineligible (true | false) "false"
  merit-ineligible (true | false) "false"
  lumpsum-ineligible (true | false) "false"
  lumpsum2-ineligible (true | false) "false"
  extra-ineligible (true | false) "false"
  extra2-ineligible (true | false) "false"
>
<!ELEMENT comp-salary-prorating-startDate (#PCDATA)>
<!ELEMENT comp-salary-prorating-endDate (#PCDATA)>
<!ELEMENT comp-salary-raise-prorating-startDate (#PCDATA)>
<!ELEMENT comp-salary-raise-prorating-endDate (#PCDATA)>
<!ELEMENT comp-bonus (comp-bonus-target, comp-bonus-pay4ObjsTotal?, comp-bonus-extra?, comp-bonus-extra-percent?, comp-bonus-total, comp-pay4Obj*, comp-bonus-notes?, comp-bonus-ineligible?)>
<!--mask-->
<!--comp-bonus-target-->
<!--comp-bonus-pay4ObjsTotal-->
<!--comp-bonus-extra-->
<!--comp-bonus-extra-percent-->
<!--comp-bonus-total-->
<!--comp-bonus-notes-->
<!--comp-bonus-ineligible-->
<!ELEMENT comp-bonus-target (#PCDATA)>
<!ELEMENT comp-bonus-pay4ObjsTotal (#PCDATA)>
<!ELEMENT comp-bonus-extra (#PCDATA)>
<!ELEMENT comp-bonus-extra-percent (#PCDATA)>
<!ELEMENT comp-bonus-total (#PCDATA)>
<!ELEMENT comp-bonus-notes (#PCDATA)>
<!ELEMENT comp-bonus-ineligible (#PCDATA)>
<!ELEMENT comp-pay4Obj (comp-pay4Obj-id, comp-pay4Obj-objType, comp-pay4Obj-index?, comp-pay4Obj-rating?, comp-pay4Obj-weight, comp-pay4Obj-maxPay?, comp-pay4Obj-actPay?, comp-pay4ObjDetail*)>
<!--mask-->
<!--comp-pay4Obj-rating-->
<!--comp-pay4Obj-weight-->
<!--comp-pay4Obj-maxPay-->
<!--comp-pay4Obj-actPay-->
<!ELEMENT comp-pay4Obj-id (#PCDATA)>
<!ELEMENT comp-pay4Obj-objType (#PCDATA)>
<!ELEMENT comp-pay4Obj-index (#PCDATA)>
<!ELEMENT comp-pay4Obj-rating (#PCDATA)>
<!ELEMENT comp-pay4Obj-weight (#PCDATA)>
<!ELEMENT comp-pay4Obj-maxPay (#PCDATA)>
<!ELEMENT comp-pay4Obj-actPay (#PCDATA)>
<!ELEMENT comp-pay4ObjDetail (comp-pay4ObjDetail-id, comp-pay4ObjDetail-objName, comp-pay4ObjDetail-objDesc?, comp-pay4ObjDetail-objType, comp-pay4ObjDetail-objId?, comp-pay4ObjDetail-rating?, comp-pay4ObjDetail-achievement, comp-pay4ObjDetail-achievement2?, comp-pay4ObjDetail-weight, comp-pay4ObjDetail-payout?)>
<!--mask-->
<!--comp-pay4ObjDetail-objName-->
<!--comp-pay4ObjDetail-objDesc-->
<!--comp-pay4ObjDetail-rating-->
<!--comp-pay4ObjDetail-achievement-->
<!--comp-pay4ObjDetail-achievement2-->
<!--comp-pay4ObjDetail-weight-->
<!--comp-pay4ObjDetail-payout-->
<!ELEMENT comp-pay4ObjDetail-id (#PCDATA)>
<!ELEMENT comp-pay4ObjDetail-objName (#PCDATA)>
<!ELEMENT comp-pay4ObjDetail-objDesc (#PCDATA)>
<!ELEMENT comp-pay4ObjDetail-objType (#PCDATA)>
<!ELEMENT comp-pay4ObjDetail-objId (#PCDATA)>
<!ELEMENT comp-pay4ObjDetail-rating (#PCDATA)>
<!ELEMENT comp-pay4ObjDetail-achievement (#PCDATA)>
<!ELEMENT comp-pay4ObjDetail-achievement2 (#PCDATA)>
<!ELEMENT comp-pay4ObjDetail-weight (#PCDATA)>
<!ELEMENT comp-pay4ObjDetail-payout (#PCDATA)>
<!ELEMENT comp-stock (comp-stock-formRating?, comp-stock-compRating?, comp-stock-units?, comp-stock-option?, comp-stock-stock?, comp-stock-other1?, comp-stock-other2?, comp-stock-other3?, comp-stock-partguide?, comp-stock-partallocated?, comp-stock-grantDate?, comp-stock-notes?, comp-stock-ineligible?)>
<!--mask-->
<!--comp-stock-formRating-->
<!--comp-stock-compRating-->
<!--comp-stock-units-->
<!--comp-stock-option-->
<!--comp-stock-stock-->
<!--comp-stock-other1-->
<!--comp-stock-other2-->
<!--comp-stock-other3-->
<!--comp-stock-partguide-->
<!--comp-stock-notes-->
<!--comp-stock-ineligible-->
<!ELEMENT comp-stock-formRating (#PCDATA)>
<!ELEMENT comp-stock-compRating (#PCDATA)>
<!ELEMENT comp-stock-units (#PCDATA)>
<!ELEMENT comp-stock-option (#PCDATA)>
<!ELEMENT comp-stock-stock (#PCDATA)>
<!ELEMENT comp-stock-other1 (#PCDATA)>
<!ELEMENT comp-stock-other2 (#PCDATA)>
<!ELEMENT comp-stock-other3 (#PCDATA)>
<!ELEMENT comp-stock-grantDate (#PCDATA)>
<!ELEMENT comp-stock-notes (#PCDATA)>
<!ELEMENT comp-stock-ineligible (#PCDATA)>
<!ATTLIST comp-stock-ineligible
	stock-ineligible (true | false) "false"
	option-ineligible (true | false) "false"
	units-ineligible (true | false) "false"
	other1-ineligible (true | false) "false"
	other2-ineligible (true | false) "false"
	other3-ineligible (true | false) "false"
>
<!ELEMENT comp-stock-partguide (#PCDATA)>
<!ELEMENT comp-stock-partallocated (#PCDATA)>


<!ELEMENT comp-plan-budget-grouping (comp-plan-budgets)>
<!ATTLIST comp-plan-budget-grouping
	budget-grouping-key CDATA #IMPLIED
	budget-grouping-local-currency-code CDATA #IMPLIED
>

<!-- comp-custom-data is for custom data -->
<!ELEMENT comp-custom-data (comp-custom-field*)>
<!ELEMENT comp-custom-field (#PCDATA)>
<!ATTLIST comp-custom-field
	id CDATA #REQUIRED
>
<!ATTLIST comp-plan-budgets
	name CDATA #IMPLIED
	type (salary | bonus | stocks | options) "salary"
	value CDATA #IMPLIED
>
<!ELEMENT comp-salary-history (comp-salary*)>
<!ELEMENT comp-bonus-history (comp-bonus*)>
<!ELEMENT comp-stock-history (comp-stock*)>
<!ATTLIST comp-salary-promo
	effectiveDate CDATA #IMPLIED
	net CDATA #IMPLIED
>
<!ATTLIST comp-salary-merit
	effectiveDate CDATA #IMPLIED
	net CDATA #IMPLIED
>
<!ATTLIST comp-salary-extra
	effectiveDate CDATA #IMPLIED
	net CDATA #IMPLIED
>
<!ATTLIST comp-salary-extra2
	effectiveDate CDATA #IMPLIED
	net CDATA #IMPLIED
>
<!ATTLIST comp-salary-lumpSum
	effectiveDate CDATA #IMPLIED
>
<!ATTLIST comp-salary-lumpSum2
	effectiveDate CDATA #IMPLIED
>
<!-- the rating information for an entry.
-->
<!ELEMENT comp-rating-source-info (comp-rating-detail+)>
<!ATTLIST comp-rating-source-info
	useFor (all | salary | bonus | stock | varpay | varpay_team) "all"
>
<!ELEMENT comp-rating-detail (#PCDATA)>
<!ATTLIST comp-rating-detail
	form-id CDATA #IMPLIED
	form-data-id CDATA #IMPLIED
	form-rating CDATA #IMPLIED
	comp-rating CDATA #IMPLIED
>
<!ELEMENT comp-force-comment (#PCDATA)>
<!ATTLIST comp-force-comment
    id CDATA #IMPLIED
    useFor (salary | stock) #REQUIRED
    fieldId (promotion | merit | extra | extra2 | lumpSum | lumpSum2 | stock | options | stockUnits | stockOther1 | stockOther2 | stockOther3) #REQUIRED
    createdDate CDATA #IMPLIED
    createdBy CDATA #IMPLIED
    lastModified CDATA #IMPLIED
    lastModifiedBy CDATA #IMPLIED
>
<!-- define comp-manager-hierarchy as element instead of attr of comp-config
     just in case if there are different manager hierarchy used by different page like salary/bonus...
     it is unlikely but just in case. -->
<!ELEMENT comp-config (comp-include?, (comp-number-format | comp-number-format-ext)*, (comp-field-definition | comp-field-group)*, comp-pay-matrix?, comp-currency-conv-table?, comp-stock-value-table?, comp-stock-participation-guideline?, (comp-rule-ref | comp-rule)*, comp-budget-rule*, comp-salary-rule*, comp-force-comment-config*, comp-rating-source*, comp-p4p-common*, comp-rating-input?, comp-display?, comp-instruction*, comp-calculation?, comp-budget-label*, comp-plan-creation?, comp-manager-hierarchy?, comp-job-selector?, comp-budget-grouping?, comp-budget-override?, comp-ect-output-component*, comp-ect-history-config*, comp-group?, comp-variable-pay?, comp-varpay-refs?)>
<!--
The attr formTemplateName is obsolete

checkRatingSourceAcrossTemplates
true = get the latest comp plan rating source form instance across all of the rating source templates defined
false = use the latest comp plan rating source form instance from the first rating source template found. If there is no form based on the first template in the list, it will then check for the next one in the list

Please note that if you have PM forms with embedded comp section and if multiple PM forms are tied to the same compensation form template, make sure -
1. The ids are accurate in all templates
2. checkRatingSourceAcrossTemplates is set to true
Not doing so can result in incorrect form linkages. Errors resulting in incorrect form linkages cannot be corrected once the forms have been launched under any circumstance.

The effectiveDate attribute is used to indicate that the compensation form is EffectiveDate driven, the compensation input data is taken from
EffectiveDate driven data source like Employee Central.

enableGuidelineOptimization attribute is used to determine whether to store comp-rule and comp-formula in the database. When enabled, the comp-rule
and comp-formula will be stored in database and referenced in real time. The benefit of this smaller template size, faster parsing and processing. 
The side-effect of this optimization is that whenever the formula is changed, the effects the existing form right away even the completed form.
-->
<!ATTLIST comp-config
	showFormRatingAs (number | text | number-text) "number"
	functionalCurrencyCode CDATA #IMPLIED
	baseCurrencyView (localCurrencyCentric | functionalCurrencyCentric) "functionalCurrencyCentric"
	makeCustomDataReportable (true | false) "false"
	checkRatingSourceAcrossTemplates (true | false) "false"
	autoSyncP4PData (true | false) "false"
	effectiveDate CDATA #IMPLIED
	isHybridMode (true | false) "false"
	enableGuidelineOptimization (true | false) "false"
>
<!--
The attribute baseCurrencyView indicates which currency view (local currency view or functional currency view) should be the base, which will be preserved in DB, as opposed to the other  currency view will be converted on the fly, in which precision would be not guaranteed, by default and to be back compatible, we use functionalCurrencyCentric
-->
<!ELEMENT comp-include (comp-include-salary?, comp-include-bonus?, comp-include-stock?, comp-include-summary?, comp-include-report?)>
<!-- The existence of element comp-include-salary means we'll have salary information in compensation plan,
similarly, comp-include-bonus for bonus information , comp-include-stock for stock/option information.
-->
<!ATTLIST comp-include
	includeTotal (true | false) "true"
	includeSubTotal (true | false) "false"
	includeHistory (true | false) "false"
	includeBudget (true | false) "true"
  includeVarpayStatement (true | false) "false"
>
<!--
The attribute includeHistory is obsolete(history feature originally for demo but never functioning), DO NOT USE IT! It remains in DTD only for back compatibility purpose
The attribute includeSubTotal is obsolete, DO NOT USE IT! It remains in DTD only for back compatibility purpose

includeRaiseProrating: In order to support bonus processes within the
                       salary sheet, there should be an editable
                       column where a form reviewer can enter a
                       proration amount, which affects the total
                       raise.  The totals rows and budget should
                       not be affected by the proration behavior. In order
                       to set it up, you need two things:
   1. set this new attribute includeRaiseProrating to true
   2. add the following standard comp-field-definition:
        <comp-field-definition id="raiseProrating" isCustomField="false" readOnly="false" hidePercentage="false" hideAmount="false" percentageReadOnly="false">
              <comp-field-label><![CDATA[Raise Prorating]]></comp-field-label>
        </comp-field-definition>
   3. (Added in 0603P1) Now raise prorating can be imported. And you can apply the attribute importKey, reloadable to the field "raiseProrating":
       a) The default import key for the field raiseProrating is "RAISE_PRORATING", you can use set the attribute importKey to some value other than default, such as "xyz";
       b) If  you want to auto reload the imported value for raiseProating whenever you open/save comp plan, you can set reloadable="true", please note that it's only applicable when the field is readonly (readOnly="true").

   4. Since b0811, we added follwoing importable and reloadable fileds: STOCK_STOCK_AMOUNT, STOCK_UNIT_AMOUNT, STOCK_OPTION_AMOUNT, STOCK_OTHER1_AMOUNT,STOCK_OTHER2_AMOUNT and STOCK_OTHER3_AMOUNT
Please note that hideAmount applies to only merit guideline
-->
<!ELEMENT comp-include-salary (comp-currency-view?, comp-youcalc-application?)>
<!ATTLIST comp-include-salary
	includeJobTitle (true | false) "true"
	includeJobLevel (true | false) "true"
	includePayGrade (true | false) "true"
	includeFinalPayGrade (true | false) "false"
	includeFinalPayGuide (true | false) "false"
	includeStartDate (true | false) "true"
	includeProrating (true | false) "true"
	includeSalaryProratingStartDate (true | false) "false"
	includeSalaryProratingEndDate (true | false) "false"
	includePMRating (true | false) "true"
	includeCompRating (true | false) "true"
	includeCurSalary (true | false) "true"
	includeCurRatio (true | false) "false"
	includeCurRangePenetration (true | false) "false"
	includePayGuide (true | false) "false"
	includeEligible (true | false) "false"
	includePMCompleted (true | false) "false"
	includeWithinGuidelines (true | false) "false"
	includeCompliance (true | false) "false"
	includePromo (true | false) "true"
	includePromoDate (true | false) "false"
	includePromoNet (true | false) "false"
	includeMeritGuideline (true | false) "true"
	includeMerit (true | false) "true"
	includeMeritDate (true | false) "false"
	includeMeritNet (true | false) "false"
	includeExtra (true | false) "true"
	includeExtraDate (true | false) "false"
	includeExtraNet (true | false) "false"
	includeExtra2 (true | false) "false"
	includeExtra2Date (true | false) "false"
	includeExtra2Net (true | false) "false"
	includeRaiseProrating (true | false) "false"
	includeRaiseProratingStartDate (true | false) "false"
	includeRaiseProratingEndDate (true | false) "false"
	includeTotalRaise (true | false) "true"
	includeTotalIncrease (true | false) "false"
	includeLumpSumTarget (true | false) "false"
	includeLumpSumGuideline (true | false) "false"
	includeLumpSum (true | false) "true"
	includeLumpSum2Target (true | false) "false"
	includeLumpSum2Guideline (true | false) "false"
	includeLumpSum2 (true | false) "false"
	includeLumpsumDate (true | false) "false"
	includeLumpsum2Date (true | false) "false"
	includeTotalLumpSum (true | false) "false"
	includeCompaRatio (true | false) "true"
	includeRangePenetration (true | false) "true"
	includeLocalCurrencyCode (true | false) "false"
	includeSalaryRateType (true | false) "false"
	includeSalaryRateUnits (true | false) "false"
	includeSalaryRateLocal (true | false) "false"
	includeSalaryRatePlan (true | false) "false"
	includeSalaryRateFinal (true | false) "false"
	includeBudgetTotalRaise (true | false) "false"
	includeCurrentSalaryLocal (true | false) "false"
	includeFinalSalary (true | false) "true"
	includeFinalSalaryLocal (true | false) "false"
	includeTotalComp (true | false) "true"
	includeTotalCompLocal (true | false) "false"
	includeSalaryUserNameRight (true | false) "false"
	includeSalaryUserNamePreData (true | false) "false"
	includeEmployeeFirstName (true | false) "false"
	includeExecRuleViolation (true | false) "false"
	includeEmployeeLastName (true | false) "false"
	includeMgrFirstName (true | false) "false"
	includeMgrLastName (true | false) "false"
	includeSalaryMgrId (true | false) "false"
	includeMgrFirstNameInForm (true | false) "false"
	includeMgrLastNameInForm (true | false) "false"
	includeSalaryNotes (true | false) "true"
	includeSalaryStatementLink (true | false) "false"
	includeJobFamily (true | false) "false"
	includeJobRole (true | false) "false"
	includeJobCode (true | false) "false"
	includeFinalJobFamily (true | false) "false"
	includeFinalJobRole (true | false) "false"
	includeFinalJobCode (true | false) "false"
	includeJobSelector (true | false) "false"
>
<!--
NOTES: DO NOT USE the following obsolete attributes, they are left in DTD only for back compatibility purpose, should not be used any longer:
        includeBudgetTotalRaise
-->
<!--
NOTES:
The optional element comp-currency-view is to define currency view:
The attribute includeFunctionalCurrency, includePlannerCurrency, includeEmployeeLocalCurrency is used to turn on/off
the view of functional currency, planner's(manager's) currency, and employee's local currency respectively
By default, when comp-currency-view is abscent, only functional currency is quietly availble with no currency view options(dropdown) show.
If comp-currency-view is defined, the included currency view options will be displayed in the currency view dropdown list.
-->
<!ELEMENT comp-currency-view EMPTY>
<!ATTLIST comp-currency-view
	includeFunctionalCurrency (true | false) "true"
	includePlannerCurrency (true | false) "true"
	includeEmployeeLocalCurrency (true | false) "true"
	includeAnyCurrency (true | false) "false"
>

<!ELEMENT comp-youcalc-application (comp-field-label*)>
<!ATTLIST comp-youcalc-application
	appID CDATA #REQUIRED
	appDisplayHeight CDATA #REQUIRED
	showInExecutiveReview (true | false) "true"	
>

<!ELEMENT comp-include-bonus (comp-currency-view?, comp-youcalc-application?)>
<!ATTLIST comp-include-bonus
	includeBonusPmRating (true | false) "false"
	includeBonusSectionTotal (true | false) "false"
	includeBonusExtra (true | false) "true"
	includeMultiBonusExtra (true | false) "false"
	includeBonusGuideline (true | false) "true"
	includeBonusObjDesc (true | false) "false"
	includeBonusAchievement (true | false) "true"
	includeBonusAchievement2 (true | false) "false"
	includeBonusBudget (true | false) "true"
	includeBonusMoreToAlloc (true | false) "true"
	includeBonusNotes (true | false) "true"
	includeBonusStatementLink (true | false) "false"
	includeBonusMgrId (true | false) "false"
	includeBonusMgrFirstName (true | false) "false"
	includeBonusMgrLastName (true | false) "false"
>
<!ELEMENT comp-include-stock (comp-youcalc-application?)>
<!ATTLIST comp-include-stock
	includeStockJobLevel (true | false) "false"
	includeUnits (true | false) "false"
	includeStock (true | false) "true"
	includeOption (true | false) "true"
	includeStockOther1 (true | false) "false"
	includeStockOther2 (true | false) "false"
	includeStockOther3 (true | false) "false"
	includeUnitsGuideline (true | false) "true"
	includeStockGuideline (true | false) "true"
	includeOptionGuideline (true | false) "true"
	includeStockOther1Guideline (true | false) "true"
	includeStockOther2Guideline (true | false) "true"
	includeStockOther3Guideline (true | false) "true"
	includeGrantDate (true | false) "true"
	includeStockBudget (true | false) "true"
	includeStockMoreToAlloc (true | false) "true"
	includeStockNotes (true | false) "true"
	includeStockPMRating (true | false) "true"
	includeStockCompRating (true | false) "false"
	includeStockStatementLink (true | false) "false"
	includeStockParticipation (true | false) "false"
	includeStockMgrId (true | false) "false"
	includeStockMgrFirstName (true | false) "false"
	includeStockMgrLastName (true | false) "false"
>
<!ELEMENT comp-include-summary (#PCDATA)>
<!ATTLIST comp-include-summary
	includeSummaryDefault (true | false) "true"
	includeSummaryRateFinal (true | false) "false"
	includeSummaryTotalCompensation (true | false) "false"
	includeSummaryPMRating (true | false) "false"
	includeSummaryCompRating (true | false) "false"
>
<!ELEMENT comp-include-report (#PCDATA)>
<!--
NOTES: For comp-number-format
The element comp-number-format is deprecated, it's replaced by comp-number-format-ext, it's left in this dtd purely for backward compatibility, please stop using it in comp form template
-->
<!ELEMENT comp-number-format (#PCDATA)>
<!ATTLIST comp-number-format
	id CDATA #IMPLIED
	useFor (money | percent | amount | rating | other) "other"
>
<!--
NOTES: for comp-number-format-ext
The element comp-number-format-ext is the extension or replacement of comp-number-format, we add comp-number-format-ext to replace comp-number-format while leaving comp-number-format there for back compatiblity:
1. The attribute id is required!
   IMPORTANT: Please give each number format a different id that can be any string value
   If two number formats have same id, the latter one will overwrite the earlier one!!! So always avoid same id!
   The special id value "defMoneyFormat", "defPercentFormat", "defAmountFormat", "defRatingFormat", "defProrationFormat" and "defRatioValueFormat" are reserved as system defaults -
   "defRatioValueFormat" is for ratio value, applicable only when the numberFormat attribute is "number" in comp-ratio-display.
   "defProrationFormat" is for formating date-based proration.
   when there's no number format defined for a certain type, we'll put the corrsponding system default number format with those ids.
2. The attribute useFor tells what type of fields the number format is used for

e.g
<comp-number-format-ext id="myMoneyFormat" useFor="money">
<comp-number-format-ext-format>#,##0.00</comp-number-format-ext-format>
<comp-number-format-ext-multiple>100</comp-number-format-ext-multiple>
<comp-number-format-ext-applyTo>
<comp-number-format-ext-rateType>hourly</comp-number-format-ext-rateType>
<comp-number-format-ext-rateType>weekly</comp-number-format-ext-rateType>
</comp-number-format-ext-applyTo>
<comp-number-format-ext-applyTo>
<comp-number-format-ext-currency>JPY</comp-number-format-ext-currency>
</comp-number-format-ext-applyTo>
</comp-number-format-ext>
-->
<!ELEMENT comp-number-format-ext (comp-number-format-ext-format, comp-number-format-ext-multiple?, comp-number-format-ext-applyTo*)>
<!ATTLIST comp-number-format-ext
	id CDATA #IMPLIED
	mode (truncate | round) #IMPLIED
	useFor (money | percent | amount | rating | ratio-value | proration | other) "other"
>
<!ELEMENT comp-number-format-ext-format (#PCDATA)>
<!ELEMENT comp-number-format-ext-multiple (#PCDATA)>
<!--
NOTES: For comp-number-format-multiple
The roundingMode attrbite is to specify which rounding behavior should be applied in number rounding: up, down or halpUp
up: round away from zero
down: round towards zero
halfUp: default mode, round towards "nearest neighbor" unless both neighbors are equidistant, in which case round up

NOTE: There also some implied logic in the application on how multiple is applied. The rules are:

1. Multiple rounding is only applied to following comp planning fields: merit/promo/extra/extra2/lumpsum/lumpsum2/stockunit/stock/option/stockother1/stockother2/stockother3/custom fields
2. Multiple rounding is applied based <raise-prorating-calc applyMultiplerounding> on following fields: totalRaise, totalIncrease
3. Other derived fields, we only apply number format and no multiple round.
4. For totals, multiple rounding is applied if multiple rounding is applied to individual entry for that field.
5. For budget-calculation, we also apply multiple rounding at the entry level.
 
-->
<!ATTLIST comp-number-format-ext-multiple
	roundingMode (up | down | halfUp) "halfUp"
>
<!ELEMENT comp-number-format-ext-applyTo (comp-number-format-ext-rateType*, comp-number-format-ext-currency*)>
<!ELEMENT comp-number-format-ext-rateType (#PCDATA)>
<!ELEMENT comp-number-format-ext-currency (#PCDATA)>
<!-- The element comp-field-definition is a place where we define a field, we can define:
     1. customized label
     2. ... (later number format, round up?)

id: required, custom field should use an id other than pre-defined fields(see below for a list of pre-define fields)
isCustomField: should be always "true" for custom field, always "false" for pre-defined fields
isVisible is used to control whether to display field in the form. It only applies to custom field and limited standard fields like:
         jobFamily, jobRole, jobCode, finalJobFamily, finalJobRole, finalJobCode, lumpsumTarget, lumpsum2Target. When a value is not visible, it only means that it is hidden from
         UI, but the field value should still be available for use.
type: Custome field will be formatted according to its type. Required for custom field.
useFor: specify what sheet the column belongs to, this attribute is required for all custom fields
level: If the level is goal, it means that the field is custom field for goal level.
importKey: If importKey attribute is given, the corresponding imported user info will be used to
           initialize the column when create plan. This attribute is optional.
readOnly: If set "true", the column will be readonly in plan. Optional, "false" by default.
minValue: minimum allowed value, only applicable to number types(money, percent, or amount). Optional.
maxValue: maximum allowed value, only applicable to number types. Optional.
NOTE: minValue and maxValue only applicable to custom field(number type) and raiseProrating.
width: the width of the column in plan page. Optional, "6" by default.
percentWidth: the width of the percent column in plan page. Optional, "4" by default. only for six standard fields:
	 promotion, merit, extra, extra2, lumpsum and lumpsum2
customFieldDisplayLocation: describes where to display the custom field in the salary sheet page. Note that
    this attribute is only applicable for custom fields (ie, isCustomField="true") and when userFor="salary".
    This field is optional.  If not supplied, then the display location for custom fields on the salary page
    will default to "beforeAction" which is at the end of the table before the Action cell.  Other options
    include "beforePromo" or "beforeMeritGuideline" which place the columns before the Promotion or Merit
    Guideline columns, respectively."beforeLumpSumTarget" f selected, the custom column will be displayed 
    to the left of LumpSum Target. If LumpSum Target is not displayed, the custom column would still appear 
    to the left of LumpSum.
reloadable: If set "true", the field's value will be reloaded from user import whenever view/edit live plans.
            Only applicable to readonly fields when importKey non-empty. Optional.
            Staring from 0909, it applies to all six salary raise fields (promotion,merit,extra,extra2,lumpsum,lumpsum2) 
displayOrder: User can use the displayOrder attribute to specify the dispplay orde for fields (salary fields only for now).
   The expected value is a positive integer, like displayOrder="1". For backward compatibility, this attribute can be ommitted,
   which means the field will be displayed with the system default order.
    This attribute is not applicable to those fields that we have fixed display order such as action and user name fields,
    which will displayed always as leftmost or rightmost fields.
   Fields without displayOrder defined will be displayed after those with displayOrder defined,
   the listing order will be respected in case that fields have same value(including undefined case) for displayOrder
   For custom fields, when displayOrder is specified, customFieldDisplayLocation will be ignored, otherwise honored as before
reportable: Only applicable to custom fields.
            If set to "true", value of custom fields will be stored in DB in a manner so that the data can be easily reported.
            They are available for ad hoc report.
            By default and for backward compatibility, it'll be "false" for custom fields, ignored otherwise.
            For backward compatibility, custom fields whose needCalcTotal is true or used in budget or compensation rules are
            also available for ad hoc report.
needCalcTotal: Only applicable to money/amount type of custom fields in salary tab. Support for other tabs is to be added later.
 If set "true", we'll calculate/display group total in comp form UI and export, not applicable to Exec Review, rollup report, or other exports 
 By default and for backward compatibility, it'll be "false" for applicable fields(money/amount custom fields), ignored otherwise

exportable: is used to control whether to export hidden fields, only applicable for hide-able fields when their isVisible="false"

IMPORTANT: The following fields have been pre-defined, you don't have to define these fields in config XML
unless you want to overwrite the pre-defined things of the field, such as its label.
Please be aware: DO NOT USE pre-defined id when you define custom fields!!!

  Field id           for what use                             pre-defined label(default)         isVisible applied (not applied if missing)
  ================================================================================================================
  userName           Employee full name                       Employee                           
  jobTitle           Job Title                                Title                              
  jobLevel           Job Level                                Job Level                          
  jobFamily          Job Family                               Job Family                          yes
  jobRole            Job Role                                 Job Role                            yes
  jobCode            Job Code                                 Job Code                            yes
  finalJobFamily     Final Job Family                         Final Job Family                    yes
  finalJobRole       Final Job Role                           Final Job Role                      yes
  finalJobCode       Final Job Code                           Final Job Code                      yes
  payGrade           Pay Grade                                Pay Grade
  finPayGrade        Final Pay Grade                          Final Pay Grade
  startDate          Start Date of Current Position           Date of Current Position
  prorating          Prorating                                Prorating
  salaryProratingStartDate The start date used for calculate salary proration.  Salary Prorating Start Date    Yes
  salaryProratingEndDate   The end date used for calculate salary proration.    Salary Prorating end Date      Yes  
  pmRating           PM review rating                         Rating
  compRating         Compensation Rating                      Comp Rating
  budgetTotalRaise   total Raise Budget                       Total Raise Budget
  curSalary          Current Salary                           Current Salary
  curRatio           Current compa ratio                      Current Ratio
  curRangePenetration Current Range Penetration               Current Range Penetration
  payGuide           Salary Pay Guide(Mid-point)              Salary Mid-point
  finalPayGuide      Final Pay Guide                          Final Salary Mid-point
  promotion          Promotion                                Promotion
  merit              Merit Raise                              Merit
  meritGuideline     Merit Raise Guideline                    Merit Guideline
  extra              Salary Adjustment                        Adjustment
  extra2             Salary Adjustment2                       Adjustment2
  raiseProrating     Raise Prorating                          Raise Prorating
  raiseProratingStartDate The start date used for calculate proration.  Raise Prorating Start Date  Yes
  raiseProratingEndDate The end date used for calculate proration.  Raise Prorating end Date        Yes  
  totalRaise         Total Raise                              Total Raise
  finSalary          Final Salary                             Final Salary
  compaRatio         Compa-ratio                              Compa-Ratio
  rangePenetration   Range Penetration                        Range Penetration
  lumpSumTarget      Lump Sum Target                          Lump Sum Target                      yes
  lumpSum            Lump Sum                                 Lump Sum
  lumpSumGuideline   Lump Sum Guideline                      Lump Sum  Guideline
  lumpSum2Target     Lump Sum 2 Target                        Lump Sum 2 Target                    yes
  lumpSum2           Lump Sum 2                               Lump Sum
  lumpSum2Guideline  Lump Sum 2 Guideline                     Lump Sum 2 Guideline
  totalLumpSum       Lump Sum + Lump Sum 2                    Total Lump Sum
  totalIncrease      Total Increase                           Total Increase
  totalComp          Total Compensation                       Total Compensation
  localCurrencyCode  Local Currency Code                      Local Currency Code
  curSalaryLocal     Current Salary in local currency         Current Salary in Local Currency
  finSalaryLocal     Final Salary in local currency           Final Salary in Local Currency
  totalCompLocal     Total Compensation in local currency     Total Compensation in Local Currency
  promoDate          Promotion Effective Date                 Promotion Effective Date
  meritDate          Merit Raise Effective Date               Merit Raise Effective Date
  extraDate          Adjustment Effective Date                Adjustment Effective Date
  extra2Date         Adjustment2 Effective Date               Adjustment2 Effective Date
  lumpsumDate        Lumpsum Effective Date                   Lumpsum Effective Date
  lumpsum2Date       Lumpsum 2 Effective Date                 Lumpsum 2 Effective Date

  eligible           Number of Eligible Employees             Eligible
  pmCompleted        Number Who Have Completed PM Form        PM Completed
  withinGuidelines   Number Within Guidelines                 Within Guidelines
  compliance         = withinGuidelines / eligible (as %)     Compliance

  promoNet           Promotion Cash Flow Impact               Promotion Cash Flow Impact
  meritNet           Merit Raise Cash Flow Impact             Merit Raise Cash Flow Impact
  extraNet           Adjustment Cash Flow Impact              Adjustment Cash Flow Impact
  extra2Net          Adjustment2 Cash Flow Impact             Adjustment2 Cash Flow Impact
  stock              Stock                                    Stock
  options            Options                                  Options
  budget             Budget                                   Budget
  moreToAllocate     More to Allocate                         More to Allocate
  salaryTab          Salary on the left nav                   Salary
  bonusTab           Bonus on the left nav                    Bonus
  stockTab           Stock on the left nav                    Stock
  variablePayTab     Variable Pay on the left nav             Variable Pay

  bonus              Bonus header in the bonus page           Bonus
  bonusPmRating      PM review rating in bonus page           PM Rating
  bonusRating        Rating header on the inner bonus page    Rating
  bonusGuideline     Guideline                                Guideline
  bonusObjDesc   	 ObjDesc                              	  ObjDesc
  bonusObjName   	 ObjName                              	  Goal Name
  bonusAchievement   Achievement                              Achievement
  bonusAchievement2   Achievement2                             Achievement2
  bonusWeight        Weight                                   Weight
  bonusPayout        Payout                                   Payout
  bonusSectionTotal  Bonus Section Total                      Section Total
  bonusMultiplicativeAdjustment    bonus multiplicative adjustment percentage   User Modifier Percent
  bonusAdjustment    Bonus Additive adjustment                Adjustment
  bonusTotal         Bonus Total                              Total
  bonusTarget        Bonus Target                             Target

  salaryRateFinal    Final Salary Rate                        Final Salary Rate
  salaryType         Salary Type                              Salary Type
  unitsPerYear       Units Per Year                           Units Per Year
  salaryRateLocal    Salary Rate in Local Currency            Salary Rate in Local Currency
  salaryRatePlan     Salary Rate in Plan Currency             Salary Rate in Plan Currency
  budget-exceed-warn-message
  comp-p4p-sect-label
  comp-p4p-sect-name-column-label
  comp-instruction
  stockUnits                                                  Units
  stockOther1        extra stock field                        Other1
  stockOther2        extra stock field                        Other2
  stockOther3        extra stock field                        Other3
  stockGrantDate                                              Date of Grant
  summaryTotalCompensation                                    Total Compensation

  stockPmRating      PM review rating in stock page           Rating
  stockCompRating    Comp rating in stock page                Comp Rating
  summaryPmRating    PM review rating in summary page         Rating
  summaryCompRating  Comp rating in summary page              Comp Rating

  salaryAction       Action column in Salary page             Action
  bonusAction        Action column in Bonus page              Action
  stockAction        Action column in Stock page              Action
  executiveAction    Left Action column in Executive page     Action
  executiveRuleViolation Flag column for exec review          Flags

  compensationReadOnly control if user's compenstaion data is readonly    N/A
  =================================================================================================

e.g
<comp-field-definition id="startDate">
	<comp-field-label>Start Date</comp-field-label>
	<comp-field-label lang="fr">Debut</comp-field-label>
</comp-field-definition>
<comp-field-definition id="ICP_done" isCustomField="true" type="percent" useFor="salary" readOnly="false"  minValue="0" maxValue=200" width="6">
            <comp-field-label>ICP % completion</comp-field-label>
</comp-field-definition>
<comp-field-definition id="lastGrant" isCustomField="true" type="amount" useFor="stock" importKey="LAST_GRANT" readOnly="true">
            <comp-field-label>Last Grant</comp-field-label>
</comp-field-definition>
<comp-field-definition id="empType" isCustomField="true" type="string" useFor="salary" readOnly="false">
            <comp-field-label>Employment Type</comp-field-label>
            <comp-field-value-enum isDefault="true">Associate</comp-field-value-enum>
            <comp-field-value-enum>W2 contractor</comp-field-value-enum>
            <comp-field-value-enum>1099 contractor</comp-field-value-enum>
</comp-field-definition>

showCustomEnumValueOnly:only applicable to custom field + enum values + has default value in the enum values.
when it is set to true then "None Selected" would not be available in the enum values dropdown list.
-->

<!ELEMENT comp-field-definition (comp-field-label+, comp-field-value-enum*, comp-field-number-format-id*, field-permission*, comp-custom-field-money-format?, comp-custom-field-formula?, comp-ect-input-field-map?, comp-ect-output-field-map?)>
<!ATTLIST comp-field-definition
	id ID #REQUIRED
	isCustomField (true | false) "false"
	isVisible (true | false) "true"
	type (string | money | percent | amount | date) #IMPLIED
	useFor (salary | bonus | stock | varpay) #IMPLIED
	level (entry | goal) #IMPLIED
	importKey CDATA #IMPLIED
	readOnly (true | false) #IMPLIED
	minValue CDATA #IMPLIED
	maxValue CDATA #IMPLIED
	width CDATA #IMPLIED
	percentWidth CDATA #IMPLIED
	customFieldDisplayLocation (beforeMeritGuideline | beforePromo | beforeAction | beforeLumpSumTarget |vpBeforeEntryPayout | vpAfterEntryPayout |
                          vpBeforeBusGoalPayout | vpAfterBusGoalPayout | beforeIndivGoalProrateAmt | afterIndivGoalProrateAmt |
                          beforeTeamGoalProrateAmt | afterTeamGoalProrateAmt | teamIndivGoalLevel) #IMPLIED
	hidePercentage (true | false) "false"
	hideAmount (true | false) "false"
	percentageReadOnly (true | false) "false"
	reloadable (true | false) "true"
	displayOrder CDATA #IMPLIED
	reportable (true | false) #IMPLIED
	needCalcTotal CDATA #IMPLIED
	exportable (true | false) "false"
	showCustomEnumValueOnly (true | false) "false"
>

<!--
Usage for field group:
comp-field-group is to define a field group for which we want to show a labelled tab on top of header and also want to set same visual styles such as backgroup color
Each field group has a label just like field, and the label can be localized
Each field group has at least one member field, its member fields should be included acoordingly with includeXXX="true"

id: required, custom field should use an id other than pre-defined fields(see below for a list of pre-define fields)
useFor: required, can be only "salary" for now, i.e. only applicable to salary tab
backgroundColor: should be a RGB color code in hex, e.g. 278AB9, 
                 Based on the specified color, we'll use its gradiented and cross-hatched derivation as background for the tab row in form,
                  while a gradiented derivation for header row, and also the base color for total row
                 You can choose any color in RGB, but the following are verified sample colors you may choose: A8BDCE, ED9C00, B795FF, B4BE35, 63CBC6, EAA299, 9ABDF1, FF0000, EBC469,
displayOrder: required, the member fields' displayOrder will be based on the group fields, and within the group the listing order of member fields determine
 the relative display order in the group (the displayOrder attribute in member field will be ignored)
e.g.
      <comp-field-group id="meritFields" useFor="salary" displayOrder="3" backgroundColor="63CBC6">
        <comp-field-label><![CDATA[Merit]]></comp-field-label>
        <comp-field-label lang="de"><![CDATA[(DE)Merit]]></comp-field-label>
        <comp-field-label lang="fr"><![CDATA[(FR)Merit]]></comp-field-label>

        <comp-field-definition id="meritGuideline" isCustomField="false" isVisible="true" readOnly="false" hidePercentage="false" hideAmount="false" percentageReadOnly="false" reloadable="true">
          <comp-field-label><![CDATA[Merit Guidelines]]></comp-field-label>
        </comp-field-definition>
        <comp-field-definition id="merit" isCustomField="false" isVisible="true" readOnly="false" hidePercentage="false" hideAmount="false" percentageReadOnly="false" reloadable="true">
          <comp-field-label><![CDATA[Merit]]></comp-field-label>
        </comp-field-definition>
        <comp-field-definition id="meritNote" isCustomField="true" isVisible="true" readOnly="false" hidePercentage="false" hideAmount="false" percentageReadOnly="false" reloadable="true">
          <comp-field-label><![CDATA[Merit Raise Reason]]></comp-field-label>
        </comp-field-definition>
      </comp-field-group>
-->
<!ELEMENT comp-field-group (comp-field-label+, comp-field-definition+)>
<!ATTLIST comp-field-group
	id ID #REQUIRED
	useFor (salary | varpay) #REQUIRED
	displayOrder CDATA #REQUIRED
	backgroundColor CDATA #REQUIRED
>

<!ELEMENT comp-field-number-format-id (#PCDATA)>

<!--
comp-custom-field-money-format element determines which money format type will be used to format money type custom field.

rateType: Indicates whether to use user's rate type to lookup number format or ANNUAL rate type when formatting 
    money type custom field. When the custom field is defined as rate type field similar to curSalary, merit, then userRateType should
    be used in the definition. When the custom field is defined similar to annual type of field like lumpsum, then alwaysAnnual type should be used.
-->
<!ELEMENT comp-custom-field-money-format EMPTY>
<!ATTLIST comp-custom-field-money-format 
  rateType (userRateType|alwaysAnnual) "userRateType"
>

<!--
  comp-custom-field-formula: Text is free formed text following the specified syntax. The text should be escaped. 
    The input of the formula should come from the standard compensation fields and other custom fields. 
    
  The other custom fields must either be user imported or user input from UI or other calculated custom fields.  
  
  Syntax for the formula:
    Formula := <item>
    Item := <number_literal> | <String-literal> | <field> | <function> | (<item>) | <item> <op> <item>
    Function := lookup (<string_literal> , <inputfields>) |
                lookup (<string_literal> , <inputfields>, <number-literal>) |
                toNumber(<item>) |
                toString(<item>) |
                if(<item>, <item>, <item>) |
                toDate(<item>, <item>) |
                dateDiff(<item>, <item>) |
                round(<rounding-mode>, <item>);
    Field := <std-field-id> | <custom-field-id> 
    input_fields := <field>|<string_literal>(,<field>|<string_literal>)1-4
    Std-field-id := curSal|promo|merit|...
    Custom-field-id := (a-z)+([A-z|0-9])*
    String-literal := "any string" | 'any string' // any alpha numerical string quoted or single quoted.
    Number-literal := [0-9]*(.[0-9]*)
    Op := add | subtract| multiply | divide | mod | and | or | not | less | greater | lessequal | greaterequal | equal| notequal |
    add := +
    subtract := -
    multiply := *
    divide := /
    mod := %
    and :=&&
    or := ||
    not := !
    less := <
    greater := >
    lessequal := <=
    greaterequal := >=
    equal := =
    notequal := !=
    rounding-mode := 'up' |'down' | 'halfUp'
  
  For function details:
  lookup('lookup_table_name', key1...key5, outputIndex) : must have a string_literal as the first argument to indicate
              the lookup table name, the lookup keys must be of string type, outputIndex is an integer from 1 to 5.
              lookup function always returns a string. In order to use it in a numeric operation, you need to wrap it with toNumber.
  toNumber(string_value): convert a number string to number, if the string is not a number string, formula evaluation will fail
  toString(number_value): converts a number to string
  if(cond, value1, value2): cond can be any expression that evaluates to true/false boolean value, value1 and value2 can be off String/Number/Date, 
        but they must be of the same type.
  toDate(string_value, date_format): converts a date string based on the format to a date object. date_format can be a string literal like (MM/dd/yyyy) or variable. 
  dateDiff(date1, date2): returns number of days that are different, the fraction of day is discarded.
  Note: date operation should always use date functions, do not directly operate on other operators. 
  round('up'|'down'|'halfUp', value): it will round the value to nearest integer value based on the rounding mode.  The following table illustrate how different mode works
  
  Result of rounding input to one digit with the given rounding mode
	Input Number 	UP 	DOWN  HALF_UP 	
	5.5           6 	5 	  6 	
	2.5           3 	2 	  3 	
	2.49          3   2     2
	1.6 	        2 	1 	  2 	
	1.1 	        2 	1 	  1 	
	1.0 	        1 	1 	  1 	
	-1.0 	        -1 	-1    -1 	
	-1.1 	        -2 	-1 	  -1 	
	-1.6 	        -2 	-1 	  -2 	
	-2.5 	        -3 	-2 	  -3
	-2.49 	      -3  -2    -2
	-5.5 	        -6 	-5    -6 
       
  Standard field id supported (it is a sub-set of standard fields listed above):
  For Salary Tab:
    jobTitle (String)                jobLevel (String)
    payGrade (String)                finPayGrade (String)
    prorating (Number)               pmRating (Number)
    compRating (Number)              curSalary (Number)
    curRatio (Number)                curRangePenetration (Number)
    jobFamily (String)               jobRole (String)
    jobCode (String)                 finalJobFamily (String)
    finalJobRole (String)            finalJobCode (String)
    promotion (Number)               merit (Number)
    extra (Number)                   extra2 (Number)
    raiseProrating (Number)          totalRaise (Number)
    finSalary (Number)               totalIncrease (Number)
    compaRatio (Number)              rangePenetration (Number)
    lumpSum (Number)                 lumpSumTarget (Number)
    lumpSum2 (Number)                lumpSum2Target (Number)
    totalLumpSum (Number)            totalComp (Number)
    salaryType (String)              unitsPerYear (Number)
    salaryRateFinal (Number)         localCurrencyCode (Number)
    promoNet (Number)                meritNet (Number)
    extraNet (Number)                extra2Net (Number)
    
    startDate (Date)                 
    salaryProratingStartDate (Date)  salaryProratingEndDate (Date)
    raiseProratingStartDate (Date)   raiseProratingEndDate (Date)
    promoDate (Date)                 meritDate (Date)
    extraDate (Date)                 extra2Date (Date)
    lumpsumDate (Date)               lumpsum2Date (Date)

  For Stock Tab:
  	jobLevel (String)
  	stockPmRating  (Number)
  	stockCompRating (Number)
  	stock (Number)
  	options (Number)
  	stockUnits (Number)
  	stockOther1 (Number)
  	stockOther2 (Number)
  	stockOther3 (Number)
  	
  	stockGrantDate (Date)


  For bonus tab:  
    bonusPmRating (Number)    
    bonusMultiplicativeAdjustment (Number)
    bonusAdjustment (Number)
    bonusTotal (Number)
    bonusTarget (Number)
    
                       
  Example: <comp-custom-field-formula> <![CDATA[ curSalary * (1 + curIncentiveTarget)]]></comp-custom-field-formula>
-->
<!ELEMENT comp-custom-field-formula (#PCDATA)>

<!--
The comp-ect-input-field-map is used to map data source for a compensation field to Employee Central (ECT) component and field
componentType: maps to a list of supported ECT component type
componentName: maps to an external code of the component. It is only needed when there is one to many mapping per component type, 
    otherwise the field is ignored. 
fieldName: We can use dot-connected properties to navigate to property of a FO/Picklist. e.g. "department.costCenter.parent.description"
stands for the description of parent cost center of the cost center associated with the department.
By default, if a filed refer to a FO (e.g. "department", "department.costCenter.parent"), FO external code will show up
in the comp form. 

Samples:
1. For fields that refers to Picklist, we can map like the following:
<comp-ect-input-field-map componentType="personalInfo" fieldName="native-preferred-lang"/>
<comp-ect-input-field-map componentType="personalInfo" fieldName="native-preferred-lang.code"/>
<comp-ect-input-field-map componentType="personalInfo" fieldName="native-preferred-lang.label"/>

By default (fieldName="native-preferred-lang"), picklist label will show up in the comp form. We can also explicitly
specify the attributes of picklist option, like native-preferred-lang.code and native-preferred-lang.label

2. For fields that refers to FOs, we can map like the following:
<comp-ect-input-field-map componentType="jobInfo" fieldName="department">
<comp-ect-input-field-map componentType="jobInfo" fieldName="department.costCenter.parent">
<comp-ect-input-field-map componentType="jobInfo" fieldName="department.costCenter.parent.name">
<comp-ect-input-field-map componentType="jobInfo" fieldName="department.costCenter.parent.description"/>


-->
<!ELEMENT comp-ect-input-field-map EMPTY>
<!ATTLIST comp-ect-input-field-map
  componentType (jobInfo|compensationInfo|nameInfo|recurringPayComponent|nonRecurringPayComponent|personalInfo|employmentInfo)  #REQUIRED
  componentName CDATA #IMPLIED
  fieldName CDATA #IMPLIED
>

<!--  comp-ect-output-field-map is obsolate and replaced by comp-ect-output-component
The comp-ect-output-field-map is used to map which employee central component 
and field to update the compensation data to. Currently only recurring and 
non-recurring pay components are supported.
componentType: maps to a list of supported ECT component type
componentName: maps to an external code of the component. It is only needed 
    when there is one to many mapping per component type.
-->
<!ELEMENT comp-ect-output-field-map EMPTY>
<!ATTLIST comp-ect-output-field-map
  componentType (recurringPayComponent|nonRecurringPayComponent) #REQUIRED
  componentName CDATA #IMPLIED
  fieldName CDATA #IMPLIED
>

<!-- The comp-ect-output-component is used to group ect fields.
Each grouping can be setup as componentType + componentName + effectiveDate as one unique component
Each grouping contains a list of comp field and hris element field mapping.
comp-field-id : salary/bonus standard/custom field
hris-field-id :
  recurring component: all valid values in http://confluence.successfactors.com/display/PRODINFO/EC+Config+Guide+-+Employee+Data
    for example paycompvalue, start-date, currency-code, frequency, custom-string[1-20], custom-long[1-20], custom-double[1-20], custom-date[1-10]
    except pay-component-code, pay-component-type, tax-treatment
  non-recurring component: all valid values in http://confluence.successfactors.com/display/PRODINFO/EC+Config+Guide+-+Employee+Data
    for example value, pat-date, paycompvalue, custom-string[1-20], custom-long[1-20], custom-double[1-20], custom-date[1-10]
    except pay-component-code, pay-component-type, tax-treatment

  validation:
    * validate the following configuration for ECT data publishing:
    * validate ect is enabled
    * validate component name is required for non-recurring component
    * validate effective date is required for recuring/non-recurring component
    * validate component name is valid if available 
    * validate event reason is required and valid for recurring component 
    * validate component name can't duplicated for recurring component
    * validate both comp field and hris field are valid
    * validate both comp field and hris field are not duplicated
        
    obsolate : recordTemplateIdInHrisField and recordFormIdInHrisField
               These two fields are using EC custom fields and they are replaced 
               with standard field of form_id and template of the component
    
-->
<!ELEMENT comp-ect-output-component (comp-hris-field-map+)>
<!ATTLIST comp-ect-output-component
 componentType (recurringPayComponent|nonRecurringPayComponent) #REQUIRED
 componentName CDATA #IMPLIED
 eventReason CDATA #IMPLIED
 effectiveDate CDATA #IMPLIED
 recordTemplateIdInHrisField CDATA #IMPLIED
 recordFormIdInHrisField CDATA #IMPLIED
>

<!ELEMENT comp-hris-field-map (comp-field-id, hris-field-id)>
<!ELEMENT comp-field-id (#PCDATA)>
<!ELEMENT hris-field-id (#PCDATA)>



<!--  
-->
<!ELEMENT comp-ect-history-config (comp-ect-history-view)>
<!ATTLIST comp-ect-history-config
  displayOn (salary|bonus|stock) #REQUIRED
  startDate CDATA #REQUIRED
  endDate CDATA #REQUIRED
>

<!ELEMENT comp-ect-history-view (comp-field-label*, comp-ect-history-presentation, comp-ect-history-field+)>
<!ATTLIST comp-ect-history-view
  type (totalCompensation) "totalCompensation"
  frequency (annual) "annual" 
>

<!ELEMENT comp-ect-history-presentation (individual|summary)+>
<!ELEMENT individual ANY>
<!ELEMENT summary ANY>

<!ELEMENT comp-ect-history-field (comp-ect-history-field-id, comp-field-label+)>
<!ELEMENT comp-ect-history-field-id (#PCDATA)>

<!--
The element comp-group is used for SAP/compensation integration. The group ID is used to group fields in users_info
table together. Technically, key of compensation data imported from SAP through compensation API will be group ID +
"_" + field ID. For example, 2012_curSalary. This is a work around due to lack of effective dated compensation data.
In this way, different compensation template of different year can use compensation data from different group.
-->
<!ELEMENT comp-group EMPTY>
<!ATTLIST comp-group
  id CDATA #REQUIRED
>

<!--
The comp-budget-label is used to rename the budgets that are specified in the template.
the budgetOn value should be exactly the same as the budgeOn on the configuration that is to be labeled.
You can have multiple "comp-field-label" elements for different lang where lang represent the language pack
backgroundColor: optional, to control background color of header row in the budget grid, by default #A5A6AA (grey),
     its value must be a RGB color code in hexadecimal like 278AB9,
     You can choose any color in RGB, but the following are verified sample colors you may choose:
       A8BDCE, ED9C00, B795FF, B4BE35, 63CBC6, EAA299, 9ABDF1, FF0000, EBC469
eg.
<comp-budget-label budgetOn="extra" backgroundColor="278AB9">
        <comp-field-label lang="fr"><![CDATA[extra/Adjustment]]></comp-field-label>
</comp-budget-label

-->
<!ELEMENT comp-budget-label (comp-field-label+)>
<!ATTLIST comp-budget-label
	budgetOn CDATA #REQUIRED
	backgroundColor CDATA #IMPLIED
>

<!--enable to view budget in different grouping based on groupBy
    the initial implementation is for BMC to group budget by local currency code
    and display the budget based on user's currency
    budget group by supported field:
      1. no budget group by
      2. limited standard salary field:localCurrencyCode 
      3. custom field: use for salary and string type and readonly and reportable.
      
    budget group can be 
      1. single field localCurrencyCode
      2. combine fields localCurrencyCode+customField (order will be followed based on the fields order specified)
      3. two custom fields
      4. limit to 2 fields the most
     
    label : how groupBy column label is shown, it is the same or subset of groupBy. Default is groupyBy value 
      For example : groupByField1 or groupByField2 or groupByField1+groupByField2
    showTotalBudget : default is show budget total column
    
    Note: Display budget in local currency only if groupBy has localCurrencyCode and in employee local currency view
     
 -->
<!ELEMENT comp-budget-grouping EMPTY>
<!ATTLIST comp-budget-grouping
     groupBy CDATA #REQUIRED
     label CDATA #IMPLIED 
	   showTotalBudget (true | false) "true"
>

<!ELEMENT comp-budget-override EMPTY>
<!ATTLIST comp-budget-override
	   override (true | false) "false"
>

<!--
comp-plan-creation element is used during the mass create event
for comp plans.
rollupUsers: 0 - DEFAULT: no special handling
             1 - roll up users (or callopse) based on user directory
                  field setting. If the user directory
                  field COMPENSATION_PLANNER_<template_id> is set to true,
                  then user is a planner; otherwise, all others are rolled up
                  to the highest and nearest planner. By default, the
                  user's COMPENSATION_PLANNER_<template_id> is false.
             2 - roll users up (i.e., callopse) when manager has no
                  cascaded budget. This is the case where the manager's
                  manager did not cascaded any budgets to the manager (or
                  the admin didn't cascade the budget to the manager). NOTE:
                  a cascaded budget of zero is a valid cascaded budget
                  and the manager's direct reports will not be rolled up
                  to the higher level manager.
             3 - Both 2 and 1 scenarios.
-->
<!ELEMENT comp-plan-creation EMPTY>
<!ATTLIST comp-plan-creation
	rollup-users (0 | 1 | 2 | 3) "0"
>
<!-- 1 = generic manager hierarchy with active users only -->
<!-- 2 = second manager hierarchy with active users only -->
<!-- 3 = generic manager hierarchy with active and inactive users.  --> 
<!-- 4 = second manager hierarchy with active and inactive users. --> 
<!-- MANAGER would be user's manager, COMP_MANAGER is user's second manager -->
<!ELEMENT comp-manager-hierarchy EMPTY>
<!ATTLIST comp-manager-hierarchy
	type (1 | 2 | 3 | 4) "1"
>
<!-- The element comp-field-definition is a place where we define a field, we can define:
     1. customized label
     2. ... (later number format, round up?)
-->
<!ELEMENT comp-field-label (#PCDATA)>
<!ATTLIST comp-field-label
	lang CDATA #IMPLIED
>

<!-- The element comp-field-value-enum is to define a set of possible values for s custom field:
isDefault: optional, at most one default value is allowed for one custom field. When form is created,
           the default value will be set to the field if no value is imported
-->
<!ELEMENT comp-field-value-enum (#PCDATA)>
<!ATTLIST comp-field-value-enum
	isDefault (true | false) #IMPLIED
>
<!-- The element comp-pay-matrix contains pay matrix(a.k.a pay guide list) information
In comp-pay-matrix, you can:
either 1. reference a pay matrix by its name, the pay matrix must be already defined through admin UI, its data will fetched from DB on the fly
or 2. define a self-contained list of pay guide here in this template (We do not support attributes for self-contained pay guide). Embedded comp-pay-guide 
is not a recommended configuration, it is only for backward compatibility.

In comp-pay-matrix, user can specify up to 3 comp-pay-matrix-attributes. Each attribute must be mapped to a custom field, and custom field definition must be defined 
in the template. When it is configured, it means that the user's custom field value will be used to match comp-pay-guide. Mapping to a standard field is not supported. 
Incorrect attribute mapping will result in failure in looking up pay-guide. No pay-guide found will cause pay-guide related fields like compa-ratio, range-penetration 
be marked as N/A. In case of multiple matches, the first match will be considered in the order of the appearance in pay matrix.

comp-pay-matrix-effective-date element indicates the pay matrix is effective dated and will be loaded from ECT based on the effective date

For example:
<comp-pay-matrix>
  <comp-pay-matrix-name>comp_payguide</comp-pay-matrix-name>
    <comp-pay-matrix-attribute>custom_field_id1</comp-pay-matrix-attribute>
    <comp-pay-matrix-attribute>custom_field_id2</comp-pay-matrix-attribute>
  <comp-pay-matrix-attribute>custom_field_id3</comp-pay-matrix-attribute>
</comp-pay-matrix>
-->
<!ELEMENT comp-pay-matrix ((comp-pay-matrix-name, (comp-pay-matrix-attribute, (comp-pay-matrix-attribute, comp-pay-matrix-attribute?)?)?) | comp-pay-guide+ | 
                (comp-pay-matrix-effective-date, (comp-pay-matrix-attribute, (comp-pay-matrix-attribute, comp-pay-matrix-attribute?)?)?) ) >
<!ELEMENT comp-pay-matrix-name (#PCDATA)>
<!ELEMENT comp-pay-matrix-attribute (#PCDATA)>
<!ELEMENT comp-pay-matrix-effective-date (#PCDATA)>
<!ELEMENT comp-pay-guide (comp-pay-guide-payGrade, comp-pay-guide-minPay, comp-pay-guide-midPay, comp-pay-guide-maxPay)>
<!ELEMENT comp-pay-guide-payGrade (#PCDATA)>
<!ELEMENT comp-pay-guide-minPay (#PCDATA)>
<!ELEMENT comp-pay-guide-midPay (#PCDATA)>
<!ELEMENT comp-pay-guide-maxPay (#PCDATA)>

<!-- The element comp-currency-conv-table contains currency conversion rate table
In comp-currency-conv-table, you can:
either 1. reference a currency convesion table by its name, the conversion table must be already defined through admin UI, its data will fetched from DB(SYS_CONFIG table) on the fly
or 2. define a self-contained conversion table with a list of conversion rates in the template;
-->
<!ELEMENT comp-currency-conv-table (comp-currency-conv-table-name | comp-currency-conv+)>
<!ELEMENT comp-currency-conv-table-name (#PCDATA)>
<!ELEMENT comp-currency-conv (comp-currency-conv-from, comp-currency-conv-into, comp-currency-conv-rate)>
<!ELEMENT comp-currency-conv-from (#PCDATA)>
<!ELEMENT comp-currency-conv-into (#PCDATA)>
<!ELEMENT comp-currency-conv-rate (#PCDATA)>
<!ELEMENT comp-stock-value-table (comp-stock-value-table-name)>
<!ELEMENT comp-stock-value-table-name (#PCDATA)>
<!-- The element comp-stock-participation-guideline is used to configure a lookup table for looking up participation level.
     Element comp-stock-participation-guideline-name defines lookup table name.
     Element comp-stock-participation-guideline-key defines the keys used to look up participation level in lookup table.
     You can define multiple keys.
-->
<!ELEMENT comp-stock-participation-guideline (comp-stock-participation-guideline-name, comp-stock-participation-guideline-key+)>
<!ELEMENT comp-stock-participation-guideline-name (#PCDATA)>
<!ELEMENT comp-stock-participation-guideline-key (#PCDATA)>
<!ELEMENT comp-rule-ref EMPTY>
<!ATTLIST comp-rule-ref
	ruleName CDATA #REQUIRED
>
<!-- The element comp-rule-ref references a comp rule that is defined by comp admin and stored in relational table
     The attribute "ruleName" specifies the name of the comp rule to be referenced, e.g. <comp-rule-ref ruleName="merit rule" />
-->
<!ELEMENT comp-rule (comp-rule-id?, comp-rule-name?, comp-rule-prorating?, comp-rule-prorating-unit?, comp-rule-hardlimit?, comp-rule-minMaxLimit?, comp-rule-allowZero?, comp-rule-base-field-id?, comp-rule-apply?, comp-formula+, comp-rule-notes?)>
<!--
The attribute useFor must be either one of (promo | merit | extra | extra2 | lumpsum | lumpsum2 |bonus | stock | option | stockUnits | stockOther1 | stockOther2 | stockOther3 | varpay | varpay_team),
      or a combination of (promo | merit | extra | extra2 | lumpsum) such as merit+lumpsum, see more detail below for the usage of combined comp rules.

Now you can define a comp rule for a combination of salary fields, such as <comp-rule useFor="merit+lumpsum" benchmark="compa-ratio">, the combined comp rule will work in a similar way like the single field comp rule (like useFor="merit") but apply to the combined total of the composing fields. Although the feature is originated for merit+lumpsum, it will work for any combination of salary fields, not limited to just two fields, can be promo+merit+extra for example.

1. The percentage base for the combined total is always current salary
2. How does the default allocation work for combined combine rule in form creation?
   a) The default amount will always go to the first field, for example,  when useFor="merit+lumpsum", the default amount will all go to merit when create comp form;  
   b) If the template contains both single-field comp rule and combined comp rule, when allocate default amount, we'll apply single-field comp rule first, 
        and proceed to apply the combined comp rule ONLY IF if there's no matched formula in the single-field comp rule for the user.
3. How does the combined rule work with single-field comp rule in form UI if both apply to the user?
    Depends on whether they are soft/hard limits. We'll always process (comp-salary-rule and) single-field comp rule first, and then proceed to handle combined rule ONLY IF there's no hard-limit violation found against single-field comp rule. 
4. Combined rule violation message will be look like below(in US locale): 
         The combined total 2.06 (5.24%) is above the maximum specified by the guideline 1.57 (4.00%). The combined total comes from the entries:
             Merit: 0.88 (2.24%)
             Lump Sum: 2,358.00 (rate of 1.18) (3.00%)
      Note: The "rate of ..." part is conditional, only applicable to lumpsum for non-annual rate type
5. The violations of combined rule will be flagged as well in Executive Review
6. The attribute forceDefaultOnRatingChange doesn't apply to combined rule
7. For now, we only support percentage-based compbined rule, we don't support amount-based combined comp rule(which we believe rare). That's to say, its comp-formula should all have "true" in comp-formula-usePercent, "false" in comp-formula-useAmount

The attribute "benchmark" specifies which comparison approach to use: compa-ratio or range-penetration
-->
<!ATTLIST comp-rule
	useFor CDATA #REQUIRED
	useRatingAsPercentage (true | false) "false"
	benchmark (compa-ratio | range-penetration) "compa-ratio"
	highLowAction (allow | warn) "allow"
>
<!ELEMENT comp-rule-id (#PCDATA)>
<!ELEMENT comp-rule-name (#PCDATA)>
<!ELEMENT comp-rule-prorating (#PCDATA)>
<!ELEMENT comp-rule-prorating-unit (#PCDATA)>
<!ELEMENT comp-rule-hardlimit (#PCDATA)>
<!-- 
  Currently used only in Variable Pay.  The valid numbers are
  0 - no guideline enforcement on min or max
  1 - enforcement on min
  2 - enforcement on max
  3 - enforcement on both min and max
-->
<!ELEMENT comp-rule-minMaxLimit (#PCDATA)>
<!ELEMENT comp-rule-allowZero (#PCDATA)>
<!--
comp-rule-base-field-id should be the id of a compensation custom field defined in the same comp template, like <comp-field-definition id="stockBase" isCustomField="true" ???>. 
The feature comp-rule-base-field-id is currently only implemented for the stock field in stock page. 
-->
<!ELEMENT comp-rule-base-field-id (#PCDATA)>
<!ELEMENT comp-rule-apply (#PCDATA)>
<!ATTLIST comp-rule-apply
	forceDefaultOnRatingChange (true | false) "false"
>
<!ELEMENT comp-rule-notes (#PCDATA)>
<!ELEMENT comp-formula (comp-formula-id?, comp-formula-name?, comp-formula-jobLevel?, comp-formula-payGrade?, comp-formula-budgetGrpName?, comp-formula-ratingFrom?, comp-formula-ratingTo?, comp-formula-ratioFrom?, comp-formula-ratioTo?, comp-formula-maxPercent, comp-formula-minPercent, comp-formula-highPercent?, comp-formula-lowPercent?, comp-formula-defPercent, comp-formula-usePercent, comp-formula-maxAmount, comp-formula-minAmount, comp-formula-highAmount?, comp-formula-lowAmount?, comp-formula-defAmount, comp-formula-useAmount, comp-formula-notes?)>
<!ELEMENT comp-formula-id (#PCDATA)>
<!ELEMENT comp-formula-name (#PCDATA)>
<!ELEMENT comp-formula-jobLevel (#PCDATA)>
<!ELEMENT comp-formula-payGrade (#PCDATA)>
<!ELEMENT comp-formula-budgetGrpName (#PCDATA)>
<!ELEMENT comp-formula-ratingFrom (#PCDATA)>
<!ATTLIST comp-formula-ratingFrom
	inclusive (true | false) "true"
>
<!ELEMENT comp-formula-ratingTo (#PCDATA)>
<!ATTLIST comp-formula-ratingTo
	inclusive (true | false) "true"
>
<!ELEMENT comp-formula-ratioFrom (#PCDATA)>
<!ATTLIST comp-formula-ratioFrom
	inclusive (true | false) "true"
>
<!ELEMENT comp-formula-ratioTo (#PCDATA)>
<!ATTLIST comp-formula-ratioTo
	inclusive (true | false) "true"
>
<!ELEMENT comp-formula-maxPercent (#PCDATA)>
<!ELEMENT comp-formula-minPercent (#PCDATA)>
<!ELEMENT comp-formula-highPercent (#PCDATA)>
<!ELEMENT comp-formula-lowPercent (#PCDATA)>
<!ELEMENT comp-formula-defPercent (#PCDATA)>
<!ELEMENT comp-formula-usePercent (#PCDATA)>
<!ELEMENT comp-formula-maxAmount (#PCDATA)>
<!ELEMENT comp-formula-minAmount (#PCDATA)>
<!ELEMENT comp-formula-highAmount (#PCDATA)>
<!ELEMENT comp-formula-lowAmount (#PCDATA)>
<!ELEMENT comp-formula-defAmount (#PCDATA)>
<!ELEMENT comp-formula-useAmount (#PCDATA)>
<!ELEMENT comp-formula-notes (#PCDATA)>
<!ELEMENT comp-formula-allowZero (#PCDATA)>
<!ATTLIST comp-formula-allowZero
	inclusive (true | false) "true"
>
<!--
The element comp-budget-rule contains information about how to handle the case allocation exceeding budget:
if allowExceed="allow", save is allowed and no warning message will be shown
if allowExceed="warn", save is allowed but a warning message will be shown and confirmation is needed before data is saved
if allowExceed="disallow", save is disallowed and a warning message will be shown
if allowSaveOnExceed="true", everything is allowed except routing to next step in case of hard violation because allowExceed="disallow"
e.g  <comp-budget-rule useFor="all" allowExceed="warn">
       <budget-exceed-warn-message>Allocation total exceeds budget, do you want to save?</budget-exceed-warn-message>
     </comp-budget-rule>
-->
<!ELEMENT comp-budget-rule (budget-exceed-warn-message*)>
<!ATTLIST comp-budget-rule
	useFor (salary | bonus | stock | varpay | all) #REQUIRED
	budgetOn CDATA #IMPLIED
	allowExceed (allow | warn | disallow) "warn"
	allowSaveOnExceed (true | false) "false"
>
<!ELEMENT budget-exceed-warn-message (#PCDATA)>
<!ATTLIST budget-exceed-warn-message
	lang CDATA #IMPLIED
>
<!--
The element comp-salary-rule is optional.  When specified it controls threshold limits on the
Final Salary and Final Compensation (aka Final Pay).  

Final Salary = Current Salary + Promotion + Merit + Adjustment + Adjustment2.
Final Compensation = Final Salary + Lump Sum.

The Final Salary and Final Compensation are controlled by setting a percentage limit on either the compa-ratio 
or range penetration calculation in a compensation plan.  Compa-Ratio and Range Penetration percentages are
calculated based on total salary, where Total Salary = Current Salary + Promotion + Merit + Adjustment + Adjustment2.

Element descriptions:
  comp-salary-rule-threshold - a number to specify the percentage limit.  For example "100" means 100%.
  message-on-exceed - A localized error message to display when the threshold is exceeded. We
               determine the locale from the "lang" attribute of the message-on-exceed element.
 message-on-below - A localized error message to display when the threshold is not met. We
               determine the locale from the "lang" attribute of the message-on-exceed element.

Attribute descriptions:
  useFor - specifies whether salary rule is used for merit or lumpsum, default is merit.
           - For merit, if the promotion, adjustment and adjustment2 fields are 0, and the newly entered merit 
           amount/percentage will cause either the compa-ratio or range-penetration to exceed the thresold, 
           then perform the action specified by the actionOnExceed attribute.  
           - For lumpsum, if a user tries to enter a new value for lumpsum, and the promotion, adjustment 
           and adjustment2 fields are 0 and we have NOT exceed the thresold for compa-ratio or 
           range-penetration, then perform the action specified by the actionOnExceed attribute. 
           
  benchmark - specifies to which benchmark we are applying the limit. Valid valids include:
    "compa-ratio" - Applies threshold rule to compa-ratio based calculation.
    "range-penetration" - Applies threshold rule to range-penetration based calculation.

 actionOnBelow - specifies what behavior in the UI to activate when a threshold is not met
    Valid values for actionOnBelow are: (only warn and disallow) is applicable. Also actionOnBelow is
    valid only for useFor="merit"

 actionOnExceed - specifies what behavior in the UI to activate when a threshold is exceeded.
    Valid values for actionOnExceed are:

    "disallow" - A hard guidline where a warning window is presented to the user and they
                 cannot proceed until they go back and change a number affecting the calculation.
    "splitOrWarn" - Only valid for useFor="merit", not valid for useFor="lumpsum".
                 If the threshold is exceeded, prompt the user whether to assign the exceeded
                 amount to lump sum using a yes/no dialog.  If yes then the amount is split between
                 merit and lump sum to reduce the threshold to the maximum allowable. If no, then
                 the user is "warned" by setting the merit $$ and the benchmark field with red
                 text and allow user to save.
    "splitOrDisallow" - Only valid for useFor="merit", not valid for useFor="lumpsum".
                 If the threshold is exceeded, prompt the user whether to assign the exceeded
                 amount to lump sum using a yes/no dialog.  If yes then the amount is split between
                 merit and lump sum to reduce the threshold to the maximum allowable. If no, then
                 the user is "warned" by setting the merit $$ and the benchmark field with a red
                 background and prevent user from saving.  Send focus to the merit input field.
    "warn" - Pop up a dialog warning the user that the threshold has been exceeded, and set the
                 merit $$ and % field with a red text.  Allow the user to save.

NOTE:  We have decided that if either the "promotion" or "adjustment" cells contain any entry,
or if the current starting salary is already above the threshold, then the entire comp-salary-rule
is ignored.  Note that if we start with a "promotion"  or "adjustment" entry, and later reduce this
value to zero, then the rule will come back into effect.

SPECIAL NOTE: "actionOnExceed" for the "lumpsum" rule should really be called "actionOnBelow", the rule is 
triggered when the threshold is below the configured threshold. For the historic and backward-compatibility 
reason, we leave it as is.

Example entry:

<comp-salary-rule useFor="merit" benchmark="compa-ratio" actionOnExceed="warn">
  <comp-salary-rule-threshold>110</comp-salary-rule-threshold>
  <message-on-exceed>You have exceeded the threshold rule of 110 percent for Compa-Ratio.  Do you want the excess to be applied towards lump sum?</message-on-exceed>
</comp-salary-rule>

<comp-salary-rule useFor="lumpsum" benchmark="range-penetration" actionOnExceed="disallow">
  <comp-salary-rule-threshold>90</comp-salary-rule-threshold>
  <message-on-exceed>Lump Sum is disallowed.  You did not exceeded the threshold rule of 90 percent for Range Penetration.</message-on-exceed>
</comp-salary-rule>
-->
<!ELEMENT comp-salary-rule (comp-salary-rule-threshold, (message-on-exceed+ | message-on-below+))>
<!ATTLIST comp-salary-rule
	useFor (merit | lumpsum | lumpsum2 | extra) "merit"
	benchmark (compa-ratio | range-penetration) "compa-ratio"
	actionOnExceed (disallow | splitOrWarn | splitOrDisallow | warn) #IMPLIED
	actionOnBelow (disallow | warn) #IMPLIED
>
<!-- A number to specify the percentage limit.  For example "100" means 100%. Do not include
the percent sign. -->
<!ELEMENT comp-salary-rule-threshold (#PCDATA)>
<!ELEMENT message-on-exceed (#PCDATA)>
<!ATTLIST message-on-exceed
	lang CDATA #IMPLIED
>
<!ELEMENT message-on-below (#PCDATA)>
<!ATTLIST message-on-below
	lang CDATA #IMPLIED
>
<!--
The element comp-force-comment-config is optional. When specified in template it controls whether users must
input comment for the follwoing modes:
  a) An employee is not given a raise. That means managers did not input any value in one of the fields 
     configured with force comment.
  b) An employee is given a raise. That means managers inputted a value in one of the fields configured 
     with force comment.
  c) An employee is given a raise violated guidelines. That means managers inputted a value violated 
     guidelines in one of the fields configured with force comment.
     
Attribute descriptions:
  useFor - indicates which tab on compensation form page can enable force comment feature.
  mode - indicates when to apply force comment feature. It is one of the above three modes.
  fieldId - fieldId indicates which field should enable force comment feature.
  
Example:
<comp-force-comment-config useFor="salary" mode="raise" fieldId="merit"/>
-->
<!ELEMENT comp-force-comment-config EMPTY>
<!ATTLIST comp-force-comment-config
    useFor (salary | stock | varpay) #REQUIRED
    mode (no-raise | raise | guideline) #REQUIRED
    fieldId (promotion | merit | extra | extra2 | lumpSum | lumpSum2 | stock | options | stockUnits | stockOther1 | stockOther2 | stockOther3 | performancePercent | totalTeamPercent | totalFinalPayout) #REQUIRED
>
<!--
comp-rating-source element contains infomation to identify a data source where we collect rating
data for compensation review
-->
<!ELEMENT comp-rating-source (abr-form-config?, comp-p4p-sect*)>
<!--
If the optional attribute importKey is given(default no), PM rating will be imported from user info with the given key
the attribute scaleId is used to find scale list that will be used to map numeric rating into text
the attribute scaleId is useful only if PM rating is imported (importKey is given) and showFormRatingAs="text" (or "number-text")
import-from-assignment-history:
  user's perf rating from employee history backgroun in addition to pm form or user import
  this is for variable pay only. false is default and true only when is set by admin-varpay-set bonus calculation page.
IMPORTANT: When importKey is used, please make sure to set form-id="0"
WHAT DOES use-calculated-rating MEAN????????????  WHAT DOES use-calculated-rating MEAN????????????

ratingType is to specify what type of rating will be pulled from PM form to comp form, it can be one of the following:
  overallCompetency (the overall competency rating in objcomp-summary-section)
  overallObjective  (the overall objective rating in objcomp-summary-sect)
  overallPerformance  (the overall performance rating in perfpot-summary-sect)
  overallPotential    (the overall potential rating in perfpot-summary-sect)
 Please note that this attribute is applicable only when use-calculated-rating is "false", otherwise ignored

Attribute overrideSectionRatingNormalization is used to override normalize-section-rating setting of a PM section.
If it is set to true, then p4p section item rating normalization will be turned off in compensation module. If it is
set to false, then we will respect normalize-section-rating setting in PM section. Default value is false.
-->
<!ATTLIST comp-rating-source
	form-id CDATA #REQUIRED
	is-default (true | false) #IMPLIED
	useFor (salary | bonus | stock | varpay | varpay_team | all) "all"
	completed-only (true | false) "true"
	use-calculated-rating (true | false) "false"
	import-from-assignment (true | false) "false"
	importKey CDATA #IMPLIED
	scaleId CDATA #IMPLIED
	ratingType (overallCompetency | overallObjective | overallPerformance | overallPotential) #IMPLIED
	overrideSectionRatingNormalization (true | false) "false"
>

<!ELEMENT abr-form-config EMPTY>
<!ATTLIST abr-form-config
  type ( goal | position | summary) "goal"
  updateAssignmentFromPM (true | false) "false"
  pmform-matching-rule (startDate | endDate | startAndEndDate | startOrEndDate | overlap) "startDate"
>

<!ELEMENT comp-p4p-sect (comp-p4p-sect-index, comp-p4p-sect-name?, comp-p4p-sect-label*, comp-p4p-sect-name-column-label*, comp-p4p-sect-type, (comp-p4p-sect-weight-lookup-tbl | comp-p4p-sect-weight), comp-p4p-det*)>
<!-- ignoreUnratedWeightinPay means that we ignore the weight for the unrated objective, and recalibrate the rest of the rated
 objectives' weight to equal 100% and use the recalibrated weights in calcuting the payouts for bonus -->
<!ATTLIST comp-p4p-sect
	sectWeightEditable (true | false) "true"
	detWeightEditable (true | false) "true"
	achievementEditable (true | false) "true"
	achievement2Editable (true | false) "true"
	usePercentDoneAsRating (true | false) "false"
	ignoreUnratedWeightinPay (true | false) "false"
>
<!--
The attribute usePercentDoneAsRating indicates if we want to use TGM goal's percent complete as rating, it should only appy to PM form's TGM goal section.
-->
<!--
comp-obj-sect-label element specifies what label to be used for objective section
e.g User can set lebel of individual objectives section to "Personal Goals"
If it's absent, system default label will be applied
-->
<!ELEMENT comp-p4p-sect-index (#PCDATA)>
<!ELEMENT comp-p4p-sect-name (#PCDATA)>
<!ATTLIST comp-p4p-sect-name
	lang CDATA #IMPLIED
>
<!ELEMENT comp-p4p-sect-label (#PCDATA)>
<!ATTLIST comp-p4p-sect-label
	lang CDATA #IMPLIED
>
<!ELEMENT comp-p4p-sect-name-column-label (#PCDATA)>
<!ATTLIST comp-p4p-sect-name-column-label
	lang CDATA #IMPLIED
>
<!--
comp-p4p-sect-type : Here are the only supported types:
    Individual
    Corporate
    Team
    Competency
-->
<!ELEMENT comp-p4p-sect-type (#PCDATA)>
<!ELEMENT comp-p4p-sect-weight-lookup-tbl (comp-p4p-sect-weight-lookup*)>
<!ATTLIST comp-p4p-sect-weight-lookup-tbl
	key CDATA #REQUIRED
	defWeight CDATA #IMPLIED
>
<!ELEMENT comp-p4p-sect-weight-lookup (#PCDATA)>
<!ATTLIST comp-p4p-sect-weight-lookup
	entry CDATA #REQUIRED
>
<!ELEMENT comp-p4p-sect-weight (#PCDATA)>
<!-- In comp-p4p-det, if comp-p4p-det-id is given and not -1, then we get objective info from objective date
  otherwise, we get objective name directly from here
-->
<!ELEMENT comp-p4p-det (comp-p4p-det-id?, comp-p4p-det-name?, comp-p4p-det-desc?, comp-p4p-det-rating, comp-p4p-det-rating-desc?, comp-p4p-det-weight)>
<!ELEMENT comp-p4p-det-id (#PCDATA)>
<!ELEMENT comp-p4p-det-name (#PCDATA)>
<!ELEMENT comp-p4p-det-desc (#PCDATA)>
<!ELEMENT comp-p4p-det-rating (#PCDATA)>
<!ELEMENT comp-p4p-det-rating-desc (#PCDATA)>
<!ELEMENT comp-p4p-det-weight (#PCDATA)>
<!--
In particular, some Pay-for-performance sections have common objectives and ratings for everybody,
such ratings need special handling because they typically won't come from form
e.g. for corporate performance, all employees have same corporate objectives and performance ratings,
     for team performance, all team members have common team objectives and performance ratings
The element comp-p4p-common lists information for common objectives and ratings

You are allowed to have multiple comp-p4p-sect or comp-p4p-common, along as the comp-p4p-sect-index in those comp-p4p-sect are unique negative values.
-->
<!ELEMENT comp-p4p-common (comp-p4p-sect+)>
<!--
The element comp-rating contains config information about how to input comp rating.
-->
<!ELEMENT comp-rating-input (#PCDATA)>
<!ATTLIST comp-rating-input
	mode (typein | dropdown) "typein"
	scaleId CDATA #IMPLIED
	disableIfPMRatingExist (true | false) "false"
>
<!--
The element comp-display contains information about how to display a plan, such as page size, layout, etc.
-->
<!ELEMENT comp-display (comp-page-size?, comp-guideline-pattern?, comp-payguide-pattern?, comp-stock-guideline-pattern?, comp-stock-share-info?, comp-ratio-display?, comp-benchmark-coloring*, comp-default-sort?)>
<!ATTLIST comp-display
	showRuleOnMouseOver (true | false) "true"
	showCurrencyCode (true|false) "false"
>
<!ELEMENT comp-page-size (#PCDATA)>
<!--
The element comp-guideline-pattern/comp-stock-guideline-pattern contains information about how to display  guideline,
you must use the reserved keywords "min", "max", "high", "low", "def" to describe the display pattern, "def" (meaning default)is for recommendation
e.g. if use pattern "min-max(def)", guideline will be displayed like $1,000-$2,000($1,500) or 1.0%-2.0%(1.5%)
-->
<!ELEMENT comp-guideline-pattern (#PCDATA)>
<!--
The element comp-payguide-pattern contains information about how to display Pay Guide information.
You must use the reserved keywords "min", "max" and "def" to describe the display pattern, "def" (meaning default)is for the mid-point
e.g. if use pattern "min-max(def)", guideline will be displayed like $1,000-$2,000($1,500) 
-->
<!ELEMENT comp-payguide-pattern (#PCDATA)>
<!-- guideline for stock page -->
<!ELEMENT comp-stock-guideline-pattern (#PCDATA)>
<!-- display the second column for stocks when stock value info exists-->
<!ELEMENT comp-stock-share-info (comp-stock-first-col-label, comp-stock-second-col-label)>
<!ELEMENT comp-stock-first-col-label (#PCDATA)>
<!ELEMENT comp-stock-second-col-label (#PCDATA)>
<!--
The element comp-ratio-display specifies how to show compa-ratio and range-penetration's color bar and value.
e.g. <comp-ratio-display showColorBar="false" numberFormat="percent" />
where the showColorBar attribute should be either "true" (default), or "false", indicating if we show the color bar.
 the numberFormat attribute should be either "percent" (default), or "number", indicating whether we show the ratio value
   as percent (like 56%) or number (like 0.56),
   a) if percent, the comp-number-format-ext with useFor="percent" will be used (by default #,##0.00)
   b) if number, a comp-number-format-ext with useFor="ratio-value" should be specified accordingly,
      the system default number format for ratio-value is #,##0.00.
-->
<!ELEMENT comp-ratio-display EMPTY>
<!ATTLIST comp-ratio-display
	showColorBar (true | false) "true"
	numberFormat (percent | number) "percent"
>
<!--
The element comp-benchmark-coloring contains information about how to color compra-ratio/range-penetration.
Prior to intriducing this configurability, previously we hardcoded the coloring scheme
e.g. If you want to show the comp-a ratio bar will mono-color black filled
<comp-benchmark-coloring benchmark="compa-ratio">
	<comp-benchmark-color color="black">
	</comp-benchmark-color>
</comp-benchmark-coloring>
-->
<!ELEMENT comp-benchmark-coloring (comp-benchmark-color+)>
<!ATTLIST comp-benchmark-coloring
	benchmark (compa-ratio | range-penetration) #REQUIRED
>
<!ELEMENT comp-benchmark-color (comp-benchmark-color-min-value?, comp-benchmark-color-max-value?)>
<!ATTLIST comp-benchmark-color
	color (black | green | lightgreen | orange | red | yellow) #REQUIRED
	label CDATA #IMPLIED
>
<!ELEMENT comp-benchmark-color-min-value (#PCDATA)>
<!ATTLIST comp-benchmark-color-min-value
	inclusive (true | false) "true"
>
<!ELEMENT comp-benchmark-color-max-value (#PCDATA)>
<!ATTLIST comp-benchmark-color-max-value
	inclusive (true | false) "true"
>
<!ELEMENT comp-default-sort (#PCDATA)>
<!ATTLIST comp-default-sort
	field CDATA #REQUIRED
	order (asc | desc) "asc"
>
<!--
The element comp-instruction contains instruction text about how to complete a plan, that will be shown in plan pages.
-->
<!ELEMENT comp-instruction (#PCDATA)>
<!ATTLIST comp-instruction
	lang CDATA #IMPLIED
	useFor (salary | bonus | stock | summary | all) "all"
>
<!--
The element comp-calculation contains information about how to calculate things in a comp plan, such as compa-ratio, proration, etc.
-->
<!ELEMENT comp-calculation (raise-prorating-calc?, compa-ratio-calc?, budget-calc*, lumpsum-calc?, lumpsum2-calc?, merit-calc?, stock-units-calc?, comp-compounding*, (budget-assignment-base-import-key | budget-assignment-base-custom-field)?, calc-formula-def?, final-pay-grade?, proration-calc*)>
<!-- The attribute lumpSumInSalaryBudget is deprecated and replaced by the attribute budgetOn in element budget-calc, PLEASE STOP USING IT!
The attributes "autoCalcBudgetForSalary", "autoCalcBudgetForBonus" and 
"autoCalcBudgetForStock" are used to specify whether budgets 
should be automatically calculated on plan. This is very 
useful in conjuction with Budget Cascading. For instance, 
the plan can be created before the budget is cascaded. 
The user will not see the budget in this newly created comp 
plan until the budget is cascaded. Once the budget is 
cascaded, then upon opening the comp plan, the newly 
cascaded amount shows up in the comp plan. Afterward, 
any changes to the cascaded budget will be reflected 
in the comp plan upon opening the comp plan.
open/save and member management (eg add member, 
delete member and move member). In the case of 
the member mangement the budget option will always 
be true and greyed out giving the user no option 
change if all three options are set to true.
fiscalYearEnd - [YYYY-MM-DD] This specifies the ending fiscal year for cash 
                flow calculations. For example, if the value is "2006-07-01" then
                if the effective date is "2006-01-01", the user will get half of the 
                amount (whether merit, lumpsum, or other salary).
-->
<!ATTLIST comp-calculation
	lumpSumInSalaryBudget (true | false) "false"
	fiscalYearEnd CDATA #IMPLIED
	autoCalcBudgetForSalary (true | false) "false"
	autoCalcBudgetForBonus (true | false) "false"
	autoCalcBudgetForStock (true | false) "false"
>
<!--
The element raise-prorating-calc is to specify how the raise amounts should be prorated. The attribute 'useFor' indicates which salray raise fields (merit, promotion, extra, extra2) should be prorated by the raiseProrating percentage. Default value would be 'promotion+merit+extra+extra2' for backwards compatibility. Possible value could be any combination of promo, merit, extra, extra2.
For example, you want to apply raiseProrating percentage to promotion and merit, but not extra, extra2, you can configure <raise-prorating-calc useFor="promotion+merit"/>
applyMultipleRounding will apply multiple-rounding (if applicable) on the result of raise-prorating calculation according to the proper money format.
-->
<!ELEMENT raise-prorating-calc EMPTY>
<!ATTLIST raise-prorating-calc
	useFor CDATA #REQUIRED
	applyMultipleRounding (true | false) "false"
>
<!ELEMENT compa-ratio-calc (#PCDATA)>
<!-- Note: for backward compatibility, onWhatAvg can be group or grade, but in reality, only grade is
implemented, so please only put grade here -->
<!ATTLIST compa-ratio-calc
	onWhatAvg (grade | group) "grade"
>
<!--
The element budget-calc contains information about how to calculate budgets:
If mode = 'PercentOfCurSal', element value should be a percentage such as 105, meaning budget=105% of current salary
If mode = 'PercentOfMeritTarget', element value should be a percentage such as 105, meaning budget=105% of merit target
If mode = 'PercentOfLumpsumTarget', element value should be a percentage such as 105, meaning budget=105% of lumpsum target
If mode = 'PercentOfLumpsum2Target', element value should be a percentage such as 105, meaning budget=105% of lumpsum2 target
If mode = 'DeltaOfCurSal', element value should be a positive or negative number such as 10000, meaning budget=current salary + 10000
If mode = 'DirectAmount', element value should be a number such as 500000, meaning budget=500000
If mode = 'Guideline' (currently applicable to salary/bonus/stockUnits/stock/option/stockOther1/stockOther2/stockOther3), the guideline in rule will be used for budget. When guideline mode is used, basedOn field is ignored.
If mode = 'PercentOfBonusTarget' (applicable to bonus): Bonus budget to be set as the total of the employee's individual bonus targets, and multiplied by a given factor (as specified inside the element tag).
If mode = 'PercentOfCustomField' (applicable only to salary, basedOn = 'user|template|group'): salary budget is based on percentage of a custom field. When in this mode, the custom field budget is 
          calculated on must be specified in baseCustomField. And when basedOn='user', the percentage must be imported through the import key specified by attribute importKey, 
If basedOn = 'user' (then the percentage will be taken from the usersInfo table (imported). PercentOfCurSal|PercentOfMeritTarget|PercentOfLumpsumTarget|PercentOfLumpsum2Target|DirectAmount|PercentOfBonusTarget|DeltaOfCurSal are supported for "user"
If basedOn = 'group' (then there is a group percentage that might have been created by admin or imported). Budget setting for group is defined in admin, we only one for budget group. 
If basedOn = 'template' (then the budget is taken from the template), PercentOfCurSal|PercentOfMeritTarget|PercentOfLumpsumTarget|PercentOfLumpsum2Target are supported for "template".
e.g  <budget-calc useFor="salary" mode="PercentOfCurSal" basedOn='template'>105</budget-calc>
budgetOn should take and combination of the following standard keys or a single custom field. The plus sign is used to represent addition/aggregation of the budgets.
merit
meritNet
finalSalary
totalComp
totalRaise
promotion
extra
extra2
lumpSum
lumpSum2
e.g budgetOn="merit + finalSalary + promotion" This means the budget created is a combination of merit, promotion and finalSalary.
or budgetOn="myCustomField". We do not support combined budgetOn fields mixed with custom field, as custom can always define a custom field with formula.
We do not support to have multiple budget-calc rules with the same budgetOn field,


The attribute prorating specifies whether we want to apply prorating when calculate budget, only applicable if mode="PercentOfCurSal" and basedOn is "user" or "template"

importKey attribute allows user to specify a different import key other than the standard. Currently, this importKey only applies
to "User" with mode "PercentOfCurSal | PercentOfMeritTarget | PercentOfLumpsumTarget |PercentOfLumpsum2Target |PercentOfCustomField". 
When importKey is missing and budgetOn is defined as combination of fields, the percentage is added up for each imported field;
When importKey is used and budgetOn is defined as combination of fields, the individual standard keys are ignored, the importKey is used for whole budgetOn field.
The importKey is required when using PercentOfCustomField and baseOn='user'.


includeIneligible attribute is set to true:
It applies to field(merit/promo/extra/extra2/lumpSum/lumpSum2/stock/units/option/other1/other2/other3) level except planner mode plus stock/bonus direct amount mode.

Where it has no effect:
It can't apply to following cases:(note:when a user is not eligible for salary then the user is not eligible for 6 salary eligible fields as well)
  When a user is not eligible for salary then the user's current salary is set to 0 hence whatever budget calculation based on current salary will be 0.
  When a user is not eligible for a field then it's related fields are set to 0(amount) or null(date).
    say merit then merit/meritTaget/meritNet are set to 0 and meritEffectiveDate is set to null hence budget calculated based on merit/meritTarget/meritNet/meritEffectiveDate wil be 0.
  The same theory is applied to bonus and stock if budget is based on salary fields during budget calcualtion.


baseCustomField is only used in conjunction with PercentOfCustomField mode. When using PercentOfCustomField mode, the baseCustomField is assumed to be a annualized the value, 
it is the administrator's responsibility to either do annualization in the formula definition or during the import. baseCustomField must be a read-only money|amount type custom field
defined in the template.  Budget is calculated before the planning, it only makes sense that base field is static. If base custom field has formula, all the fields 
used in the formula should be read-only also.         

applyRounding: This flag is used to indicate whether to round the budget 
value prior to saving to budget table. It is introduced during bonus/stock budget plan level to entry level migration, it is for the
backward compatibility. As we are moving forward, applyRounding should be set to true or omitted.

For example:
 <budget-calc useFor="salary" budgetOn="merit+lumpSum" mode="PercentOfCustomField" basedOn="user"
          includeIneligible="false" prorating="true" hidePercentage="false" importKey="CUSTOM_FIELD_BUDGET" baseCustomField="TTCAnnual">4.0</budget-calc>

-->
<!ELEMENT budget-calc (#PCDATA)>
<!ATTLIST budget-calc
	useFor (salary | bonus | stock | varpay | option | stockUnits | stockOther1 | stockOther2 | stockOther3) #REQUIRED
	budgetOn CDATA #IMPLIED
	mode (PercentOfCurSal | PercentOfMeritTarget | PercentOfLumpsumTarget | PercentOfLumpsum2Target | DeltaOfCurSal | DirectAmount | Guideline | PercentOfBonusTarget | PercentOfTotalGoalBasis | PercentOfCalculatedForecastBasis | PercentOfCalculatedForecast2Basis | PercentOfCalculatedResultsBasis | PercentOfCustomField | BudgetByIndividualGuideline | BudgetByTeamGuideline) "PercentOfCurSal"
	basedOn (user | group | template | planner) "template"
	includeIneligible (false | true) "false"
	familyName CDATA #IMPLIED
	prorating (false | true) "false"
	hidePercentage (false | true) "false"
	importKey CDATA #IMPLIED
	baseCustomField CDATA #IMPLIED
	allocationColumns CDATA #IMPLIED
  useFinalPayoutForVPBudget (false | true) "false"
  applyRounding (false | true) "true" 
  snapshotCustomField CDATA #IMPLIED
>
<!-- The attribute budgetOn is only applicable to salary (i.e. only when useFor="salary") -->
<!--
The element lumpsum-calc contains information about how to calculate lumpsum when lumpsum is in % input mode:
If basedOn = 'CurrentSalary', lumpsum will be a percentage of current salary
If basedOn = 'LumpSumTarget', lumpsum will be a percentage of lumpsum target
e.g  <lumpsum-calc basedOn="LumpSumTarget"></lumpsum-calc>
-->
<!ELEMENT lumpsum-calc (#PCDATA)>
<!ATTLIST lumpsum-calc
	basedOn (CurrentSalary | LumpSumTarget) "CurrentSalary"
>
<!ELEMENT lumpsum2-calc (#PCDATA)>
<!ATTLIST lumpsum2-calc
	basedOn (CurrentSalary | LumpSum2Target) "CurrentSalary"
>
<!--
The element merit-calc contains information about how to calculate merit.
If basedOn = 'CurrentSalary', merit will be a percentage of current salary (DEFAULT)
If basedOn = 'Target', merit will be a percentage of merit target
e.g  <merit-calc basedOn="Target"></merit-calc>
-->
<!ELEMENT merit-calc EMPTY>
<!ATTLIST merit-calc
	basedOn (CurrentSalary | Target) "CurrentSalary"
>
<!ELEMENT stock-units-calc (factor-table | (option-factor?, stock-factor?, stock-other1-factor?, stock-other2-factor?, stock-other3-factor?))>
<!ELEMENT factor-table (#PCDATA)>
<!ATTLIST factor-table
	key CDATA #REQUIRED
>
<!ELEMENT option-factor (#PCDATA)>
<!ELEMENT stock-factor (#PCDATA)>
<!ELEMENT stock-other1-factor (#PCDATA)>
<!ELEMENT stock-other2-factor (#PCDATA)>
<!ELEMENT stock-other3-factor (#PCDATA)>
<!--
comp-compounding specifies the way how percentages are calculated and what the percentage caculation is based on.
e.g. If customer wants
Base for promotion = salary,
Base for merit = salary + promotion
We can configure like below:
	<comp-compounding useFor="promotion">
		<percentage-calc-base-includes fieldId="curSalary"/>
	</comp-compounding>
	<comp-compounding useFor="merit">
		<percentage-calc-base-includes fieldId="curSalary"/>
		<percentage-calc-base-includes fieldId="promotion"/>
	</comp-compounding>
-->
<!ELEMENT comp-compounding (percentage-calc-base-includes+)>
<!ATTLIST comp-compounding
	useFor (promotion | merit | extra | extra2 | lumpsum) #REQUIRED
>
<!--
   budget-assignment-base-import-key: By default, the hierarchy salary is calculated based on the SALARY field or
     on the overriden import key in the currSalary comp-field-definition. However, some
     companies want the aggregate (ie, hierarchy) salary to be based on something else.
-->
<!ELEMENT budget-assignment-base-import-key (#PCDATA)>
<!ATTLIST budget-assignment-base-import-key
	label CDATA #REQUIRED
>
<!--
The element budget-assignment-base-custom-field specifies a custom field as base field to calculate hierarchy salary.
It is different from budget-assignment-base-import-key which specifies an import key. This element specifies a custom
field with formula as calculation base of hierarchy salary. There are 2 restrictions to the formula the custom field
defines.
1. The field ID referenced in this formula could be standard fields or custom fields with import key only. Standard
fields could be curSalary, unitsPerYear, lumpSumTarget and lumpSum2Target only.
2. The operators used in this formula could be +, -, *, /, ( and ) only. All functions and other operators are not
supported.
-->
<!ELEMENT budget-assignment-base-custom-field (#PCDATA)>
<!-- useFor=variablePay is obsolated and will be replaced by varpay eventually -->
<!ELEMENT calc-formula-def (#PCDATA)>
<!ATTLIST calc-formula-def
	formulaCalcId CDATA #REQUIRED
	formulaCalcName CDATA #REQUIRED
	useFor (varpay | variablePay) #REQUIRED
>
<!ELEMENT percentage-calc-base-includes EMPTY>
<!ATTLIST percentage-calc-base-includes
	fieldId (curSalary | promotion | merit | extra | extra2) #REQUIRED
>
<!--
The element final-pay-grade specifies how to use Final Pay Grade to calculate ratio and payguide.  
e.g. <final-pay-grade useFor="finalRatio" />
where the useFor attribute should be either "finalRatio" (default), or "allCalc".  
finalRatio ??? indicates the final compa-ratio and range penetration will be calculated using the final pay grade.
allCalc ??? indicates Final Pay Grade will be used for all related calculations: current compa-ratio and range penetration, comp-formula evaluation, and final compa-ratio and range penetration.
-->
<!ELEMENT final-pay-grade EMPTY>
<!ATTLIST final-pay-grade
	useFor (finalRatio | allCalc) "finalRatio"
>
<!--
The element proration-calc specifies what proration will be used for, how proration will be calculated.
e.g. <proration-calc useFor="salary" />
where the useFor attribute should be either "salary" or "raise". "salary" means it will be used for salary proration, "raise" means it will
be used for raise proration.
The element can have either imported-proration-calc or date-proration-calc element. 
-->
<!ELEMENT proration-calc (import-proration-calc | date-proration-calc)>
<!ATTLIST proration-calc
	useFor (salary | raise) "salary"
>
<!-- 
The element imported-proration-calc means the proration is based on import. 
-->
<!ELEMENT import-proration-calc EMPTY>
<!--
The element date-proration-calc specifies how to calculate date based proration. 
If the date-proration-calc element is used, we are requiring that the corresponding start/end date elements need to be included, the value can 
still be empty, which will be default to reviewStartDate and reviewEndDate.

canExceedReviewPeriod flag indicates whether we will use the raw user imported date when it is outside the review period. If the flag is false, the calculation will only
use those days that fall within the review period. For example, if the review period is 1/1/2008 - 1/31/2008, and the user's proration dates are from 8/1/2007 - 6/1/2008, 
then proration calculation will use dates: 1/1/2008-1/31/2008. If the flag is true, then the dates 8/1/2007 - 6/1/2008 will be used. 

both start/end dates are inclusive. For example: if the start date is 1-1-2008 and end date is 1-31-2008, the day span calculated is 31 days. 

compNumberFormatId specifies which number format to use to format date-based proration. When missing or can not be found, the "defProrationFormat"
will be used, if "defProrationFormat" is still not defined, the system default format for proration will be used, which is "#,##0.00". 
Support multiple if multiple is defined in the reference number format.
-->
<!ELEMENT date-proration-calc (no-rounding)>
<!ATTLIST date-proration-calc
	reviewStartDate CDATA #REQUIRED
	reviewEndDate CDATA #REQUIRED
	canExceedReviewPeriod (true | false) "false"
	compNumberFormatId CDATA #IMPLIED
>
<!--
The element no-rounding means the input start/end date are used for calculation without rounding.
-->
<!ELEMENT no-rounding EMPTY>
<!--
The element comp-job-selector is to specify whether job family/role selection can be editable in job selector
role can be readonly only when family is too, i.e. jobRoleEditable cannot be "false" while jobFamilyEditable is "true"  
-->
<!ELEMENT comp-job-selector EMPTY>
<!ATTLIST comp-job-selector
	jobFamilyEditable (true | false) "true"
	jobRoleEditable (true | false) "true"
>
<!-- Variable Pay
The following section describe the bouns program which is the root configuration of Variable Pay
fm-meta (meta-form-id?, meta-form-type?, meta-title? meta-create-date?, meta-start-date?, meta-end-date?, meta-lastmodified?,)
progran-name = meta-title
bonus-start-date = meta-start-date
bonus-end-date = meta-end-date

default field-permission for calculated-bonus is read
<field-permission type="read">
  <role-name>*</role-name>
  <field refid="calculated-bonus" />
  <route-step stepid="*" />
</field-permission>
-->

<!ELEMENT comp-variable-pay (comp-template-id, comp-goal-set-id, liveprofile-view-visibility?, bonus-plan?, legal-notice*, instruction*,
  performance-percent*, display-date-option?, assignment-based-rating?, show-unrated-rating-blank?, business-section, team-section,
  individual-section, comp-currency-view?, liveprofile-indiv-currency-view?, show-mgr-first-name?, show-mgr-last-name?, export-threshold?,
  varpay-ajax?, proration-rule?, apply-proration-after-section-calc?, apply-multiplier-for-section-calc?, apply-gates?, apply-accelerators?,
  history-processor?, varpay-guideline-pattern?, normalize-goal-weights?, include-eligible-users-only?, vp-background-element-id?,
  widget-landing-page?, freeze-first-cols?, ordered-by-cld?, varpay-hris-integration?, hris-allow-import?, hris-basis-proration?,
  hris-basis-proration-mapping?, hris-basis-mapping-config-type?, hris-basis-mapping?, hris-basis-pct-mapping?, hris-payrange-mapping?,
  hris-currency-code-mapping?, hris-paycomponent-group?, hris-rule-mapping?, hris-program-name-mapping?, hris-target-percent-mapping?, hris-event-reason*)>

<!ATTLIST comp-variable-pay
	affected-by-emp-performance (true | false) "false"
	bonus-cap-affects (none | employee | assignment) "none"
	display-assignments-descending (true | false) "false"
>

<!-- Define the compensation plan and variable plan interoperation relationship --> 
<!ELEMENT comp-varpay-refs (comp-varpay-ref*)>

<!ELEMENT comp-varpay-ref (#PCDATA)>

<!ATTLIST comp-varpay-ref
          template-id CDATA #REQUIRED
          ref-to (comp|varpay) "varpay"
          active (true | false) "false">

<!ELEMENT varpay-hris-integration EMPTY>
<!ATTLIST varpay-hris-integration
  enabled (true | false) "false"
>

<!ELEMENT hris-basis-proration EMPTY>
<!ATTLIST hris-basis-proration
  enabled (true | false) "false"
>

<!ELEMENT hris-allow-import EMPTY>
<!ATTLIST hris-allow-import
  enabled (true | false) "false"
>

<!-- This is the templateId in new template table
     For compensation with variable pay setup, the variable pay config info is stored in the old form_data table
     while the rest of eligibility, business_plan and business_goals are in new template table
     So the templateId is serves as linkage between the form_data table and template table.
-->
<!ELEMENT comp-template-id (#PCDATA)>
<!ELEMENT comp-goal-set-id (#PCDATA)>
<!ELEMENT liveprofile-view-visibility (#PCDATA)>
<!-- This is the legal-notice text shown in the individual view of bonus statement -->
<!ELEMENT legal-notice (#PCDATA)>
<!ATTLIST legal-notice
	lang CDATA #IMPLIED
>
<!ATTLIST performance-percent
	type (individual | team) #REQUIRED
	percent-editable (true | false) "false"
>
<!-- This is the flag which will indicate whether to Display program dates instead of outlying assignment dates-->
<!ELEMENT display-date-option (#PCDATA)>
<!-- This is the manager instruction text shown in the manager/exec view bonus program statement -->
<!ELEMENT instruction (#PCDATA)>
<!ATTLIST instruction
	lang CDATA #IMPLIED
>
<!-- This is for performance percent field -->
<!ELEMENT performance-percent EMPTY>
<!ATTLIST performance-percent
	type (individual | team) #REQUIRED
	percent-editable (true | false) "false"
>

<!ELEMENT assignment-based-rating (abr-team?,abr-ind?)>
<!ATTLIST assignment-based-rating
  enabled (true | false) "false"
  type (nil | goal | position | summary) "nil"
  pmform-matching-rule (nil | startDate | endDate | startAndEndDate | startOrEndDate | overlap) "nil"
  force100ForEntryIndivPercent (true | false) "true"
  force100ForEntryTeamPercent (true | false) "true"
  auto-update (true | false) "false"
  updateAssignmentFromPM (true | false) "false"
  oneAssignmentPerRow (true | false) "false"
  bonusCurrencyOnAssignment (true | false) "false"
>

<!ELEMENT abr-team EMPTY>
<!ATTLIST abr-team
  type (byForm | importByUser | importByAssignment) "byForm"
  auto-update (true | false) "false"
>

<!ELEMENT abr-ind EMPTY>
<!ATTLIST abr-ind
  type (byForm | importByUser | importByAssignment) "byForm"
  auto-update (true | false) "false"
>

<!ELEMENT show-unrated-rating-blank EMPTY>
<!ATTLIST show-unrated-rating-blank
  enabled (true | false) "false"
  text CDATA "unrated"
>

<!-- This is the flag which will indicate whether to exclude the user having ineligible assignment from VP form-->
<!ELEMENT include-eligible-users-only (#PCDATA)>

<!ELEMENT business-section EMPTY>
<!ATTLIST business-section
	show (true | false) "true"
>
<!ELEMENT team-section EMPTY>
<!ATTLIST team-section
	show (true | false) "true"
>
<!ELEMENT individual-section EMPTY>
<!ATTLIST individual-section
	show (true | false) "true"
>
<!ELEMENT bonus-plan (bonus-plan-name, bonus-plan-description, eligibility-rule, pool-id?, associate-type?, assignment-target-percent1?, assignment-target-percent2?, assignment-target-percent3?, assignment-target-percent4?, bonus-cap-percent?)>
<!ELEMENT bonus-plan-name (#PCDATA)>
<!ELEMENT bonus-plan-description (#PCDATA)>
<!ELEMENT eligibility-rule (#PCDATA)>
<!ELEMENT ec-eligibility-rule (#PCDATA)>
<!ELEMENT pool-id (#PCDATA)>
<!ELEMENT associate-type (#PCDATA)>
<!ELEMENT assignment-target-percent1 (lookup-name | direct-value)>
<!ELEMENT assignment-target-percent2 (lookup-name | direct-value)>
<!ELEMENT assignment-target-percent3 (lookup-name | direct-value)>
<!ELEMENT assignment-target-percent4 (lookup-name | direct-value)>
<!ELEMENT lookup-name (#PCDATA)>
<!ELEMENT direct-value (#PCDATA)>
<!ELEMENT bonus-cap-percent (#PCDATA)>

<!ELEMENT liveprofile-indiv-currency-view (#PCDATA)>
<!ELEMENT show-mgr-first-name (#PCDATA)>
<!ELEMENT show-mgr-last-name (#PCDATA)>
<!ELEMENT export-threshold (#PCDATA)>
<!ELEMENT apply-proration-after-section-calc (#PCDATA)>
<!ELEMENT apply-multiplier-for-section-calc (#PCDATA)>
<!ATTLIST apply-multiplier-for-section-calc
  single-multiplier (true | false) "false"
  single-multiplier-value CDATA "1"
  show-single-multiplier (true | false) "true"
>

<!--
By default, the ajax switch will be turned on even the switch element is not declared in template XML.
-->
<!ELEMENT varpay-ajax (budget-ajax?, group-total-ajax?)>
<!ELEMENT budget-ajax EMPTY>
<!ATTLIST budget-ajax
	enabled (true | false) "false"
>
<!ELEMENT group-total-ajax EMPTY>
<!ATTLIST group-total-ajax
	enabled (true | false) "false"
>

<!ELEMENT proration-rule (background-date*)>
<!ELEMENT background-date (proration-operator,proration-threshold)>
<!ATTLIST background-date
	type (startDate | endDate) "startDate"
>
<!ELEMENT proration-operator (#PCDATA)>
<!ELEMENT proration-threshold (#PCDATA)>

<!ELEMENT history-processor EMPTY>
<!ATTLIST history-processor
	mapped-bgbasis-with-pm  CDATA #IMPLIED
>

<!ELEMENT varpay-guideline-pattern (#PCDATA)>

<!ELEMENT normalize-goal-weights (show-blank-for-incompleted-weights?)>
<!ATTLIST normalize-goal-weights
  enabled (true | false) "true"
>
<!ELEMENT show-blank-for-incompleted-weights EMPTY>
<!ATTLIST show-blank-for-incompleted-weights
  enabled (true | false) "false"
>

<!-- By default, the value is false for apply-gates and apply-accelerators. -->
<!ELEMENT apply-gates (#PCDATA)>
<!ELEMENT apply-accelerators (#PCDATA)>

<!ELEMENT vp-background-element-id (#PCDATA)>

<!ELEMENT widget-landing-page EMPTY>
<!ATTLIST widget-landing-page
  enabled (true | false) "false"
  enabled-for-exec-review (true | false) "false"
>
<!-- This is for mapping the ECT reason codes -->
<!ELEMENT hris-event-reason (reason-code+)>
<!ATTLIST hris-event-reason  	
	type (jobInfo | compInfo | personalInfo) "jobInfo"
>
<!ELEMENT reason-code (#PCDATA)>

<!-- ECT basis mapping config type -->
<!ELEMENT hris-basis-mapping-config-type (#PCDATA)>
<!-- ECT Pay Component Group mapping -->
<!ELEMENT hris-paycomponent-group (#PCDATA)>
<!-- ECT basis mapping -->
<!ELEMENT hris-basis-mapping (#PCDATA)>
<!-- ECT basis percentage mapping -->
<!ELEMENT hris-basis-pct-mapping (#PCDATA)>
<!-- ECT pay range mapping -->
<!ELEMENT hris-payrange-mapping (#PCDATA)>
<!-- ECT currency code mapping -->
<!ELEMENT hris-currency-code-mapping (#PCDATA)>
<!-- ECT basis proration mapping -->
<!ELEMENT hris-basis-proration-mapping (#PCDATA)>
<!-- ECT eligibility rule mapping -->
<!ELEMENT hris-rule-mapping (#PCDATA)>

<!-- hris-target-percent-mapping and hris-program-name-mapping are obsolate
     and replaced by comp-ect-output-component-->
<!-- ECT target percent mapping -->
<!ELEMENT hris-target-percent-mapping (#PCDATA)>
<!-- ECT program name mapping -->
<!ELEMENT hris-program-name-mapping (#PCDATA)>

<!ELEMENT freeze-first-cols EMPTY>
<!ATTLIST freeze-first-cols
  enabled (true | false) "false"
>

<!ELEMENT ordered-by-cld EMPTY>
<!ATTLIST ordered-by-cld
  enabled (true | false) "false"
>


<!--                                                               
////////////////
// START MATH //
////////////////
These tags are a subset of W3C's MathML.
However, I couldn't get their DTD to work, so I wrote this one, based on
what we're going to support in the short term.
- Aaron Whyte 1/9/2005
-->
<!ENTITY % expr "(cn | ci | apply | piecewise)">
<!ENTITY % func "(plus | times | lt | leq | gt | geq | and)">
<!-- top-level expression element -->
<!ELEMENT expression %expr;>
<!-- number.  All numbers are "real" for now. -->
<!ELEMENT cn (#PCDATA)>
<!-- identifier -->
<!ELEMENT ci (#PCDATA)>
<!-- functions that take reals and return reals -->
<!ELEMENT plus EMPTY>
<!ELEMENT times EMPTY>
<!-- functions that take reals and return booleans -->
<!ELEMENT lt EMPTY>
<!ELEMENT leq EMPTY>
<!ELEMENT gt EMPTY>
<!ELEMENT geq EMPTY>
<!-- functions that take booleans and return booleans -->
<!ELEMENT and EMPTY>
<!-- 
piecewise:
Evaluates to piece expression 1 (the value)
if piece expression 2 (the condition) evaluates to true.
The piece all must be mutually exclusive.
If no piece conditions are true, evaluates to "otherwise" expression.
-->
<!ELEMENT piecewise (piece*, otherwise?)>
<!ELEMENT piece (%expr;, %expr;)>
<!ELEMENT otherwise (%expr;)>
<!-- evaluates to the function, applied to the parameter list (%expr;*) -->
<!ELEMENT apply (%func;, (%expr;)*)>
<!--
//////////////
// END MATH //
//////////////
-->
<!--
 This is definition of a offer detail form, the offer detail form is only a wraper around a offer detail template.
 All sections and fields are defined in the offer detail template along with the appropriate layouts.  The form 
 wraper is used only to take advantage of aproval routing.

-->
<!ELEMENT sf-offerDetail (offer-detail-sect, signature-sect?)>
<!--
 This is definition of a job requisition form, the job-req form is only a wraper around a job req template.
 All sections and fields are defined in the job req template along with the appropriate layouts.  The form 
 wraper is used only to take advantage of aproval routing.

-->
<!ELEMENT sf-jobreq (job-req-sect, signature-sect?)>
<!ATTLIST job-req-question-sect
	index CDATA #REQUIRED
	updatable (true | false) "false"
	defaultby-jobrole (true | false) "true"
	threshold CDATA "0"
>
<!-- ELEMENT question-sect (qsect-name, qsect-intro?, fm-question*, threshold?) -->
<!--ELEMENT qsect-name (#PCDATA)-->
<!--ELEMENT qsect-intro (#PCDATA)-->
<!ATTLIST fm-question
	index CDATA #REQUIRED
	removable (true | false) "true"
	required (true | false) "true"
	includedCalc (true | false) "true"
	disqualify (true | false) "true"
>
<!ELEMENT fm-question (fm-question-id, fm-question-name*, fm-question-desc*, fm-question-cat?, fm-question-lib?, fm-question-type, fm-question-weight?, fm-question-expected-answer?, fm-question-expected-dir?, fm-question-parent-id?, fm-question-parent-response?, rating-scale-id?, choices*, choice*, fm-comment*)>
<!ELEMENT fm-question-id (#PCDATA)>
<!ELEMENT fm-question-name (#PCDATA)>
<!ELEMENT fm-question-desc (#PCDATA)>
<!ELEMENT fm-question-cat (#PCDATA)>
<!ELEMENT fm-question-lib (#PCDATA)>
<!ELEMENT fm-question-type (#PCDATA)>
<!ELEMENT fm-question-weight (#PCDATA)>
<!ELEMENT fm-question-expected-answer (#PCDATA)>
<!ELEMENT fm-question-expected-dir (#PCDATA)>
<!ELEMENT fm-question-parent-id (#PCDATA)>
<!ELEMENT fm-question-parent-response (#PCDATA)>
<!ELEMENT fm-answer (rating-scale-id?, choice*, expected?, direction?)>
<!ELEMENT rating-scale-id (#PCDATA)>
<!ELEMENT choices (choice*)>
<!ELEMENT choice (#PCDATA)>
<!ELEMENT expected (#PCDATA)>
<!ELEMENT direction (#PCDATA)>

<!ATTLIST fm-question-name
	locale CDATA #IMPLIED
>

<!ATTLIST fm-question-desc
	locale CDATA #IMPLIED
>

<!ATTLIST choices
	locale CDATA #IMPLIED
>
<!--******************************************-->
<!-- SFForm: perfomance profile-->
<!--******************************************-->
<!ELEMENT performance-profile (performance-profile-sect?)>
<!--***** performance-profile-sect *****
 display-option: option for displaying the profile section
 job-description-header-name: the job description section header name. The default header "Job Description" would be used if not set in xml template.
 job-roles-header-name: the job roles section header name. The default header "Job Roles" would be used if not set in xml template.
 introduction: introduction for the profile
 content-definition: define types of contents included in the profile
 profile-subject: the subject of the form
 role: list of roles in the profile
 change-histories: change histories for the iteams (contents and roles) in the profile
 data-sources: collection to keep track of the input source of contents in the profile (map or from manual)
 ********************************************* -->
<!ELEMENT performance-profile-sect (display-option, job-description-header-name?, job-roles-header-name?, introduction*, content-definition*, profile-subject?, role*, custom-content*, change-histories?, data-sources?, emp-review?)>
<!ATTLIST performance-profile-sect
	max-role CDATA #REQUIRED
	max-comp-per-role CDATA #REQUIRED
	index CDATA #IMPLIED
	section-name CDATA #IMPLIED
>

<!--****** emp-review: store the employee ackowledgement request and history data *****-->
<!ELEMENT emp-review (requested?, history*)>
<!ELEMENT requested EMPTY>
<!ELEMENT history EMPTY>
<!ATTLIST history
    signed-by CDATA #REQUIRED
    signed-time CDATA #REQUIRED
>

<!--***** content-definition *****-->
<!ELEMENT display-option EMPTY>
<!ATTLIST display-option
	show-role CDATA #REQUIRED
	show-comp-per-role CDATA #REQUIRED
>
<!--***** the job description section header name *****-->
<!ELEMENT job-description-header-name (label*)>
<!--***** the job roles section header name *****-->
<!ELEMENT job-roles-header-name (label*)>
<!--***** introduction *****-->
<!ELEMENT introduction (#PCDATA | label)*>
<!--***** content-definition *****-->
<!ELEMENT content-definition (label*)>
<!ATTLIST content-definition
	type (Skill_Summary | Skill_Responsibility | Skill_Education | Skill_Certification | Skill_Age_Spec_Care | Skill_Physical_Req | Skill_Complexity | Skill_Environment | Skill_Protective_Env) #REQUIRED
>
<!--***** profile-subject *****-->
<!ELEMENT profile-subject (user-name, last-name, first-name, initial?)>
<!ELEMENT user-name (#PCDATA)>
<!ELEMENT last-name (#PCDATA)>
<!ELEMENT first-name (#PCDATA)>
<!ELEMENT initial (#PCDATA)>
<!-- a label element is already defined -->
<!--ELEMENT label (#PCDATA)-->
<!--
label - contains the actual text for text replacement for TGM UI

lang - attribute allows localization (optional).  If present, it must be a valid locale (as defined in LanguageEnum.getValues()
[en_US, en_GB, en_GB_SF, fr_FR, fr_CA, fr_FR_SF, it_IT, it_IT_SF, de_DE, de_DE_SF, es_ES, es_ES_SF, zh_TW, zh_CN, ja_JP, pt, bs,th, pl, cs, nl_NL, nl, ko_KR, ko]
-->
<!ATTLIST label
	lang CDATA #IMPLIED
>
<!--***** role ***************************************************************************************************  -->
<!-- This represents the role used in performance profile                -->
<!-- job name - name of the job role name                                -->
<!-- job-family-name - the name of the job family                        -->
<!-- order - display order of the role                                   -->
<!-- map-content - contents are mapped to the role in family and roles library -->
<!-- admin-sync-content - contents used in the sync process.  -->
<!-- *************************************************************************************************************  -->
<!ELEMENT role (job-name?, job-family-name?, order?, map-content*, admin-sync-content?)>
<!ATTLIST role
	id CDATA #REQUIRED
	change (add | delete | modify | none) #REQUIRED
	admin-last-modified CDATA #IMPLIED
>
<!ELEMENT job-name (#PCDATA)>
<!ELEMENT job-family-name (#PCDATA)>
<!ATTLIST job-family-name
	admin-last-modified CDATA #IMPLIED
>
<!ELEMENT order EMPTY>
<!ATTLIST order
	current CDATA #REQUIRED
	previous CDATA #REQUIRED
>
<!ELEMENT map-content (name, sub-content*)>
<!ATTLIST map-content
	type (COMPETENCY | Skill_Summary | Skill_Education | Skill_Certification | Skill_Age_Spec_Care | Skill_Physical_Req | Skill_Complexity | Skill_Environment | Skill_Protective_Env | Skill_Responsibility) #REQUIRED
	id CDATA #REQUIRED
	proficiency-level CDATA #IMPLIED
	change (add | delete | modify | none) #REQUIRED
>
<!ELEMENT name (#PCDATA)>
<!ATTLIST name
	locale (en_US | en_GB | en_GB_SF | es_ES | es_ES_SF | de_DE | de_DE_SF | fr_FR | fr_CA | fr_FR_SF | it_IT | it_IT_SF | zh_TW | zh_TW_SF | zh_CN | zh_CN_SF | ja_JP | ko | ko_KR | nl | nl_NL | th | pl | pt | bs | bs_BS_SF | cs | fi_FI | da_DK | tl_PH | he_IL | hi_IN | hu_HU | no_NO | ru_RU | sk_SK | uk_UA | cs_CZ | pl_PL | th_TH | bs_ID | vi_VN) "en_US"
	admin-last-modified CDATA #IMPLIED
>
<!ELEMENT sub-content (name)>
<!ATTLIST sub-content
	type (Skill_Responsibility) #REQUIRED
	id CDATA #REQUIRED
	proficiency-level CDATA #IMPLIED
	change (add | delete | modify | none) #REQUIRED
>
<!ELEMENT admin-sync-content (sync-admin-purged-role?, sync-content*)>
<!ELEMENT sync-admin-purged-role EMPTY>
<!ELEMENT sync-content EMPTY>
<!ATTLIST sync-content
	type (COMPETENCY | Skill_Summary | Skill_Education | Skill_Certification | Skill_Age_Spec_Care | Skill_Physical_Req | Skill_Complexity | Skill_Environment | Skill_Protective_Env | Skill_Responsibility) #REQUIRED
	id CDATA #REQUIRED
	admin-last-modified CDATA #REQUIRED
	manual-changes (true | false) "false"
>
<!--***** custom-content *****-->
<!ELEMENT custom-content (content+)>
<!ELEMENT content (#PCDATA)>
<!ATTLIST content
	type (Skill_Summary | Skill_Responsibility | Skill_Education | Skill_Certification | Skill_Age_Spec_Care | Skill_Physical_Req | Skill_Complexity | Skill_Environment | Skill_Protective_Env) #REQUIRED
	id CDATA #REQUIRED
	change (add | delete | modify | none) #REQUIRED
>
<!--***** data-sources *****-->
<!ELEMENT data-sources (data-source*)>
<!ELEMENT data-source EMPTY>
<!ATTLIST data-source
	item-id CDATA #REQUIRED
	input-source (map | manual) "map"
>
<!--***** change history *****-->
<!ELEMENT change-histories (change-history+)>
<!ELEMENT change-history (change-item+)>
<!ATTLIST change-history
	item-id CDATA #REQUIRED
>
<!ELEMENT change-item EMPTY>
<!ATTLIST change-item
	change (add | delete | modify | none) #REQUIRED
>

